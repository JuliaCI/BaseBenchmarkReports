cset: moving following pidspec: 4755
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.226402212 seconds)
loading group "string"... done (took 0.458471478 seconds)
loading group "linalg"... done (took 7.528821136 seconds)
loading group "parallel"... done (took 0.171397357 seconds)
loading group "find"... done (took 1.154818671 seconds)
loading group "tuple"... done (took 2.082981275 seconds)
loading group "dates"... done (took 1.318530768 seconds)
loading group "micro"... done (took 0.245925899 seconds)
loading group "io"... done (took 0.646254098 seconds)
loading group "scalar"... done (took 40.558838205 seconds)
loading group "sparse"... done (took 12.409328729 seconds)
loading group "broadcast"... done (took 1.10481525 seconds)
loading group "union"... done (took 13.614150108 seconds)
loading group "simd"... done (took 4.761916158 seconds)
loading group "random"... done (took 9.613134377 seconds)
loading group "problem"... done (took 1.98715043 seconds)
loading group "array"... done (took 22.404879181 seconds)
loading group "misc"... done (took 1.43380756 seconds)
loading group "sort"... done (took 3.576901448 seconds)
loading group "collection"... done (took 19.340982066 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.509549507 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135907222 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132029531 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146157086 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202241599 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143733286 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155876514 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112870622 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.971146037 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179667149 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152876763 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.510255193 seconds)
done (took 5.099602796 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.221118207 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092802328 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102722775 seconds)
  done (took 0.867912774 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076316072 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145047198 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094320295 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077674859 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094011875 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07754354 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094986807 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076716496 seconds)
  done (took 1.339140986 seconds)
done (took 3.186745987 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.72735578 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277779342 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202306354 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459434388 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196124066 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211859825 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67271294 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.360308514 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.249648976 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09958481 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142843533 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385854443 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136297739 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683037347 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089614273 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123032676 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176138579 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.467498696 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082009883 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109405606 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115495999 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141116225 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129072081 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089691301 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183515137 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083149274 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192883138 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106438935 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080365093 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285906892 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200274521 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687953088 seconds)
  done (took 10.864085419 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110928144 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132392818 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09638552 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137037616 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.131601086 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098380134 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083942535 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09607091 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120417583 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174118854 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112791256 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135144208 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093715696 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081948963 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113852959 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243416209 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120001944 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102727893 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099600532 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.101918517 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120354635 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111383645 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107737314 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09193006 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165904184 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219415911 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111350703 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125115285 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096285088 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115317256 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144219506 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142022414 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093937053 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080425079 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170571345 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123751038 seconds)
  done (took 5.098884059 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186327656 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119491799 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166678053 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.126993648 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160449795 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139426558 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159123093 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111979145 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.227910141 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119543231 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.180771617 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180000294 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139305609 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115131531 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081031561 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097672113 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079038423 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.637127156 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160895595 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132247437 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097105841 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103086596 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099432426 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365503287 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085709838 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095473279 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081359248 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081776312 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158034603 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080723651 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.157759414 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101638628 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100330598 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131404372 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19430097 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078367891 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123208429 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13372584 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078063891 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096352686 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177778402 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102807265 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077480924 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09694148 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102282961 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134700355 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13383628 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096844053 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080268918 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218462255 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079591909 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112965086 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.926884176 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180567991 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089390596 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095416022 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323536828 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097202247 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096779329 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07713584 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.258888245 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.180591444 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097610266 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079250991 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096077832 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080216296 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400679123 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080020988 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.643554518 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083196292 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107185843 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081922492 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095788547 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103758248 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087351417 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113455528 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079195262 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098392077 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078222727 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095917506 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081301078 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107289006 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101151342 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080251986 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16344674 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077751103 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113227432 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125865456 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082780115 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094921832 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128797723 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081802994 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09674036 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132364707 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081330227 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107968962 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098945976 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141641095 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08150996 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.172105827 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080194514 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1239818 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098759432 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113787328 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111458647 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09854302 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083975061 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09467936 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076857042 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163997987 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079869768 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097448184 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080505468 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10949775 seconds)
  done (took 22.38804076 seconds)
done (took 39.030560204 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326344127 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10064122 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101529368 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100917336 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098424512 seconds)
  done (took 1.478644962 seconds)
done (took 2.205194421 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287723476 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170486144 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094243953 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166217001 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093143457 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171671462 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159669971 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110417376 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216984612 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077617704 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161308257 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093588055 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076204387 seconds)
  done (took 2.63124732 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094120156 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113482909 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082003244 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110465502 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076474875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110166303 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091127155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116047976 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110053821 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084175686 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092753691 seconds)
  done (took 1.804414015 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092662839 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111887634 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082295219 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109424914 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075696248 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109686173 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091431612 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115181931 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109194443 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085030115 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092431743 seconds)
  done (took 1.797580893 seconds)
done (took 6.950233465 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090237333 seconds)
  done (took 0.808345528 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.913589607 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.897248219 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112164472 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147922083 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297437655 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189541392 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467236646 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124007339 seconds)
  done (took 11.076997994 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.143399471 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083882485 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101513439 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082878512 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099461935 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085171763 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099120667 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100605368 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085733985 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10230256 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082369799 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097520769 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101845707 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084688699 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097635292 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082187312 seconds)
  done (took 2.317164846 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119030965 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116191598 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104863828 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108090067 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086070079 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10425801 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105248461 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088385534 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100642913 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102269787 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090608292 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103768505 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101782052 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079062029 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104678713 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106979668 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085070539 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104087688 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104861165 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089006486 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105209706 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094902264 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08550003 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104825642 seconds)
  done (took 3.226926989 seconds)
done (took 18.153146405 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158382274 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107910779 seconds)
  done (took 0.995020224 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093541689 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11099229 seconds)
  done (took 0.93534333 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097261456 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095383294 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12082771 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107490473 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078727724 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094801382 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11942538 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079965488 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095766318 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079577939 seconds)
  done (took 1.703727329 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081568036 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108499242 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100070052 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094379008 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103753666 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093980819 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086617489 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097195798 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108679417 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075473576 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101839739 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113518208 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08461 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114860724 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10474191 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082316447 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100295193 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097765847 seconds)
  done (took 2.489761003 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077600867 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097270134 seconds)
  done (took 0.911351613 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07983512 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093787834 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079626313 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095874455 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094204827 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075786553 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09312225 seconds)
  done (took 1.347873511 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.468488008 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134652546 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.250438103 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084890521 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118707619 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301499744 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097073505 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08422095 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102145029 seconds)
  done (took 2.434755788 seconds)
done (took 11.551937969 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092941954 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116984951 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111556358 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.463627199 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105809593 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096486983 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159476453 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246414094 seconds)
done (took 2.133761284 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.150852651 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323951925 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113377453 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066503618 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095110772 seconds)
  done (took 1.341791259 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080255994 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099423767 seconds)
  done (took 0.92212391 seconds)
done (took 3.159048711 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111682059 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098135819 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076917181 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097489869 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07977403 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.0954986 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079576872 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095591467 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.07691121 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093193817 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096146639 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079496504 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.096436109 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.080604909 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096118691 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077137883 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094122495 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079882567 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094438146 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077615357 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09399582 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079597313 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094428659 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077573944 seconds)
  done (took 2.898968723 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09864311 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099010264 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102677169 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084858528 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101932114 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086378914 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101724675 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098018014 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085557431 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098446853 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100555393 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083967099 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098470528 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084353204 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098646463 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101233433 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08686903 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097260989 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082729443 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100427027 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101522019 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080308717 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100246448 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101561422 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083512083 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100329953 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082769264 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096867541 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101960279 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083358134 seconds)
  done (took 3.571940979 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08421883 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09395731 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077944537 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101371858 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077067512 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09682842 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076826302 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095102665 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078338881 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094365812 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079530645 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095050116 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078422668 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095756613 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078258281 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097455751 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106849384 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077244773 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094503807 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078094168 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097318477 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076915688 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09511829 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077187157 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094914905 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077126207 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095020659 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078246562 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095843385 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078096328 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097183898 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081386137 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094354812 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083732491 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098189849 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077812985 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097734418 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0936051 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078093278 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094062025 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076381167 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095143507 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077208262 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10143221 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077513121 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097322056 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078047916 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096392259 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078184012 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097844872 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078635371 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094277633 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079605499 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095171055 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098812517 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077235664 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09521173 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077028356 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094983688 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077420872 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094237459 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076161698 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097112352 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078085225 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109758416 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083519895 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094485958 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079517256 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094835316 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080493135 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095313851 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10812265 seconds)
  done (took 7.105574908 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082919056 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105808626 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080573939 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096649429 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075461149 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095455072 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099008099 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077866069 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097538449 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084821089 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095293581 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079614398 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096499579 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107337979 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078064295 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096513937 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084784488 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09234581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078511804 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099073346 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07849826 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098233987 seconds)
  done (took 2.732939533 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206757581 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104508986 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140925888 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107504224 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082613149 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105373611 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101557411 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08561421 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101690548 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082850725 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099277571 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101715149 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083043156 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09931438 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100144019 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084282635 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101660239 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085170467 seconds)
  done (took 2.630890954 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092842575 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098048057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10245464 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097988827 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098693839 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083035757 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103672622 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107139384 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08342416 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09763844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090363445 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100014181 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100496183 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081161829 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100201838 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080652741 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099813336 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080423611 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106983173 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104085111 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104447761 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090474456 seconds)
  done (took 2.862254906 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095764004 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099871239 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116364115 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084249291 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094990884 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080359971 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105070511 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080913267 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106403683 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099438667 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081481745 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097061933 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087563458 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09734436 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103745037 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080293788 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099935932 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080315129 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09926736 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076495523 seconds)
  done (took 2.625895978 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099951809 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099870121 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099189247 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090896629 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099449495 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081971188 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109167298 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098898421 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081709811 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123740806 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098354007 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081574389 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108260538 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104506432 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098808337 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090973979 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108093187 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109082152 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082264251 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098855331 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124736371 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082962937 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107919816 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.209027944 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082002776 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099432992 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098923822 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087726726 seconds)
  done (took 3.620065112 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080342923 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097855726 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077633693 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096253681 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077002177 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095993113 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076999066 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095585219 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080111646 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095794782 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080473049 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097346002 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080271376 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098159359 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08039875 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097798906 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082497936 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095450078 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078351756 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095236968 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080572983 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098075694 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080363864 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096331888 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078008855 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098016979 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079221223 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096157624 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081573059 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095434792 seconds)
  done (took 3.406177289 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090589572 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105628422 seconds)
  done (took 0.960555247 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077492861 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113897623 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077783763 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102163913 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085478325 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0996658 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106661267 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085546696 seconds)
  done (took 1.511996211 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09585253 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109265736 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083195653 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111812099 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108697535 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095288973 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159382874 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100342339 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086374083 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096426973 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111873375 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08010853 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104710781 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08024241 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104414924 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087699854 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096813338 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086108209 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100801458 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097852809 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082382219 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109461546 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083449104 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09593694 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082429046 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108786288 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107978688 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082254695 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10157656 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107758732 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086605054 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092758614 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082155325 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101059396 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0793976 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107383706 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110773214 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084573776 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107637141 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083664878 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110487047 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094607099 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087425873 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105069907 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092634574 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101088449 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083863041 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094976859 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097402265 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083358113 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094713531 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082203727 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093959103 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089008146 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103395472 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111933249 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080768182 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10087621 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084164267 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102487998 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088124751 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10198211 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084079612 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098604592 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106697687 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085903713 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107269199 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076496398 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093530202 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079215069 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107493544 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12243007 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089934287 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09979383 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082439097 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096968712 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103003851 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082614127 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106840941 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089632333 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099066155 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106089703 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089336565 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099694785 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083511692 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108061992 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097730228 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083515143 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096033822 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096484503 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09804181 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079825426 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096771765 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.1076602 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084940773 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099009731 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079138803 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106843184 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078985746 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100446435 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083168406 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099979322 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108804195 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088545914 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10606854 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107020121 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088351253 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099794061 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08383587 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096027295 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082743596 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10137232 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106629572 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075685928 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102625709 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084350192 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10088287 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088718834 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098031006 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082439825 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107362143 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106543831 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08023214 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096053587 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08484772 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099785414 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085875235 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105676682 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098112593 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076341563 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094928401 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08544247 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099385769 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086715089 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105248284 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102677256 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076434409 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098131712 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086788504 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106957302 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100111719 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081807798 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104169443 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082374013 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098651463 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088055032 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102361898 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0807233 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103592081 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101658612 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077136662 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103886389 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085147458 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098713146 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085596466 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104463301 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102819021 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08299458 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097916923 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086566441 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101277777 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081022188 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09891842 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098666066 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090834665 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102468183 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07868996 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096766666 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089770836 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09800122 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081685448 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098954347 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103332834 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083513894 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099261395 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081435097 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101631317 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111114366 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086662696 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102145295 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086782213 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109246509 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082155108 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101558965 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099620217 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084406617 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101310923 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089713689 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105466756 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10516339 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08379306 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096698293 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088196082 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10742389 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081275478 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097803513 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080329597 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103683724 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10675075 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085299114 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101077096 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080330164 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100744146 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103736896 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084732841 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099916521 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081183638 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105467742 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081195543 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107440814 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10170713 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090996225 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104141335 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077346673 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103460498 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098798616 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087450961 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094887436 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080237789 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099474546 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083569346 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099635394 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085363189 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094332699 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089695997 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108486163 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0998517 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080932364 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100562953 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09074506 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102576358 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08532549 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103314031 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105261216 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094143605 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099713409 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085892446 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109638103 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101119656 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075973727 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106564433 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081184503 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099866625 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081655974 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098804986 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085036739 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108935443 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10480561 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075696559 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103447901 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081096208 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.09953025 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078498587 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106276015 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103726926 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083669499 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108628796 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083523067 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102040986 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103871663 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082166296 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101488202 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.082965606 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10309245 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083294466 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103696326 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081739858 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102623092 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099167738 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080298795 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102177632 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082431462 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100118475 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087582681 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102520357 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081813881 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102477804 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10168153 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082819735 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10100601 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082145457 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104808963 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082887663 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101268436 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084781724 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095620223 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109221641 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081812767 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10893027 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083133875 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097815289 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086797648 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103663351 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105932476 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083369791 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101425722 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083719202 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101595026 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084994943 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109371724 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098727775 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091144682 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1067344 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08427097 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10416512 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082115762 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101789941 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100028648 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084032496 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102461549 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082552068 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10041554 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087300257 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103370459 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082034098 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102147267 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102658407 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082031043 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102578233 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076825161 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099984237 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08137325 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101072879 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090008545 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10215097 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103743022 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080445777 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102306002 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081499961 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097403425 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090039526 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11224229 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102648931 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090565474 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099601987 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083760922 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110566258 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095251935 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080055201 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098106652 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080053608 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109425365 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.0841276 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109206749 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101007833 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082063895 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098918967 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083477768 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099050602 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077146387 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09983787 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085546558 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103536356 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081183195 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101062739 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103451081 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08407919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109153399 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081981606 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102711898 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082739723 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098889761 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081451453 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099635126 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103846392 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083708963 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098828219 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079861268 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101220234 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08488006 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109881483 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083172255 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10320456 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089283748 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101201791 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104146221 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087146074 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095819472 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085814146 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101212695 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082697234 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100008035 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104990331 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086519346 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102900564 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089301372 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101648421 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08319317 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101259274 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098666719 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082999805 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10099538 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083822124 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10071791 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083878578 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109725981 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080995262 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102845093 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100727156 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083413799 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105960212 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084663402 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103883021 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109080856 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086617548 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103726904 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09008746 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105311697 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086144811 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103009921 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102624836 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089312494 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100652048 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09121633 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100976994 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083608305 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102392389 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080846769 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100840632 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100719934 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082119417 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105765721 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083777367 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100746101 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081853408 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099497889 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085347873 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105572567 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109540619 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085446028 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104710451 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077592261 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09882237 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083881202 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09883069 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085196146 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104406454 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107415346 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085818275 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102481292 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081896762 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108474761 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107171545 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087971987 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099329094 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088413928 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101836726 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086307058 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102293791 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083340008 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102897756 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106642375 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085219951 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100321701 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091193616 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106089508 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084324865 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104214972 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102388003 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083618532 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096405147 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083268004 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10377669 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08989768 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105409602 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101270155 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092698941 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101922994 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083606525 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107017554 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08264145 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108910808 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096449482 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084120686 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103425814 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0851206 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097006023 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082742309 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099473848 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085522736 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101726906 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078214593 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111122684 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108763558 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085826243 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100707258 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081731679 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097932718 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07802041 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100729438 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102909919 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084919549 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110578437 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083084325 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100862005 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079090331 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10285022 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086080908 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105136511 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079811802 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09664633 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10019048 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08680692 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10868109 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083010681 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101983347 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086305466 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104674859 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080694765 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106425068 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099034875 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088038523 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11217246 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084413112 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103133102 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107840039 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091463868 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102639949 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078794069 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103046575 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085378453 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103238957 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102527319 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084802597 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115960934 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086103638 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10137925 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082468126 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10414599 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101144359 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09021908 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103889541 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084044067 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106777098 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084676069 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110716581 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103754453 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08903055 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104016056 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085136497 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100789467 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102096173 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081524985 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100758416 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084307559 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103676137 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088573368 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109768916 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101704122 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09229506 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109344477 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088069026 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099022076 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082908034 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102014245 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079455827 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10375038 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100707852 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081738507 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100527365 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083148981 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102241731 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089837069 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105043502 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084594965 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102691265 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095738163 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085767276 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104353677 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083878353 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099324644 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084011378 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103168793 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089573564 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109501379 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102388197 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084837453 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104487437 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084211813 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097213392 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090237623 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101411857 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085843935 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101898244 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08263622 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10428165 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105266158 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089782537 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104323786 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085621928 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115939684 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104936461 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080883056 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099856844 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089130108 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100948467 seconds)
  done (took 57.353204871 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146229837 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079667966 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097953765 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078535138 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112705352 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098514122 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079253002 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099032234 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079268387 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102518876 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078356056 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09858898 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107679818 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123282081 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092410216 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10422602 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097945735 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080504063 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097517525 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080182444 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107823781 seconds)
  done (took 2.856829671 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104405519 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115778623 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114050659 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118395935 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088746553 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114848793 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113206029 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114115477 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098649487 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110465238 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117657971 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114427503 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090751971 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109388132 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110582545 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093082099 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119511096 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108115256 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115266033 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094900816 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112567209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113327381 seconds)
  done (took 3.206823444 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08398253 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101907167 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.083832898 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096743924 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083096885 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097967801 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087440075 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100024902 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086218176 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101352308 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081486856 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101656982 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104108348 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079090298 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101607635 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081102103 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150038431 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107017442 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083846914 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104411659 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098096432 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085579512 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09793255 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079150981 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102118121 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088750484 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103460664 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081316171 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101501578 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081858092 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102572423 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081295338 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104146743 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102448869 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081955148 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101117421 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082968951 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10178918 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078852802 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099834021 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083281583 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098131636 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083310862 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103482056 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081391103 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10085621 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084441765 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102594704 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097268125 seconds)
  done (took 5.426859828 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104272432 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160097349 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086088337 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141256 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119841768 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112738008 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086676353 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142562597 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101489586 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082327344 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121679339 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118404665 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103286503 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088476667 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107566243 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102700606 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084665201 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101499523 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087803945 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101913179 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107446928 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089156259 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119000586 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116398005 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108223229 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08209739 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10306696 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107605271 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096832979 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107814466 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109470344 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090048898 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120381836 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107154067 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082823351 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106196057 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12026314 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102314078 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087436759 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101288119 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087470658 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108531305 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108882642 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101954743 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103780108 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107689263 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085452752 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099863562 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117455191 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086268116 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111828219 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118684777 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107246536 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08386244 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108593882 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120085498 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084671983 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101005232 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087293335 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116578392 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100251496 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088117809 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117885442 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104364006 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111522339 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098733241 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10850456 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10726192 seconds)
  done (took 8.061466706 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09275607 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109758213 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11971463 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12010817 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090876906 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110301619 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110234342 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09009304 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109949679 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115624755 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109910245 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132681918 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085734835 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113935014 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110659919 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090784748 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109738448 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110963106 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090043077 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112289114 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110340386 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118926617 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0918892 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119659474 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141224441 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106059594 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090815809 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11141699 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119990758 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110118684 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123052173 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091341997 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110853985 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120257183 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123045278 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090485553 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103225809 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110495172 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091911029 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110670911 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105085658 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118516112 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090941679 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106134981 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109794738 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091632849 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119248947 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122268336 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11305462 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095801984 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110860094 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11991365 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110305486 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090233043 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119511535 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14541467 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119809627 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120076208 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110118483 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119131 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099498486 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128352789 seconds)
  done (took 7.624885753 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106736636 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114828842 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116668882 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099173088 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08211995 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108213862 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081671669 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10206288 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113382407 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092981152 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116066222 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107951523 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111306745 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096112323 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107710037 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111325225 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088352414 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108292292 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114167596 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10832365 seconds)
  done (took 2.918643738 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092629516 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122765455 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084084095 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112086719 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10754115 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090487415 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10625444 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106539298 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085067564 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106314775 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095515951 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115652973 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104927979 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090707651 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115818543 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111270613 seconds)
  done (took 2.47776639 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094602924 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116101736 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119062391 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084281286 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103087406 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079949714 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104410724 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09985706 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.07955548 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120183613 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084067409 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107499867 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103479439 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082212199 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100574809 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087353779 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10086162 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081153511 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106029307 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11973695 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09444529 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103099356 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104565136 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085956373 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104495367 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089413181 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105438461 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101308047 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08272553 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104130062 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083428635 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112752754 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100566255 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.082379492 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102085216 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081958613 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104534001 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084420888 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108051331 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10369943 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082365862 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103646067 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084760801 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105417412 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080434869 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105915442 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10090783 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091212555 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102240724 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084777547 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104280499 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106495499 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085648082 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114680574 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088556303 seconds)
  done (took 6.189569854 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099341283 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107895491 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079899669 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102316491 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088181205 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106683643 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108283356 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086737075 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105505349 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082764606 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105876484 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089128015 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107102897 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109059271 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087577401 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107922098 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079644336 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106570408 seconds)
  done (took 2.600927817 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090216267 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104423843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091305423 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105504479 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084294777 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10809509 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079749669 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104606459 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103119896 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084974489 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104982395 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086831796 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103389604 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086543937 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105254337 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085040027 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108264981 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102939674 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085058944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10159098 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087527177 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103539507 seconds)
  done (took 2.955891625 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117454586 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124287609 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092054817 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227490821 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103566081 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131526544 seconds)
  done (took 1.63643445 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109546661 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120136263 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105113973 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106762118 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114795377 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106942471 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087762287 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107460224 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117015255 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101221412 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10801641 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116681477 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117692333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096554729 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115057939 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113442204 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106676518 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087279346 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106446615 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127942418 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087417717 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117729734 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106393582 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08651231 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108232942 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117303236 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11722263 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12199211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087848908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117756245 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113196729 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086735553 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117958734 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121652055 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108589528 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097248789 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108684347 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127741548 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114104976 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096100396 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108443454 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115652626 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097127309 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113236351 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117659067 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107574261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093160376 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106776697 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108056077 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136050552 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094001966 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118125321 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115812148 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118345813 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117647796 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135039471 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102229974 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11802656 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115371944 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122087596 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116733952 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094110848 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117216606 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121706261 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115790218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116309844 seconds)
  done (took 8.117899582 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100740453 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125872434 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10795993 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123205758 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096499654 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106670665 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107136044 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087285441 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108370446 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10618613 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151601886 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088312526 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117026868 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11706142 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108417974 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088019102 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10786364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116845748 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086870793 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134234159 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10817646 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117293501 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117115545 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097204939 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122465453 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11511805 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107288835 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087600158 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108162423 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108157953 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094032144 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108483087 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117069137 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086225877 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119156564 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10756444 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087006662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114689464 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108539103 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114815768 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096944263 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127192019 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108535661 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107487439 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122649319 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087837758 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108505452 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085947267 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107417065 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107676154 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123297799 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101914303 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121797075 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117444408 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108460964 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088215658 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10805749 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10786734 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088426253 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114584465 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116107523 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108059239 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133755968 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088091433 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108861099 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118459239 seconds)
  done (took 7.992397343 seconds)
done (took 154.088181227 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097268169 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134912307 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095201965 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167924016 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105916105 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119017294 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138221069 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09719646 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106294411 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085361873 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106457628 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087049586 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172150942 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085256038 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106368982 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107215589 seconds)
  done (took 2.657645447 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199127021 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254091827 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102012486 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105888991 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088751519 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109479339 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104329885 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090281634 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109619307 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085273966 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108809882 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085479628 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.104925473 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085834014 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110140614 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088651487 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106301012 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087909668 seconds)
  done (took 2.877667162 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11265946 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145737604 seconds)
  done (took 1.114975916 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118029622 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179302807 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294468362 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154311072 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11796767 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125992655 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155719229 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130968738 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196428193 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.121887263 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121811043 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097603389 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139851506 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114820995 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093891921 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117759406 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1416975 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092775907 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115471016 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115655397 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117219577 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106320094 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115872389 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093382954 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179821855 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119803289 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085119344 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106446969 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115305603 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094167514 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112704643 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123853728 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097640354 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174360945 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102056802 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177473418 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097293226 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111863474 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114747491 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090586322 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118401421 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117807982 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103991625 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118147177 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086252985 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119059916 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104718572 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085731909 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114658051 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096842324 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115708013 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113329397 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153694718 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119008903 seconds)
  done (took 7.5002616 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792865364 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162952453 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089602764 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.880804217 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138693662 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103074353 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775574637 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133053667 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23503066 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758282183 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132881142 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121029968 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22636837 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.236346513 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.952838663 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310703184 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.668464849 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102454947 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149768382 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153270867 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118269918 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136860558 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128686664 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428370748 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094750107 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11312582 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116092871 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101251977 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158268942 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124855638 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114078899 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176644204 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268574221 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181678153 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115630828 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088457244 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111212078 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169167709 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265680301 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21497 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17933304 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087436268 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111827092 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120811179 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110683003 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10812448 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162963844 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195001411 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171855647 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092839732 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121947446 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119617207 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11989716 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163895605 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120565107 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29868544 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310444878 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111440549 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120934621 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105363315 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261963972 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121677372 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.220985726 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118072108 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210353503 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11048684 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778044261 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188581978 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090456373 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117537003 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119248824 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09435297 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121692891 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167930075 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407274408 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123102908 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093025945 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111366091 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205878503 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12510945 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110473981 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162078825 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115006044 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100603287 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126117788 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122664517 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169483919 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.235057098 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12353998 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119761824 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094407834 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125104245 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116213781 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214030375 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216799243 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16115617 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209301925 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122725773 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184728344 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166549751 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098750685 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193854838 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096666587 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125521112 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123130063 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215766089 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14544331 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121984187 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09375993 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118285284 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148568285 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12679898 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097764734 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191127356 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458702019 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166842947 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108657931 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126973114 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098051537 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181841383 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096191252 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260927946 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121774539 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168134155 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11900854 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087160141 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120199865 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163217487 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12306912 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120206702 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101053462 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119241783 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233941149 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217002694 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124164701 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218933748 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182917717 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119104267 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171083611 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121441002 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167235547 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120318613 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12123979 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094357072 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794929741 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123893086 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097659149 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116986321 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187492538 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111001588 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101301953 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124868316 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108896709 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792295139 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127821788 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121083569 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10158703 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118942623 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119793542 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116637025 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094487861 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160110363 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22830261 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121456517 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119597785 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102778179 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183489652 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094074796 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125928515 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125284825 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124259854 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100494893 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115359381 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12392371 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170287257 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161051309 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220650347 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.58784562 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090457665 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125727161 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227927985 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090366557 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28606837 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120064554 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222766332 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165012972 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120791862 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306995434 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166807639 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187394999 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126704006 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172690371 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086536589 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117906293 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163342176 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112380031 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116739673 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163534877 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125809099 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101318318 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959052252 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112260819 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229339814 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109236098 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170898586 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115922799 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100138481 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294230287 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1116258 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10593828 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186196169 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093050738 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125047528 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.866298186 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103449881 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122949669 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117741067 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222451268 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164643695 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11846925 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098050469 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121569702 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163371518 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210909695 seconds)
  done (took 44.109124484 seconds)
done (took 59.109729512 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273104486 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212670455 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257119001 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167264121 seconds)
  done (took 1.86424685 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169563591 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149191331 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119486203 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10693673 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149660146 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084530879 seconds)
  done (took 1.659665621 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.349740006 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268681891 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23771135 seconds)
  done (took 1.741200672 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.286001499 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250365862 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353930465 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.414788815 seconds)
  done (took 2.304183252 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207844323 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130609594 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111347694 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103546669 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196431176 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247829445 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140363295 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200969004 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.120848084 seconds)
  done (took 2.386428679 seconds)
done (took 10.839825765 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.261183502 seconds)
    (2/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.131809764 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.21714496 seconds)
    (4/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.242799556 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.238438516 seconds)
    (6/286) benchmarking ("sort", Float64, false)...
    done (took 0.152481914 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126918357 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12362575 seconds)
    (9/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.196991131 seconds)
    (10/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.18621353 seconds)
    (11/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.252113351 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.181552469 seconds)
    (13/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.212247042 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09413907 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.168260691 seconds)
    (16/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167796506 seconds)
    (17/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233734034 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.238623391 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.135320816 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.134694444 seconds)
    (21/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090247434 seconds)
    (22/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119466849 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094134289 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125227441 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133724788 seconds)
    (26/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103615738 seconds)
    (27/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.178438282 seconds)
    (28/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116475576 seconds)
    (29/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.152399203 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.225539362 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108696316 seconds)
    (32/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.163220825 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118789576 seconds)
    (34/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.187880597 seconds)
    (35/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129172261 seconds)
    (36/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.071416786 seconds)
    (37/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.0913822 seconds)
    (38/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.19927489 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163968157 seconds)
    (40/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148107661 seconds)
    (41/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068370961 seconds)
    (42/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.135394186 seconds)
    (43/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.099994244 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.138794518 seconds)
    (45/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.1702933 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.137288499 seconds)
    (47/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089747117 seconds)
    (48/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122841048 seconds)
    (49/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094240927 seconds)
    (50/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.124683047 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093256164 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117071368 seconds)
    (53/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.219593919 seconds)
    (54/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085125736 seconds)
    (55/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112115609 seconds)
    (56/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.121413827 seconds)
    (57/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.182985803 seconds)
    (58/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.157743233 seconds)
    (59/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.199303154 seconds)
    (60/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085312642 seconds)
    (61/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120053331 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066733491 seconds)
    (63/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125314359 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.225081252 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08896519 seconds)
    (66/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113383179 seconds)
    (67/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.162214018 seconds)
    (68/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.156158427 seconds)
    (69/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172682037 seconds)
    (70/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097068175 seconds)
    (71/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091113311 seconds)
    (72/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.131934656 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138992311 seconds)
    (74/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.18819203 seconds)
    (75/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.111650454 seconds)
    (76/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11970888 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.189119936 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101163366 seconds)
    (79/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.125192692 seconds)
    (80/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088072447 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135705463 seconds)
    (82/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112839268 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.144919544 seconds)
    (84/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085794301 seconds)
    (85/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083985253 seconds)
    (86/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120677935 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 0.086191397 seconds)
    (88/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.205908545 seconds)
    (89/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.143328937 seconds)
    (90/286) benchmarking ("sort", Float64, true)...
    done (took 0.230770664 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085621819 seconds)
    (92/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.184798974 seconds)
    (93/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172461836 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092459111 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.135729152 seconds)
    (96/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121718718 seconds)
    (97/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.150494021 seconds)
    (98/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116608905 seconds)
    (99/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.07048729 seconds)
    (100/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.090922337 seconds)
    (101/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.127182861 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110252668 seconds)
    (103/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.205332553 seconds)
    (104/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077651798 seconds)
    (105/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112566464 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09522504 seconds)
    (107/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.125106435 seconds)
    (108/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083987116 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11713034 seconds)
    (110/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08792142 seconds)
    (111/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066110161 seconds)
    (112/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119964622 seconds)
    (113/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170883475 seconds)
    (114/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086573285 seconds)
    (115/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125749178 seconds)
    (116/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.143867468 seconds)
    (117/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230157236 seconds)
    (118/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067407863 seconds)
    (119/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078662994 seconds)
    (120/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138401648 seconds)
    (121/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066142209 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.180322848 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119251708 seconds)
    (124/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066613073 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116795401 seconds)
    (126/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092804679 seconds)
    (127/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.090852669 seconds)
    (128/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.07795929 seconds)
    (129/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115809805 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093308691 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115740703 seconds)
    (132/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112208106 seconds)
    (133/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135107509 seconds)
    (134/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.070076673 seconds)
    (135/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090750794 seconds)
    (136/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066668926 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110481583 seconds)
    (138/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.118733593 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.18862673 seconds)
    (140/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087831788 seconds)
    (141/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110549972 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119051796 seconds)
    (143/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066379692 seconds)
    (144/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.119030723 seconds)
    (145/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091138358 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086310478 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091429645 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093398537 seconds)
    (149/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.099533292 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066213494 seconds)
    (151/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136721114 seconds)
    (152/286) benchmarking ("sort", Int8, false)...
    done (took 0.187143084 seconds)
    (153/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097770864 seconds)
    (154/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112442657 seconds)
    (155/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093972185 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11963555 seconds)
    (157/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098202534 seconds)
    (158/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108447773 seconds)
    (159/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219532916 seconds)
    (160/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.184851022 seconds)
    (161/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066787151 seconds)
    (162/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136761528 seconds)
    (163/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111365337 seconds)
    (164/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093827618 seconds)
    (165/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121616452 seconds)
    (166/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.149872203 seconds)
    (167/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118545047 seconds)
    (168/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117939559 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086860229 seconds)
    (170/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066711403 seconds)
    (171/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.183841265 seconds)
    (172/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117121583 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087209646 seconds)
    (174/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.173929952 seconds)
    (175/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.150927719 seconds)
    (176/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093313477 seconds)
    (177/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.066622586 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109712851 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119693704 seconds)
    (180/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.126629239 seconds)
    (181/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066722812 seconds)
    (182/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130203028 seconds)
    (183/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133321987 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100986043 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109180132 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110773837 seconds)
    (187/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067298863 seconds)
    (188/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094924001 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109188813 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.224739913 seconds)
    (191/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088291064 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108479049 seconds)
    (193/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067611083 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110460997 seconds)
    (195/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.114318638 seconds)
    (196/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090307902 seconds)
    (197/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092320773 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184662105 seconds)
    (199/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091192035 seconds)
    (200/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085779365 seconds)
    (201/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067370382 seconds)
    (202/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111101772 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09538269 seconds)
    (204/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.100697627 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094421367 seconds)
    (206/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136490297 seconds)
    (207/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173646365 seconds)
    (208/286) benchmarking ("sort", Int8, true)...
    done (took 0.22180889 seconds)
    (209/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069756028 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117743088 seconds)
    (211/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067119335 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08492279 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110230591 seconds)
    (214/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067586531 seconds)
    (215/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171194173 seconds)
    (216/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.29738133 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109545589 seconds)
    (218/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.155924374 seconds)
    (219/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067053934 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086035941 seconds)
    (221/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.106948048 seconds)
    (222/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067248862 seconds)
    (223/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118492849 seconds)
    (224/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067003408 seconds)
    (225/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067339134 seconds)
    (226/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099683469 seconds)
    (227/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088216078 seconds)
    (228/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111044817 seconds)
    (229/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067628517 seconds)
    (230/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171561433 seconds)
    (231/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087639 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10976062 seconds)
    (233/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.126904276 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13792834 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109298475 seconds)
    (236/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.117366325 seconds)
    (237/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089856379 seconds)
    (238/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087426556 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108635182 seconds)
    (240/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083981082 seconds)
    (241/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.06665221 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116579489 seconds)
    (243/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116925618 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094757982 seconds)
    (245/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066369516 seconds)
    (246/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132670591 seconds)
    (247/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134241604 seconds)
    (248/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067523846 seconds)
    (249/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066730369 seconds)
    (250/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116711492 seconds)
    (251/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076366609 seconds)
    (252/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114128012 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086435631 seconds)
    (254/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116277934 seconds)
    (255/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090405583 seconds)
    (256/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090425491 seconds)
    (257/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067443117 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116902869 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084734725 seconds)
    (260/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122844331 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086421128 seconds)
    (262/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.11622648 seconds)
    (263/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066811562 seconds)
    (264/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066550779 seconds)
    (265/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090095659 seconds)
    (266/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098832692 seconds)
    (267/286) benchmarking ("sort", Float32, false)...
    done (took 0.173626548 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118330307 seconds)
    (269/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067339244 seconds)
    (270/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067122914 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11610585 seconds)
    (272/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.06784449 seconds)
    (273/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090452497 seconds)
    (274/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087459493 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111010795 seconds)
    (276/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186267318 seconds)
    (277/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.15745459 seconds)
    (278/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101744244 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093023516 seconds)
    (280/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163279056 seconds)
    (281/286) benchmarking ("sort", Float32, true)...
    done (took 0.232481206 seconds)
    (282/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093532197 seconds)
    (283/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11360944 seconds)
    (284/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067248295 seconds)
    (285/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119417926 seconds)
    (286/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093376951 seconds)
  done (took 35.942853515 seconds)
done (took 36.827609606 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099185176 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146895004 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096305805 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134795319 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123448347 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090745433 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118859275 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097400936 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122754263 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124531855 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09891149 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09315891 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09580803 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119575781 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095707904 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13745595 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123010384 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092658575 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118772971 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08592636 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118320218 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086096073 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111078634 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069373459 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121164927 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093706676 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115386584 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119159193 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086004583 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109522313 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092166187 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117317237 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08611435 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122894223 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092474909 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118698172 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096837668 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119966795 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112068713 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086963308 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118097296 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085935809 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11610576 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094776371 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115665845 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092130419 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117981044 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099605583 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137947947 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114425413 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094186716 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121559463 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095537742 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117755002 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090606637 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118291556 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091422949 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13875894 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118910239 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092118281 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118241571 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09391217 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115515637 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094797582 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117963694 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120297462 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096956088 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115602706 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095626326 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115869123 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08608785 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118220306 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089343734 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109646009 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095402873 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120908081 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108477236 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.091896581 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117083849 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092368069 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108958407 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089178748 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112348347 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09244397 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112139444 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069792314 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113805348 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092416873 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110212646 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095677814 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115808992 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093903887 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112181477 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098865741 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110431575 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092100466 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110964109 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086481732 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113410973 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090309721 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109932491 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0892919 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.12035742 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112787122 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093113149 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122640168 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086581523 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116271951 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086432872 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109341656 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101172581 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120791982 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086625553 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115758144 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08629714 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119194699 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085397518 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110104221 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110197551 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086450427 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11630203 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087086581 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113072853 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09346836 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124807552 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086856763 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113553032 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089560632 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111000679 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09218277 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110858349 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087555329 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112067148 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077564787 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112981981 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086804224 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117794457 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090042965 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120099418 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088761188 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119796254 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092576504 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116367141 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11522182 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.08567456 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074578993 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116404551 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089317632 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113362135 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087030653 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111802516 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087528535 seconds)
done (took 16.850743589 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08722757 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182036069 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150190322 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141300157 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107144235 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111773209 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12142239 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117767534 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112810952 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141941355 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109851046 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131135981 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147198811 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086975049 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111671598 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090782213 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112745361 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101897067 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145489607 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13227381 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163691352 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086956104 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145408021 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135570428 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120673084 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114029252 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112124555 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090782723 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114586328 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102556621 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132389719 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114832789 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087922139 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133025944 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104153371 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118871073 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087127906 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118448404 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087280327 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112172562 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141447976 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13318357 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09250755 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117842389 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091189051 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114271091 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089035111 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11977759 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097320682 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115844298 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125473232 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156352188 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090749298 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121869608 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086105823 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123158649 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120973134 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089964783 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111462423 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089911633 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111128293 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092226466 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126545679 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141088517 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091626289 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121821949 seconds)
  done (took 8.575641031 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103837743 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139746122 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104877925 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13071026 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111483344 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08778892 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112840152 seconds)
  done (took 1.739232302 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088307353 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13420733 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111153024 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135814813 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131854539 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111946428 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123227489 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088215077 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132387164 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089105331 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133653548 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149617813 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088941295 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120868395 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136933127 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089498375 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136920435 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088029904 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116505638 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136314066 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0909585 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13465525 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090420652 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112979974 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102457297 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113710645 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161624209 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093678546 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114297002 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092042006 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111766394 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.15116503 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102733981 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124655562 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0886594 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129155788 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127884499 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086777984 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125445492 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094114043 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127064607 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09045944 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115430671 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086877375 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118753037 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099284093 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.11708483 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.131187469 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091452368 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133188194 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089621907 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127464877 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088403278 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118267701 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089762818 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119492085 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097904258 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113837726 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132553333 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090799174 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130695495 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104524614 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127516622 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129425249 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091837104 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127130404 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103108854 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116539927 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091141343 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116862755 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104989108 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112564415 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114640026 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099357054 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116098773 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11216001 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136565263 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090143024 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124954589 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113816996 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089614898 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113959398 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111994413 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117962402 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088950664 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117432787 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091514823 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112455792 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088194291 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11765632 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087712946 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115593587 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091911762 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114323546 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091628634 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131289556 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114338926 seconds)
  done (took 11.784427884 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090292238 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114672485 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091591669 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114744365 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09064855 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11495144 seconds)
  done (took 1.57783182 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116010157 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.1171691 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103897608 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120401604 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155187249 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103996326 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129331006 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122983749 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108544336 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127313444 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129065808 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105592302 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13517212 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120771261 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103425069 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121010038 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104008481 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124836346 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127260238 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097002118 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137295951 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120413679 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09690397 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130940849 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.1182953 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096587602 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125065007 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104387115 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127127731 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123112797 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095908695 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118006265 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095234029 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123056077 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129486282 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096259332 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120791898 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118270254 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100023309 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117578899 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103869103 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121182535 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127193966 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094325207 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12278251 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120574324 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094320364 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125154208 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103136959 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118984465 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122379887 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095261122 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119653419 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093726763 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122703991 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124702162 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094498401 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12920825 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12105545 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096162246 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118637702 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092666368 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124640395 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118661529 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103733674 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119709039 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121057195 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096802297 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121968149 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095836902 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120039946 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092564706 seconds)
  done (took 9.209168 seconds)
done (took 33.834955994 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686071635 seconds)
  done (took 1.643572465 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.810583463 seconds)
  done (took 1.771784787 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.848029533 seconds)
  done (took 17.841754221 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.488848184 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.572852904 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.975244667 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177780193 seconds)
  done (took 3.175160287 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.939097862 seconds)
  done (took 1.918533199 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281371458 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233372714 seconds)
  done (took 1.480389404 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769296856 seconds)
  done (took 1.743541715 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.357662216 seconds)
  done (took 2.323657199 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323438758 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.1832572 seconds)
  done (took 1.479157797 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547517656 seconds)
  done (took 1.518348314 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.979239593 seconds)
  done (took 10.95582097 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266651601 seconds)
  done (took 1.249093637 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300065761 seconds)
  done (took 1.273477841 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.450301256 seconds)
  done (took 4.428680046 seconds)
done (took 53.77691766 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09988209 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126960965 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101677717 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123517974 seconds)
  done (took 1.417380533 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103832872 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120411683 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100278713 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11999387 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12630042 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095779544 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12298661 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101509878 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120599168 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097316174 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121655346 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119783877 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098461139 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122769299 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094112028 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123584596 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123939103 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095584585 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12404112 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095503503 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117755696 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097568502 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124614804 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094756365 seconds)
  done (took 3.643571115 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102835202 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119412576 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096146405 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117890805 seconds)
  done (took 1.425710732 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102712428 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131954424 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.10509464 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125207152 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13171421 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104981455 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116684538 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092543507 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119714203 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099479421 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115936421 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138590726 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107418065 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124340997 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1013329 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114024709 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090061554 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131047026 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123980223 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100554205 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.1186887 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098915668 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114496387 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.107996474 seconds)
  done (took 3.701976529 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172312503 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126996791 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13787747 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095703766 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159732744 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.13956898 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08804823 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140318424 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08829924 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131092153 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118076691 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132321084 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130472826 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087174755 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113093614 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087240031 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.1280749 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128573353 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090776368 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12659999 seconds)
  done (took 3.414975741 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099406715 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117319431 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088810841 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116167763 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099272687 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120453362 seconds)
  done (took 1.631782019 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094502107 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113952284 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090708331 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114271016 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094468458 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114844017 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08861861 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11414804 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090002044 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114234275 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088990371 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11376294 seconds)
  done (took 2.221640714 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.504084483 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119294602 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119489409 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089351102 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12225574 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088686369 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129390438 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092788548 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140765712 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088428392 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115521275 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093369279 seconds)
  done (took 2.691419807 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238639458 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126295933 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283259072 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364530345 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154426485 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164971436 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279611259 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160448048 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195990232 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149550967 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230103387 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196884373 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151872425 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19014448 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13781228 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145014822 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188773969 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249550039 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152586143 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209995747 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205912734 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166468032 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179246206 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151387991 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112547235 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19161416 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094550979 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129800904 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232215022 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17772837 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1878902 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160336664 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146646592 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235727013 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247175971 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195747674 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277293863 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133783705 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166192669 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142071641 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264075785 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138982947 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233072337 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155568285 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104334621 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219912279 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165159976 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175809114 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145775323 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138764622 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19730959 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241675798 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192104371 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138842913 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298537527 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147360084 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157997489 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187870182 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249750358 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226390334 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188187402 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120433228 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187835492 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190946383 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211669691 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151342288 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181789437 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14705944 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181718848 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188927661 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165346853 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204060587 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.17909083 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138129999 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170038003 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17259722 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172470956 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257688354 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18400505 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122383244 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169575005 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149547851 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13016897 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167509581 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125329479 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21411376 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143576605 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163598256 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207376303 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158407934 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160624857 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220001431 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183698213 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147901772 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083389554 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152453171 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154225028 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175612718 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13896305 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157837402 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156308924 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129307725 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169334809 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097189115 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209883604 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091257426 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173163438 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210906183 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099643766 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161383789 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15284812 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150671824 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177861155 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197585815 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140446571 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13351255 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209636097 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180297017 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141249156 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176834321 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228787339 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117409152 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148665463 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225409877 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242583832 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11308544 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2270162 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151741407 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107501273 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133049059 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18073806 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156497844 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161905439 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132562258 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182194748 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231931103 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098405752 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139425955 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194989586 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134237882 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130885435 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153881063 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145803209 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110687262 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142968366 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145015895 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175610991 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178044423 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154540534 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166745618 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148951265 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247904924 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139199709 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150639745 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121384504 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121358133 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192310469 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224992711 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1032504 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233255873 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170575656 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223187458 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169072788 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106436605 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176137997 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129683846 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119665527 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193284229 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167159806 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160750704 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196026256 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22019527 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178763025 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.2096773 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165995074 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173211343 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164379856 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156214339 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110012925 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159390118 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157988854 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124580589 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138211599 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107081746 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149245352 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142042129 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132255209 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196486461 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168713295 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216374501 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158379958 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14829478 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179189683 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101088842 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202169367 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.1795397 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145995579 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198163495 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192077424 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212084741 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116983868 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2272761 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120332185 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098371456 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141654749 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169044171 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133204357 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108422871 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161744337 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206865858 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180287133 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171711064 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230419752 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17495287 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191609511 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094559219 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167428605 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184052322 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202890171 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154607375 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138259623 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151475404 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177260395 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154790027 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254431131 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167128464 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176185185 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23354784 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122378587 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131328463 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149721615 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17639587 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152796536 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175256135 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146400162 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138849702 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160520338 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.101906424 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186753935 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185532572 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164011195 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186612629 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149401173 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211060005 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099938114 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161174486 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159876386 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164723647 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108924675 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17524609 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20084666 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146274427 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165699389 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21528345 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103985147 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308211121 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234095709 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194555497 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137549886 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154985385 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160468391 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162034096 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169759296 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178629548 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157975513 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186781826 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159329765 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136805007 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137757457 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121694436 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15150772 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132505145 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14923061 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175801794 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139241484 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187169209 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154751829 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159732811 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171576543 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150215975 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143611607 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149180977 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216264346 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18320118 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237980879 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149922271 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178429308 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204620334 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126680257 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131366468 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106348877 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177663456 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135698349 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217824432 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186654593 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199211826 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206842039 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177953847 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138775183 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093456493 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157683677 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168298055 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227298448 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148622828 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.119631997 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229598782 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.1083771 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132507146 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16634613 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290116616 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143542741 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221782527 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080730689 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281525955 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125898934 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104253785 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163455397 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234612536 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135012224 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152429026 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166944495 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160018314 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162094251 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149019478 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216052706 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209235389 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224669657 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184062617 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10432118 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157021858 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201519005 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192724198 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155776891 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138556859 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205157012 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194332626 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222440702 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.112715429 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195517433 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167011589 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157644832 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185969069 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13411221 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205763217 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13440226 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190190319 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152472319 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136855499 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17596341 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.213848137 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113611273 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213854305 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183336891 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135139288 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104883185 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192473098 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178854078 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153679447 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099868697 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208149071 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097345624 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219155044 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2342573 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132982338 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154197221 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146246482 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108562082 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153783545 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156780449 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138139112 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163117734 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201716892 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134625984 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190187664 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229220927 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170653481 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170847628 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145984149 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692475101 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130805806 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194659162 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147160784 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205264321 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150823065 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172327723 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159576122 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168604664 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221953858 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160816375 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231002744 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191768578 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177528864 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133107716 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157333788 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154826722 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144670039 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152803561 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169160268 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160463674 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145499625 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178528278 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164683482 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134284519 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111764501 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224700644 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119459962 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214151008 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178792651 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109424937 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199628737 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185330506 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13317463 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17950624 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233686136 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113385642 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149076572 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13357758 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151446972 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26063891 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096709577 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217032962 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184930937 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158434528 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168256871 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146414564 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191688449 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156743841 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212241692 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115160972 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158487972 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156345963 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137724423 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13093803 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155263492 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168581278 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120534181 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187124936 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13801563 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192742382 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124270912 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144250708 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284966875 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177580409 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243293267 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106803337 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136458781 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163332703 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149604451 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17620674 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17790393 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135994166 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13391917 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135845306 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.128709355 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111812125 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155288155 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190357338 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191153846 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206503613 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13418762 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277445572 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112726438 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15553282 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114164727 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104688916 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14948561 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14554504 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155286493 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191672105 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259454042 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14620618 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132328696 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147435934 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099052784 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134760653 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161850679 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164330739 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179748536 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14339511 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081343497 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154531858 seconds)
  done (took 82.087268469 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163633 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131629285 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146875659 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201001861 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174439786 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268701586 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211233643 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252705078 seconds)
  done (took 2.633620898 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093979959 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145085505 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155898597 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132071864 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091456571 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.1194438 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340691444 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13281738 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116286767 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120947638 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173205138 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093420668 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.545148717 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090466451 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119597154 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106755048 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091926397 seconds)
  done (took 3.740704277 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.154700346 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.497433842 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.94579764 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193882789 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159084695 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117233705 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.704850369 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095381519 seconds)
  done (took 11.953492884 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114874558 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136582967 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123819888 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152824123 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140302065 seconds)
  done (took 1.765460483 seconds)
done (took 123.299139827 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096984667 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127396957 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097139432 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130232271 seconds)
  done (took 1.52487902 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094521435 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070667395 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100209851 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075351367 seconds)
  done (took 1.42556494 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188922904 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166468621 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381306043 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071485617 seconds)
  done (took 1.570539432 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113891883 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131862132 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104094778 seconds)
  done (took 1.446376044 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106606276 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129086425 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102933966 seconds)
  done (took 1.429968784 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106108357 seconds)
  done (took 1.199448047 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107773264 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136383767 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108921933 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136082005 seconds)
  done (took 1.578549685 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098102486 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126253825 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108180086 seconds)
  done (took 1.422833035 seconds)
done (took 13.040178977 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10355578 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423373547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.443599134 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110013983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720324006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380222616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030078547 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145181655 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165312851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093711846 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137359537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670647314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.058803841 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378176251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015694252 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377670517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.682756933 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120629552 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091826124 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121623907 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014088884 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092567658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120877797 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091504596 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704604864 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.396936325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122657974 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37594371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091975041 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124915831 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383297141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121985714 seconds)
  done (took 16.991964577 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094669492 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172839105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097955991 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123447695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122618987 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094638592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123624247 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093586286 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178954618 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122360822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109396522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121884947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12458066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094725211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140247259 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094558099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124602686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092063499 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121604009 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093923637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138869108 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119218037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094071541 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121253931 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092870252 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135585025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094036176 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120759826 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120077532 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098478822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126879928 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094381766 seconds)
  done (took 4.790730647 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14028029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180783508 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127221235 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125545624 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166790174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123543856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197739222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116592011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180859042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121885671 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139041987 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092430936 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156176569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121673913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113426949 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120889883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095708105 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121445491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091840612 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122150257 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138841067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092992775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121904913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093559949 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121930629 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108241114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122992543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120183642 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094246088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126392555 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099294941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123410797 seconds)
  done (took 5.119247787 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097747819 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125101337 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108938872 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137813138 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095197339 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12524972 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097452053 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123653453 seconds)
  done (took 2.008342181 seconds)
done (took 30.003505533 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110893202 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12680377 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107440964 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133991901 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102816593 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131203962 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091192101 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132491918 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133104407 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101483471 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136570003 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092183396 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122327219 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091882649 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133919421 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097227158 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132110252 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101609991 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133824096 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13067126 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094488628 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132160309 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102476411 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131876307 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103391259 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132581952 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135658137 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099472181 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121435438 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094286555 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123407898 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103080954 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123427325 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104135615 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12643587 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096616212 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123432654 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093311449 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132566375 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131793509 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099513864 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132742183 seconds)
  done (took 5.971992974 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107245967 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138743754 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104453023 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081619204 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116855097 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080199319 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136668501 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078787284 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109638453 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107539549 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074230163 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105594822 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078086389 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100710202 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077983033 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.0760025 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107815506 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075864112 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076124915 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106341429 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079461115 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072972622 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108024355 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079175681 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074479101 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109537602 seconds)
  done (took 3.568926827 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100090283 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13371052 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112473782 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181890678 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16031546 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099101731 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131017239 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138741131 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108099071 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121208288 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096393238 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148180567 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109284259 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128923845 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090891958 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135947518 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134791374 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09388762 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127702642 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111838692 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138325862 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101968887 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141100676 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131837046 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091552194 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122389441 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096086395 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134422636 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097520776 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132196777 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096661463 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125382822 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122853926 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104952367 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125451764 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094764006 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141451226 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102460053 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131013267 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121393048 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100977476 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121317178 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113306601 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160514264 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091118659 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128281239 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123302572 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103590556 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120647641 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110191098 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130505173 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091747297 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124329165 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091357011 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121467047 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10684847 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123198812 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09474413 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130895976 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126123793 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105175548 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125003543 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108457131 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122100659 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100371238 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121458312 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092078027 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121088868 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142704056 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093972587 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160687172 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093208693 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123329412 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10099668 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129590805 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128042249 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092855935 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13714933 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10261758 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125301638 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101666811 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125317239 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094647374 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139647533 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122761285 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09533865 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122393686 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099949915 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123734864 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093796319 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135978302 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091643996 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125194367 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109643044 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122069649 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122778047 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100177361 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125713843 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091814552 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135760843 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098540935 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122653112 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130868243 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094590181 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124567192 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10369706 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126647241 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092186069 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127735916 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099043641 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123634111 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09412725 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126247168 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09350979 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131734855 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128548394 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097760534 seconds)
  done (took 14.768486488 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229250796 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21430068 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204984568 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.290979614 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135253484 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113918905 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210347367 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155495216 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123573942 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159344517 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171463567 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180484904 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138199869 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.211224279 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168468497 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09244538 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142648209 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13511967 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.243832776 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.25632603 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144278085 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.10114948 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163853847 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159805917 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138206738 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.1318807 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110135247 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133363721 seconds)
  done (took 5.784504128 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109716119 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154631412 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098320939 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143929755 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148991576 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092938156 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127838935 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093669167 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135670346 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135567915 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093481695 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129285973 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099865295 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131669457 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122417919 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103047481 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13174593 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094790782 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126252734 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097684357 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133469289 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102862723 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126446052 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120801008 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102402027 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121534096 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086907948 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143043049 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121610194 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115281386 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120342135 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101688462 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136488806 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092967584 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122729373 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094339694 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124421424 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094294871 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124402577 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091907662 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122333518 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077349576 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122131302 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136317567 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099390338 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080230756 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129961381 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127721284 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09523692 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120733384 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096385636 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125557554 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097348896 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13024505 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096931852 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123969207 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097417056 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116185959 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10005794 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12538248 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084931449 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120950729 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098660481 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117453953 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101309306 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127695397 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092835592 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125073294 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096985503 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129061122 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094716795 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129254212 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090736657 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126227694 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095890742 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12884455 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.1255763 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093069604 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122294398 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094017481 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074513217 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12420184 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073708743 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125998497 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091441125 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121766703 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094807679 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129614587 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137423994 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095344454 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131692784 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09393019 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12298836 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097392273 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113695507 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096748645 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139484591 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141858808 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093467896 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121292576 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106984798 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125698902 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092651843 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106180012 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102344731 seconds)
  done (took 12.948020539 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130373312 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154066123 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124435484 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111684271 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156169595 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157658608 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101978604 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130408014 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095137835 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142269896 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093978399 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132309316 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094216582 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138911156 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156409675 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.1042231 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125171555 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108056099 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12865634 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169300762 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11154414 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142563379 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110487142 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124079686 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128907021 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110841565 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160265069 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10730202 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136692849 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142122296 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108443376 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160889009 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143542888 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098173693 seconds)
  done (took 5.479628482 seconds)
done (took 49.6190293 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.196165356 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.414940217 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193682383 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.071212078 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.244378894 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.219566517 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.206679421 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.192901138 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.808162248 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.193916958 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.433363081 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.75469137 seconds)
done (took 60.052443079 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.209498832 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.348459118 seconds)
    (2/2) benchmarking "String"...
    done (took 1.505147757 seconds)
  done (took 3.973624337 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.76238212 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.126832014 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.450615115 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.193438552 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.192075248 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.484806455 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.891782616 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.566152443 seconds)
  done (took 28.026861397 seconds)
done (took 42.093671679 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.19362555 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.25171764 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.226120251 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.171718378 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.300930357 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.240417091 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.508487983 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.199640184 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.21427741 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.180546302 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.213478296 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.193189381 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.217738839 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.511498597 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.194462562 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.208240804 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.246293235 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.67437264 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.595748255 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.203050552 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.229880126 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.197581923 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.216516199 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.194722149 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.263696118 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.196924092 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.206432511 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.204052895 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.715725211 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.195653296 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.20556972 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.679159455 seconds)
  done (took 190.368993955 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.193700093 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.183811302 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.270890162 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.232158881 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.622006964 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.396655525 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.339653544 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.706959742 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.21514887 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.21755774 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.449062087 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197275069 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.52310859 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169739833 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224249107 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.256178084 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.496922499 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.520369538 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236656983 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.335066282 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.207068055 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.440662951 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.349354584 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.394196759 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.21741967 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.227527949 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.207294981 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.21674305 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.394109895 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.408229697 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.24080933 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.232187087 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.82648436 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049240291 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.212555228 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.224784924 seconds)
  done (took 149.757243246 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.195258727 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.195846236 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196685432 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.195310133 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.22875366 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.195174433 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.773570819 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.761723864 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.705565079 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.19470432 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.685455751 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.596858848 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.460001146 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.197164044 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292971908 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209837011 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198977182 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.212151976 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.240593272 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201135779 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198187136 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779461463 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212313114 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.256174833 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.391241688 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210659368 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231078755 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588664094 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197480723 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230466347 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.530058462 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246842162 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19795091 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.580691093 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.728334917 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198069548 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31384425 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200188542 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232315154 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198662705 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.478553354 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197765344 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198483443 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.198530416 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200076254 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.880422443 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201549042 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.778748486 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201531371 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.160879201 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200804782 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20031416 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.340908005 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.869860559 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.216461884 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198337942 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20170147 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.199013298 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200916434 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23343666 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.348119241 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.293027265 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215621142 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205195313 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23183175 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198162356 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.394317185 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20314844 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.289004428 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.256473689 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.422621314 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783786756 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202978441 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299722686 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321406743 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.20066 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.201145886 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2015316 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199835245 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.31133461 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198496299 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.608079973 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.376151495 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217725775 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.523931478 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.297688039 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200833247 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623801161 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203396013 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.201916541 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956921586 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298229248 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.200886588 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203235867 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200768241 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.612646574 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.767755965 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.460695272 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.204041976 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.46492374 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204615797 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.624861134 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.75562462 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.895696884 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205321817 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314764537 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.378274199 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.219455473 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200972016 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.577800382 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205811341 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.26233752 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201999996 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601699461 seconds)
  done (took 365.397960047 seconds)
done (took 706.644199454 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.810214989 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.805202069 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.913794011 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.796555165 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.761688178 seconds)
  done (took 10.213422653 seconds)
done (took 11.34091297 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.391135359 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.387949906 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26506902 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.396670977 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234517986 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.407227834 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.370164813 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225389673 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304398581 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.286588465 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.307788171 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255449273 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236088214 seconds)
  done (took 18.194466709 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510835582 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527191551 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266706091 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520513067 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242778699 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532926292 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404716376 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424764908 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418715631 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236170672 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217475236 seconds)
  done (took 16.430611389 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542475785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.524103659 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269591517 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.530068722 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245275354 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.533251299 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400609749 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422973121 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430948944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235600641 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219885445 seconds)
  done (took 16.481843093 seconds)
done (took 52.234286821 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.213847255 seconds)
  done (took 2.341583783 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248505049 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.412792303 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.235089334 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.222501333 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.213931449 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21546868 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223373676 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.214779496 seconds)
  done (took 11.116171313 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.214098879 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.213197617 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.215735481 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.211200391 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.211749103 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214645922 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.211619465 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.214595341 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.215910464 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216579816 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.212676262 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21080994 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.214127542 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213989332 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.214149928 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.211806784 seconds)
  done (took 20.546628546 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.21372598 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213173819 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.213862899 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211785037 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.212151975 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212815754 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.214548517 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212454156 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214206944 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211923133 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.213148199 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213151539 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.213274996 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212099892 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.214306027 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.214431295 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.213776521 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213124866 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.217996412 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.214821334 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.213860916 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212071827 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.214491153 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.213623833 seconds)
  done (took 30.256484263 seconds)
done (took 65.390357902 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.830490074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.861157585 seconds)
  done (took 6.822493859 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.217015531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.215458407 seconds)
  done (took 3.565469231 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.216144205 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.216905392 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215651744 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.215154229 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216431387 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.21552502 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.216896837 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.216278699 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.21729272 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.216289935 seconds)
  done (took 13.294522414 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.216649378 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216633497 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215947858 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216908715 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216413487 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.215798247 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.218957356 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.218302877 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.219538154 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.213961942 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.219608466 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216647012 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.217564971 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.217370698 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.219896753 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.216431853 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.215525035 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.214650871 seconds)
  done (took 23.038781682 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.21909028 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.218694763 seconds)
  done (took 3.570736393 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.215608526 seconds)
    (2/7) benchmarking "second"...
    done (took 1.215569509 seconds)
    (3/7) benchmarking "month"...
    done (took 1.21630525 seconds)
    (4/7) benchmarking "year"...
    done (took 1.215123137 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.215433124 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.215814893 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.214705577 seconds)
  done (took 9.642730338 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219714691 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.396462753 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.474867054 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.827429335 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22221239 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.222926747 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.089135813 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.222465885 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.224456211 seconds)
  done (took 14.033738145 seconds)
done (took 75.100494131 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.230329879 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.226579348 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.446786597 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.228333697 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.246391428 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.513073938 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.217638 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.345709911 seconds)
done (took 37.592162962 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.215287496 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.194017835 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.010620724 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.193011123 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.304278525 seconds)
  done (took 18.843710379 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.25621885 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55879116 seconds)
  done (took 4.949537158 seconds)
done (took 31.144665675 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.218245011 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219613157 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219092127 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.220779879 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.22051588 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.216517298 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.220782829 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.22173869 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.219312957 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219492539 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22205578 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221618513 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.222169101 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.221641882 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222536218 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219497288 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219168871 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222240599 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.218787339 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21970028 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218945907 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222202859 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219027203 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.219291577 seconds)
  done (took 30.418708855 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.221469371 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221197765 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221604223 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.219850241 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21966175 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.221139613 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222052125 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218174519 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220970733 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.220514918 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21999028 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.219922281 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.22263877 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.219618842 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221790068 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.218748868 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.220750321 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220545578 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221118139 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.219868043 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.222240964 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220321957 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.21961523 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22260647 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.22006666 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22073532 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222243311 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221439884 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222369512 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.221462013 seconds)
  done (took 37.761875667 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.228477563 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.229890935 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224728228 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.22256392 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224510876 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224719643 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224129586 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.223426463 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.224372672 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.223740117 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.222453667 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.223003632 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.223604629 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.222689278 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.222260794 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22395582 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225866484 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.224879822 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.224600207 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225273034 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.224580695 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.224428576 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.224344825 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224575019 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225338994 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.223939783 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.22487975 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.224368856 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225286671 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.224971214 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.225124734 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.223667444 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225337717 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.224933904 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225137227 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22436048 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.227924394 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.232353033 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.225270606 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225815681 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.225143334 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.224627004 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226142155 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225375895 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226061655 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.224861967 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225602039 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226298287 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.225277539 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.22585835 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224715686 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.226776577 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227347662 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.226735657 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227130131 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.226342032 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22555235 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.22627095 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.226440958 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228508238 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.226461308 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224585688 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227121659 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227533686 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.22727041 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.229087298 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.225296575 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.225228631 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.227597556 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228305049 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.227729663 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.227544751 seconds)
  done (took 89.380887081 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.229959234 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225335797 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225862346 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225790509 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226661446 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22650025 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.224318524 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227498624 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22579984 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23151029 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228514431 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224938286 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224799179 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22925254 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231246376 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226821787 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229737944 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227797093 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.230633984 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228736123 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230021949 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.227529439 seconds)
  done (took 28.151828937 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22998395 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231081123 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.225819461 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230283165 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226438033 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229205043 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229872115 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232078471 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231128016 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229110969 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228344703 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231612191 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227634762 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227191768 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226375579 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230091013 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230151212 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228473907 seconds)
  done (took 23.269172788 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230072389 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.228413486 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.230465939 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228088988 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.22888815 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231007643 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229000984 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230981005 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231943998 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.22858485 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.230968671 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232510964 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232453765 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228879926 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231552244 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229984621 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.23115024 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22984444 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234469767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229080274 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22840105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231628487 seconds)
  done (took 28.213076642 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231041234 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23250008 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228055801 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228836849 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227272748 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231613773 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.23205617 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230012152 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.233801278 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232533423 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22822049 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232083257 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.231689886 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231753784 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.229079268 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230584994 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232653899 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231611187 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232866134 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229098607 seconds)
  done (took 25.764470152 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23450578 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234457208 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233808226 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234428923 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233941613 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.232104025 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234579317 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234442136 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235668754 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23581337 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234756709 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235760034 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235634837 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235695993 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235681258 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235306271 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235037201 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233873401 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235326027 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235154069 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236136356 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236209069 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235697386 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235466553 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236816431 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236007945 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234700098 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2355384 seconds)
  done (took 35.730687469 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234353921 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235422841 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.232024736 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232458087 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.234436626 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233036968 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.233721654 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233975059 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235521571 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233814063 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237429483 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236112759 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238450106 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.236219815 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236960528 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236996931 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238353893 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.233322669 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236191156 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237528801 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.239565415 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235983134 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237667086 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234954288 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235506792 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236697973 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234602062 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234853245 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238372614 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235031545 seconds)
  done (took 38.219491732 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255182073 seconds)
    (2/2) benchmarking "in"...
    done (took 1.256751217 seconds)
  done (took 3.66288588 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235694331 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23785815 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235890402 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235610404 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234699724 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236890451 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237070589 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235643723 seconds)
  done (took 11.039757282 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.237846135 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.23662744 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.2381938 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.237560726 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.240238404 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23731952 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243218445 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259353792 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.238822954 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236225172 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245243639 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245920782 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240009798 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237796692 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.237837376 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239607287 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.238770701 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239046485 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.239697434 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238438 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23821013 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240461407 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240194148 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235881736 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.240554221 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.248283197 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.262047487 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240116168 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239389642 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.242581808 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.238646188 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.239400381 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.242718172 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245036217 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.243580041 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.242328345 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248029221 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259126061 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.246687043 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260916509 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239641119 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237046413 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241172427 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.241013422 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240216476 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.240537643 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239600009 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.237271934 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.23927691 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242446478 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.245737629 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237705122 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.238324311 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243065477 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242891015 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248437796 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261344114 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.245786067 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250799261 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.25063451 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.274171856 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.264978865 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244051032 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.245292134 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250386224 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.263165515 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250274625 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.261382279 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.239994552 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240400949 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24668059 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272110215 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269598036 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.241747548 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242639282 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.240938849 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242626352 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242491338 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247798834 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.267473505 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24280821 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240700321 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259241733 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264491122 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.240113868 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.243069858 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.242663343 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.244095386 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.245252135 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253694395 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264899047 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242996763 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.240731881 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.242662408 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244955015 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244184248 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.241899905 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24176128 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.242317936 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.244443781 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243336245 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246242822 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.25228407 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243084367 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244443148 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251224485 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.262691446 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243785497 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250043324 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244117371 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24381737 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246509911 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249355686 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241622242 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247582981 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.253398783 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.245881011 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.24568962 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.244812413 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243782068 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255996512 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.27010735 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.246349973 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244550785 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.250009493 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.256246052 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244540748 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.250176895 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.247861246 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.243594065 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.242709439 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24745322 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.24657237 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24717712 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247179684 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245686312 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.244211641 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246286381 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247382391 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246673281 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.247773483 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.2470553 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246204332 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247904541 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.24700182 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247634311 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252704996 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.267683587 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246402379 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.248128489 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.244574763 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247211168 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247878217 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.247339782 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245991454 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247134603 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.248050942 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.247131243 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247261362 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.2467707 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24837082 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247514337 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252151465 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.248466931 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25047662 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.247332768 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.245494506 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.247168607 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.247622029 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.246897324 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.24867928 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.246805182 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252514375 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.256840047 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.248773832 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.247371194 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.250654877 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248294665 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249533683 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249314404 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.251787239 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.256664612 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.250036373 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.255992137 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.268959892 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249432939 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249462575 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.249349964 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.248955939 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250496909 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.252479974 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.257487475 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25904219 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273191281 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.25088195 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254298635 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.250683773 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.254440567 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253260474 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250599328 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.251443751 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24898332 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250704095 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250824142 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.251856844 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250985966 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.249760786 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.250567602 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.250687284 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.251180373 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252852103 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.251333708 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250091474 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249786229 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251099342 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25043401 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251598522 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.248121792 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.250797001 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250747106 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.253367039 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.252597716 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258169267 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250165024 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255375128 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258051881 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.252222478 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.252626379 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.253080185 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253669776 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.2519181 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258989463 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.273809975 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.253864836 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258147452 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272905666 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251986124 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255669504 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.251924349 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.250361991 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.256385173 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.260458422 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.254889124 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.251796371 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.251594329 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25251504 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253452612 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.259018981 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.269630342 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.25376758 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.253997446 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.25484565 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.25276115 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254152028 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.255040246 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254228393 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255239943 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257648922 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.255559641 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255155796 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.255053679 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.255711531 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254445042 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258040448 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26405948 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25846375 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.253982092 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255370299 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.254213001 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.2609445 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254576587 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255615852 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.256151665 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266012121 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281486872 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261881304 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.276241603 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.258185888 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264425705 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.279094887 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.261133681 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256964493 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257729808 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.254979371 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.255714629 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.252251623 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256982378 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.257104213 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256215381 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25766197 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.261828394 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257591746 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.256948257 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.256765792 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.257628168 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.257748618 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.256532191 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.256409936 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260036968 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258358677 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.257322867 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.258433105 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263558633 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278865853 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.258646256 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258289451 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257143004 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.257061275 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.257283306 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257935819 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260465922 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.267579721 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260463702 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.266682969 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.259481711 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267118984 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.257934602 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.261508244 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.267769184 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.255994546 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.257446109 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258672244 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258845314 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264805097 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278073662 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.259489574 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.263203196 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260619985 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258994112 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259463372 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.261223218 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260594098 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258042868 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267203105 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279423674 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.263166043 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261846484 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.256330667 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.259675626 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.260599985 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.257660898 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261297222 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.259251855 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26042555 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.261030596 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.260534573 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260756949 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.260384704 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260138109 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.258528458 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.259184078 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266285532 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282709056 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264934972 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.260856435 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.266383862 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278276644 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267398997 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281534539 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261088647 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.261594305 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.261343523 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.262188245 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262936727 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.265247946 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.26523124 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.267154221 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.269368378 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.264577769 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.26420582 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.263275398 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.264595979 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.262042267 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270590592 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285121037 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.263865338 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267475894 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.262042821 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263359991 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.266781172 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.26310802 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.261799513 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265521039 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274731566 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272707478 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.263513648 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.265235891 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264739947 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264443728 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263674048 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.262775009 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.262961282 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.263265877 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.263105805 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.264631567 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266673845 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263825316 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.26362168 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264894925 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.263361575 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274155971 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.284144553 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263229516 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264076105 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264710999 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.263654576 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.264867562 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.266656079 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262937297 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265133439 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265714418 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271083459 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270764604 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.266091854 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.264170204 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265129717 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.263715618 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.266820454 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265244914 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265412756 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265392917 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264786893 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.264680256 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265981215 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.263785534 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.265441875 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.265378145 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265893354 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26644623 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.274330498 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264860809 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263936758 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266068653 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266076778 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264255877 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266343371 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.272006762 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287394508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.276953002 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.275356355 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270942916 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.265617273 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269423616 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273792386 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266088841 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.267510835 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265356618 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.267244394 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.267926388 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.269679721 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267238165 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271560951 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.286207756 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267309431 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274415307 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286986103 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26889624 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.267880285 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269618364 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.26680865 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.265222621 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.268014112 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267347514 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274320101 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.287383318 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268195764 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268736667 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.26833702 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.269720078 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273945197 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26861449 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.268904658 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.26546569 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.269076767 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268995875 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267078342 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.266548637 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.267244722 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.267238128 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.271898139 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.2751257 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268141736 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269373622 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.269005275 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268844192 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268727535 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26901054 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266337112 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267532459 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.268463695 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269289586 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.269061823 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270094468 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.266804843 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.271029014 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.270954566 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270227874 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272910105 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277892938 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277955205 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.266667354 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.269002861 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269993436 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270891696 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271154393 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.269919511 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270535029 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.270774185 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.270721476 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270134301 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.269695924 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.273804053 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285307282 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.290424971 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270665702 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271717187 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273423389 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270760051 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267420537 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271852201 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271552045 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.274723771 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279083601 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271295564 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276300962 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290480433 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273249189 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.273734262 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.274022201 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279452544 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.272961066 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273661828 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.271475697 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.276870076 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288979187 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270414018 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282116005 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30040699 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.29275782 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273599073 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273570311 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269285074 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.273103904 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274058591 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.273171943 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.273069257 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272744463 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.274458404 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.272862715 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27766295 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.273875839 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275913 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.273615367 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.27313929 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274441682 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.271397886 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274497041 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.2738989 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.27529025 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274877936 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.275390979 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.27386881 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286654631 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300476097 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274829667 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.275382408 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.270731857 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.277074267 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.276593605 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284487243 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.283339158 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275666564 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.274334562 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.273987427 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273507095 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27348213 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276487031 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275673149 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273798463 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273327079 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28835743 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298595453 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.279605394 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275227157 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275943047 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275668728 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277718718 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277020242 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275635669 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275874773 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276504269 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280614843 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.276027488 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.276737738 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278853685 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.28447037 seconds)
  done (took 752.077408366 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274581182 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274938612 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275056055 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274470747 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273303905 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274439546 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273259126 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274628146 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274250954 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273553728 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273880007 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273228159 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275247855 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275086049 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275242272 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274776221 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274390589 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276186617 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274247873 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274389885 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275565034 seconds)
  done (took 27.951747118 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.277610196 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.275416483 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276139069 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278077275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274175693 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.278544553 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275810007 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277362399 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278317696 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275993739 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277801498 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277644875 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.275548873 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276158349 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276780555 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278640891 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278391561 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27582464 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.278626163 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274288594 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279055764 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276728386 seconds)
  done (took 29.279996832 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.27859863 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279039586 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277554391 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.276508881 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278877848 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.276315594 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.280053326 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.279151478 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.278753698 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.278101799 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.277165656 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.279907719 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.286706001 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.285423645 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.28198952 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.279862647 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.424189473 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281496218 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.28079809 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.281245131 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.27797594 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285449285 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.297259059 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.277205486 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.27808065 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281575047 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.280559704 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.280385228 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.281220121 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.280859726 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.285127036 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.279880186 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280265127 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.282550175 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.280638321 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.283263862 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286590859 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.28199072 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.27948128 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.281879812 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.290651155 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.302580656 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.283749346 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.286258448 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.30345254 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.281648271 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.284741931 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.290661719 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.278540594 seconds)
  done (took 64.176707556 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.283367733 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282648641 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280574344 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281540794 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283495734 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.282108074 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284307514 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281979527 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.280970201 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281035975 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.28334043 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.281735405 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279869714 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.284489078 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284388476 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.2805507 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282319747 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280718124 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.280861794 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281069367 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281185773 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.283889682 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285016358 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.279843064 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282940583 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281515522 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281025325 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283620947 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.282700607 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.282473308 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.285131248 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28315888 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.2848099 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.282318982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.28231076 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.28479879 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.284668806 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.281595793 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284273399 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.283037239 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.284904233 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284994361 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.285072355 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.286425131 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281869045 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.282249819 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282930365 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282026327 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282677515 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285985517 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286660741 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.283613083 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28481312 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.283376305 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285968737 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.285191419 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283061817 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.28336818 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.285522883 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283124305 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283742967 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286569311 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.282171113 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287350787 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.286347908 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284181804 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284858086 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286531472 seconds)
  done (took 88.462304612 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286334695 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.286277499 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287391803 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286428796 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287180002 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.287061253 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288246618 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28695868 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285719475 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286794663 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28751341 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28653706 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.288267951 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288359994 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288128305 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.28747803 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288304187 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288582122 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288051191 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288083954 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.287928173 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.28926055 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287019681 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288197057 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288817308 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.287784743 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28738151 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287878313 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288654422 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287402255 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289980953 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.289691309 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287544804 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289029046 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.288478418 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288308284 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287629901 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289345504 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.288634207 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.288678545 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289002619 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288891095 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289607872 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.289256715 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289588238 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289150298 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289456805 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.289988792 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289406683 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28941056 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288833489 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289284554 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290754708 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289991906 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289832926 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.290367742 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291013988 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290388619 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290119582 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290056232 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290661238 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.29130432 seconds)
  done (took 81.090526602 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291530672 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290171022 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.289108596 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.289518551 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.291451542 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288458893 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291409345 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292669416 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291483778 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.29082831 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292066093 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289216534 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28943693 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292158721 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290211564 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288488893 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289057309 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288893549 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292694728 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.291493481 seconds)
  done (took 27.010964075 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.289833939 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294655461 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.288667692 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290169553 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.29429337 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289742042 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.29345854 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294208777 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290792301 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294629583 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294152564 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2948234 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290536401 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292124531 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293973926 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28971921 seconds)
  done (took 21.877878904 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291660416 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.294302224 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.293260801 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.293953902 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.290572601 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.291453407 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.294429214 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.290894856 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291904935 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.293911124 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.293351775 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.2921518 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.294578674 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.29373749 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.293425244 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294976075 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291105972 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.292555931 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.293514043 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.294292009 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.292777753 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.291591741 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.293541672 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.295049249 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292395526 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291609761 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.292306676 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.291392905 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.293641688 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296758685 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.29329996 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292925645 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292066628 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293615633 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297169282 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292737698 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295159114 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.295683073 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.295908019 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294799307 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.296039013 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.292361348 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.295239046 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296859763 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.292738882 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29628368 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291539125 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.292525612 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.292790371 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293719995 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.296617342 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295903041 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295096534 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.299170457 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.30034463 seconds)
  done (took 72.365623041 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302551161 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299399268 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293669695 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.299394577 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297818456 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.293626058 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.300085293 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297833303 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294967171 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.300946087 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300621687 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300972473 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298466701 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298034186 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296963044 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298444251 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294318756 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294246524 seconds)
  done (took 24.573186373 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29952751 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298238335 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.29901099 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.294765024 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.296698998 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.301119046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297154619 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.30074548 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302891102 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.299639645 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294814235 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.30262115 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303542342 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.302699264 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299871135 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296749256 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.301412709 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298721278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.298386989 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301080363 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.302411758 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.304309182 seconds)
  done (took 29.809634819 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.301577711 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.302282736 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.297811659 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.315056813 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.314981366 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.3224052 seconds)
  done (took 9.068304749 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309303424 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299474363 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298169804 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298772066 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300375096 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297640503 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300193528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296303743 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302117376 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301708964 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297648406 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304027268 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304865365 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302168142 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30342583 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299771902 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300997328 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298692483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298092705 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301789521 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301212597 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301619193 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299783397 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300729976 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298691256 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300563297 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300895809 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302272655 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299717994 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30799892 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303612935 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30132582 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306118736 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305861963 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309334486 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308392692 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301911357 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307860103 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304830737 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301319629 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303300797 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300818094 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3051195 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296636952 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301039787 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298912347 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299244822 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298662542 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298605762 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303004389 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302489301 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29881024 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302281383 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300895926 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299835334 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305818167 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300172739 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298962608 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302973506 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301715685 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301033167 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306634628 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299701741 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30199497 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303545781 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301156457 seconds)
  done (took 87.145496855 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303857279 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301952399 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303514986 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303728879 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304961496 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3040625 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300717827 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302104314 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299474591 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302330908 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306483945 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305022803 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301006698 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300596955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299650805 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298862584 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301410427 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302310881 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3037481 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303887413 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299940089 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300892514 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301643644 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302855303 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305711897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305841749 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305768047 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303738159 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305101137 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303572153 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304060028 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302994211 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304643719 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306191348 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304898683 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305205795 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30178627 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305066271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306998588 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309627026 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306047992 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308816449 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306516258 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306872707 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307863566 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301801915 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306861064 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301564021 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305063772 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306398734 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305458801 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304281882 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303940922 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303947928 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30458867 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307191528 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305332854 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302428454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304218175 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306831227 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30684648 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303800327 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307307838 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305466823 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307689833 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302458976 seconds)
  done (took 87.293083306 seconds)
done (took 1754.932773862 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.471949655 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.421205296 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.302945137 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.315894453 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.301694404 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.324279586 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.321421501 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304374853 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304322719 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.307958423 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.31376283 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.501695647 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.369384722 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.310792876 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.314144034 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.410093796 seconds)
  done (took 42.818295535 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.344971015 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.320381725 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.432197276 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.340033231 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.342297056 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.509149277 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.372329562 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319493626 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.500724576 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.363088894 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.013833525 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.339829064 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.319020158 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.523873264 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.337454968 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.506824828 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.584802406 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.011909467 seconds)
  done (took 30.703980286 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.786270085 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.343682968 seconds)
  done (took 9.354753816 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.337681936 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.318024218 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.317766985 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.315811748 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.308680015 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.321871034 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.315690783 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.309104082 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.060086392 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.444665472 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.317510197 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.3228363 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.334194918 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.315912594 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.314514573 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.355346161 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.473434667 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.315924342 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.312945206 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.321755805 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.316968304 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403798884 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.356026474 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.314176651 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.44535649 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.062018476 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.318754515 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.324156998 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.449611021 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.317004834 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.316609366 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318393431 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.317790541 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.24623528 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.862223018 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.326833218 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.339069054 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327911988 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.316076814 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.455454287 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.314635074 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.326566203 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.309760884 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.866634132 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.451530332 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.440212406 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.576348361 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.336028741 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.318527659 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.38564934 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.318565036 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.31738678 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.363837193 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.122346981 seconds)
  done (took 111.240571644 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.355369786 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.700270398 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483309592 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.333483952 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.156644362 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.991580071 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.330600636 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.608134009 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.397081635 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304724496 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.600023001 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.833438056 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32824807 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.357605476 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.783725265 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.387107476 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322592212 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.224751368 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.327491131 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.305526914 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806773538 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313372172 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.312882118 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.472054249 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.350009444 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784843013 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.75082445 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.855787637 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332273294 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.307174647 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.792036764 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.337360806 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.333991774 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309314889 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.581892046 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.689579341 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.67956965 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.333019182 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360891631 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.309692677 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.321798451 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774678328 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.682443169 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.326544877 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.326071243 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.775466273 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.326375171 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.310360427 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.31186456 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515790016 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.01098108 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.308916267 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.701310097 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.306929272 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.670371545 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.386880805 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.334730549 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.800320827 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326230551 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.503934216 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.324767704 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.304648049 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309593046 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302931361 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.313209711 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660442872 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.660446107 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307998406 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.65992492 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.791751899 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.324971067 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.843799004 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.227459083 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.318848115 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.399126726 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.296700562 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.01393158 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794647592 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.324596467 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293948405 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.631938972 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.318705962 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.57381814 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316838128 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296746594 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801421273 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.299957598 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.362964538 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.293196356 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.300306114 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.091259825 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296755159 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.578609784 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.34153368 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.291391023 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.294459904 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.301462435 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.291058019 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.293301902 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.293805495 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.795788247 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.309319521 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.252427689 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.311303234 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293653863 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.291454668 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.289867632 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.295363851 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51219686 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.698601394 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.310227364 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.28822719 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.287018173 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.291663717 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.46096784 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.289270997 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.575830345 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.304878148 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295683188 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.296078075 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.941540956 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.331436571 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.2905854 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.297053899 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.182054905 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.494794677 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.304760931 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.288336629 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.286636039 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.312258891 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.425375688 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.305504546 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.306001708 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.293972036 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9657662 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.314603476 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.325759963 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.651656394 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.293902727 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.051764206 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.30697072 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.291365055 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.579998416 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.547212347 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.55721235 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.292581641 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.296238901 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.961264088 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.355955452 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.437576625 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308685686 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.294428746 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.486352576 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.703660625 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.292854685 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.939779584 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.299109526 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510935577 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.296212888 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.58867577 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.761172214 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.312128008 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.292949649 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.971630057 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.979801257 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.123649721 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.29626723 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.554519187 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.239384128 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.766972574 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.291607391 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.292454187 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.908434328 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.294635405 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.295034517 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.292835451 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.292939198 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.35386425 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463913073 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.59315841 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298878476 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.72165842 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.363762152 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290675174 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.300228092 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.292579835 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.637816051 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.296493325 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.295272651 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.33567406 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.289862044 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.294691153 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.744711466 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.246802635 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.299842203 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.442730014 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.899026754 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.310633695 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.292925611 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.860606968 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.527096622 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.825315846 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.312663788 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.578090801 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.313327281 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.326993603 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.055954418 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352765097 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.784784043 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31660769 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.314352684 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.876944743 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.314553633 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.650221037 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.291256951 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.293564321 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.828738379 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.31452453 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.292546358 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.440728099 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.313958963 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.565011502 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.294380016 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.348623222 seconds)
  done (took 1104.031510083 seconds)
done (took 1299.367319823 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.295713681 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.292602511 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.2794199 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299162708 seconds)
  done (took 26.375885362 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.313143402 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.30186574 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.299763646 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.295826005 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.300824881 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.299141453 seconds)
  done (took 9.01788532 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.329779653 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.304004719 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.302351552 seconds)
  done (took 19.146300829 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.490165396 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.50069188 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.610293947 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.307022318 seconds)
  done (took 10.119352012 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.303535326 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.302119651 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.301586894 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.305076805 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.315679644 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.31640504 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.307059381 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.306899433 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.317015427 seconds)
  done (took 12.988692388 seconds)
done (took 78.856021034 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.832360735 seconds)
    (2/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.344160601 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.401414337 seconds)
    (4/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.625245741 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.709815222 seconds)
    (6/286) benchmarking ("sort", Float64, false)...
    done (took 5.564183154 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.558421112 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.35393239 seconds)
    (9/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.086217537 seconds)
    (10/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.044250708 seconds)
    (11/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.28450379 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.912821366 seconds)
    (13/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.674433356 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.324635624 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.98919504 seconds)
    (16/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.302542673 seconds)
    (17/286) benchmarking ("sort", BigInt, true)...
    done (took 6.299784513 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.279555568 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.703730527 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.707448361 seconds)
    (21/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.379291881 seconds)
    (22/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.403696321 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.326952903 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.066096617 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.633894536 seconds)
    (26/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.613106862 seconds)
    (27/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.21725368 seconds)
    (28/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.424756779 seconds)
    (29/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.861961721 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 6.30479531 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.702523971 seconds)
    (32/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.793291455 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.401860693 seconds)
    (34/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.944354668 seconds)
    (35/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.03884802 seconds)
    (36/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.280039194 seconds)
    (37/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.428308798 seconds)
    (38/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.631649999 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.297932593 seconds)
    (40/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.291940745 seconds)
    (41/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.287808966 seconds)
    (42/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.008780948 seconds)
    (43/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.329976654 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.306786549 seconds)
    (45/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.453648831 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.296897122 seconds)
    (47/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.370453065 seconds)
    (48/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.304249052 seconds)
    (49/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.385995822 seconds)
    (50/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.892392272 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.425086365 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.558657872 seconds)
    (53/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.530645414 seconds)
    (54/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.441252564 seconds)
    (55/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.366604516 seconds)
    (56/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.891292704 seconds)
    (57/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.284286883 seconds)
    (58/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.47775437 seconds)
    (59/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.281094741 seconds)
    (60/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.625349722 seconds)
    (61/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.327927675 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.297769028 seconds)
    (63/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.426208528 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.28372407 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.359367541 seconds)
    (66/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.539289803 seconds)
    (67/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.298027553 seconds)
    (68/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.594413696 seconds)
    (69/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.297709874 seconds)
    (70/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.426069045 seconds)
    (71/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.300502321 seconds)
    (72/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.289908216 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.830723135 seconds)
    (74/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.067116455 seconds)
    (75/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.329969384 seconds)
    (76/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.361588064 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.269510402 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.432215749 seconds)
    (79/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.385830179 seconds)
    (80/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.447250604 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.302469118 seconds)
    (82/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.405636779 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.172323292 seconds)
    (84/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.999407187 seconds)
    (85/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.794966995 seconds)
    (86/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.411362618 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 5.467488919 seconds)
    (88/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.284075652 seconds)
    (89/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.877235245 seconds)
    (90/286) benchmarking ("sort", Float64, true)...
    done (took 6.318910954 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.122931859 seconds)
    (92/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.285129002 seconds)
    (93/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.294625104 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.021301416 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.11673723 seconds)
    (96/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.313995225 seconds)
    (97/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.081059198 seconds)
    (98/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.329384179 seconds)
    (99/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.284171595 seconds)
    (100/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.284706769 seconds)
    (101/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.702341919 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.31787381 seconds)
    (103/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.121514321 seconds)
    (104/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.027689104 seconds)
    (105/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.305935253 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.377687361 seconds)
    (107/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.42706422 seconds)
    (108/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.277299814 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.51895313 seconds)
    (110/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.389377646 seconds)
    (111/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.076654926 seconds)
    (112/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.420468069 seconds)
    (113/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.289624531 seconds)
    (114/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.043629001 seconds)
    (115/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.414748129 seconds)
    (116/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.058135 seconds)
    (117/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.304359613 seconds)
    (118/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.911730665 seconds)
    (119/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.313664243 seconds)
    (120/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.558355826 seconds)
    (121/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.391639037 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.836981796 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.344516293 seconds)
    (124/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.733769899 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.583551176 seconds)
    (126/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.331663377 seconds)
    (127/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.356003261 seconds)
    (128/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.306770634 seconds)
    (129/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.746630418 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.019645516 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.571115042 seconds)
    (132/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.333762709 seconds)
    (133/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.540654952 seconds)
    (134/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.293427283 seconds)
    (135/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.304001042 seconds)
    (136/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.322162673 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.321888805 seconds)
    (138/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.892193717 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.286864533 seconds)
    (140/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.409144849 seconds)
    (141/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.307707214 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.436357524 seconds)
    (143/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.636121336 seconds)
    (144/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.657228515 seconds)
    (145/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.769120312 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.029352968 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.294656276 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.350189526 seconds)
    (149/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.544140416 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.505875608 seconds)
    (151/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.152309314 seconds)
    (152/286) benchmarking ("sort", Int8, false)...
    done (took 4.378109527 seconds)
    (153/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.308598536 seconds)
    (154/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.437716615 seconds)
    (155/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.359604152 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.335099849 seconds)
    (157/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.43812414 seconds)
    (158/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.507664248 seconds)
    (159/286) benchmarking ("sort", BigInt, false)...
    done (took 6.323419449 seconds)
    (160/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.30310156 seconds)
    (161/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.488786337 seconds)
    (162/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.308985654 seconds)
    (163/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.448432309 seconds)
    (164/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.110280379 seconds)
    (165/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.307244679 seconds)
    (166/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.543261198 seconds)
    (167/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.320287174 seconds)
    (168/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.324855917 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.174606433 seconds)
    (170/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.289355343 seconds)
    (171/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.120345646 seconds)
    (172/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.355672834 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.9233091 seconds)
    (174/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.329634198 seconds)
    (175/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.643867752 seconds)
    (176/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.336043834 seconds)
    (177/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.488384673 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.901211975 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.350536123 seconds)
    (180/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.648022817 seconds)
    (181/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.295133274 seconds)
    (182/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.599572331 seconds)
    (183/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.689483326 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.604908949 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.195851839 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.315418082 seconds)
    (187/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.768948563 seconds)
    (188/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.336797125 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.879918851 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 5.400178246 seconds)
    (191/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.374795544 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.368918425 seconds)
    (193/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.486833969 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.723629341 seconds)
    (195/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.156348543 seconds)
    (196/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.340237467 seconds)
    (197/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.342216308 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.41358023 seconds)
    (199/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.290721127 seconds)
    (200/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.392268996 seconds)
    (201/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.385168445 seconds)
    (202/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.329678719 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.938337479 seconds)
    (204/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.531467752 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.526121429 seconds)
    (206/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.394459157 seconds)
    (207/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.663010617 seconds)
    (208/286) benchmarking ("sort", Int8, true)...
    done (took 6.311086284 seconds)
    (209/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.31068144 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.370877169 seconds)
    (211/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.292418697 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.370806745 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.890119353 seconds)
    (214/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.292807752 seconds)
    (215/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.292559663 seconds)
    (216/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.511571177 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.654574823 seconds)
    (218/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.423565297 seconds)
    (219/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.28846325 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.192949566 seconds)
    (221/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.774856777 seconds)
    (222/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.292568669 seconds)
    (223/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.337161571 seconds)
    (224/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.293781127 seconds)
    (225/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.557051342 seconds)
    (226/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.024702857 seconds)
    (227/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.359134581 seconds)
    (228/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.321201307 seconds)
    (229/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.294777209 seconds)
    (230/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.277897127 seconds)
    (231/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.330810746 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.656699932 seconds)
    (233/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.692004063 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.754812391 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.510647943 seconds)
    (236/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.199490361 seconds)
    (237/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.47083584 seconds)
    (238/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.318884251 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.77078038 seconds)
    (240/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.780598262 seconds)
    (241/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.292654069 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.356276145 seconds)
    (243/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.338095374 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.692893995 seconds)
    (245/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.293135149 seconds)
    (246/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.345617787 seconds)
    (247/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.330928092 seconds)
    (248/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.663794564 seconds)
    (249/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.11061455 seconds)
    (250/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.399619744 seconds)
    (251/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.504280005 seconds)
    (252/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.40155462 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.049354622 seconds)
    (254/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.339041493 seconds)
    (255/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.330162828 seconds)
    (256/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.785714738 seconds)
    (257/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.294868392 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.403869335 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.396290441 seconds)
    (260/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.614468535 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.431040131 seconds)
    (262/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.398724373 seconds)
    (263/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.08578149 seconds)
    (264/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.780238533 seconds)
    (265/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.296340204 seconds)
    (266/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.357648032 seconds)
    (267/286) benchmarking ("sort", Float32, false)...
    done (took 5.308915229 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.182178303 seconds)
    (269/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.517513284 seconds)
    (270/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.296944174 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.354664416 seconds)
    (272/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.490849826 seconds)
    (273/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.295735288 seconds)
    (274/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.369200608 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.315180937 seconds)
    (276/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.436425441 seconds)
    (277/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.33431499 seconds)
    (278/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.299417918 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.339393979 seconds)
    (280/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.31770736 seconds)
    (281/286) benchmarking ("sort", Float32, true)...
    done (took 6.316614279 seconds)
    (282/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.347599583 seconds)
    (283/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.382278765 seconds)
    (284/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.29719503 seconds)
    (285/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.355128174 seconds)
    (286/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.343813983 seconds)
  done (took 924.960209053 seconds)
done (took 926.174926925 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.34848714 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350298929 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.325764491 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.346639587 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.444885027 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.352672161 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.337644862 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.328792897 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.376721878 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.372253095 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.331038234 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.353174563 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.336580103 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.334955555 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.328505922 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348961839 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.314946677 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.33389888 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.351009428 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.338237962 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.348363597 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.330516319 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.378163018 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.354783008 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.329798387 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330518485 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.339017747 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.35380551 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.442382714 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.33824178 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.329282148 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.345925228 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.311980287 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.326162617 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.324626187 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.351731151 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.347624563 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.337824312 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.329155195 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.367953345 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.689075228 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.343360082 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.336054454 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.327828026 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.330622187 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.336538123 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.336738296 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.331340043 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348955801 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351537405 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.67525746 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.364622289 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.339661364 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.325692501 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.33941964 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.333490226 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.33133006 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354272502 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.354051348 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352534541 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.303740231 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.333817163 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.334366691 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.350092916 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.341628348 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.719324669 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.336936988 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.333268865 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.692118373 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.350031637 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.718544993 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.361537822 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.332820338 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.34888221 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.367479746 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.316694824 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.325575022 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.328289209 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.342201422 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.336238637 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.33853691 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347918506 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.336854465 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.329524196 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349758675 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.355398125 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.342553932 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.341599962 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.341179113 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.355527634 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.346043261 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.346619751 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.332741414 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.326465791 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.340086009 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.334613372 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.341421357 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.338588207 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.333665535 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.343725546 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.693185185 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367670451 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.326869052 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.328083626 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.331987045 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.351793275 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.694352916 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.350200512 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.352249059 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.376829988 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.333721826 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.308423554 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.342435311 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357843174 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.341149095 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.335010252 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.329726512 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.306621276 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.687233957 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.366747767 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.335087818 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.33692502 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355427283 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.336673306 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.328171347 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.327260699 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.33447807 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357672399 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.462150297 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.345409645 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.371698801 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.336807241 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.337761213 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.356666193 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357370473 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.368277177 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.337537599 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356136933 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.354801533 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.328874515 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.353210302 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.34312001 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.33733526 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.340610147 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.329066191 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.354598442 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351894724 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354283593 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.35427132 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.462982749 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.329157386 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.310591875 seconds)
done (took 224.438570279 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.394442117 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.328074884 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.424855305 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.334647754 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.429791746 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.429848629 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.329551372 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.328597506 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.327558023 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.74404508 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.328950375 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.32708928 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.330443618 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.33098414 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.410305644 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.331521596 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.330438989 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.670678278 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.332254156 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.405831038 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.330591066 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.32801119 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.333251291 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.713365549 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.325942411 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.32701796 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.404013177 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.333206849 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.679178766 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.324057804 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.331581915 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.676970526 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.426476093 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.351470805 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.343531623 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.341383151 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.431009375 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.349239409 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.411996781 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.411985224 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.422953335 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.37384069 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.332618373 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.329112785 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.334169387 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.334408265 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.329944713 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.358241108 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.329216755 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.332201326 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.675531093 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.345165584 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.331744023 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.332699551 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.329251422 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.36256945 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.332555734 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.334950093 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.426814358 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.334298271 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.39591783 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.717182452 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.766013388 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.337649184 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.331008379 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.333059218 seconds)
  done (took 148.444910171 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.401190968 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.40599993 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.44636456 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.351148526 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.385629951 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.449685354 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.346333595 seconds)
  done (took 11.023623273 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.343171799 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.334956805 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.384440532 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.384820226 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.336710333 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.512768292 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337104622 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.347491627 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.334309285 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.390543191 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.3368012 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.338157567 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.344953218 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.334583022 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383787325 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.347467607 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.446809535 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.337327381 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.337272492 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.495941379 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.334533426 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.343270953 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.385987049 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.344579435 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.337156913 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.340355777 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.15803195 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338544464 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334619296 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.336669177 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333190393 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.41530021 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.338975391 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.328151165 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333936473 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453844713 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.338318221 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335032241 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.337632282 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.335149783 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.339049048 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.3408144 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.337513718 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.333446517 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.336134603 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.360656405 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.338790356 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.337499139 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.339439887 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.339233596 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.390255979 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.339943698 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.336796684 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.335709845 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.392943671 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348428549 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.339426637 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.333743816 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.337113914 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336595534 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.498778583 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.388154979 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.337700907 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.386869892 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338069681 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.339234614 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.339247008 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.337322325 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393760424 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.341831373 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.385264724 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.33398919 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.52470402 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.364101483 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339906057 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.340809432 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.342657543 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341080061 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.332759618 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.34477038 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.338549855 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.340886647 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.347966904 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336162016 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338805854 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.512374521 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.451689724 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.338112563 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.353182883 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.348049428 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.336448723 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.39259907 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.339585248 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.337568879 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393913689 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.453801905 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.397593029 seconds)
  done (took 154.058595521 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.347243489 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.349360113 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.342073635 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.354623251 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.339196882 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.340505094 seconds)
  done (took 9.31683123 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.344739372 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.341306243 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.340521963 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.343367318 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.343718073 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.342103662 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.345167411 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343891258 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.343481147 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.343002664 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.344969377 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.34627628 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.347066467 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.34205175 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.34073799 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.345269957 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.340962082 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.336577529 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.342093899 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342307904 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.438051649 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.343602893 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341501069 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.343803277 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.348109028 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.34296585 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352219676 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.344168343 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.343412988 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.354802166 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.362048182 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.346479879 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.346843348 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.348833824 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.347661118 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.344292278 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.345933698 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.348801636 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.341736044 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.344695244 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.34723731 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342423289 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.342844468 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.3480939 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.34470632 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.347012688 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.354599563 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353453479 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.346404376 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.347725049 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.35057086 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.345918966 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.347582682 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.348220083 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.347847972 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36368743 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.351353456 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.342894357 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.345999982 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.346592184 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.345131281 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.351044346 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.345001375 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.348543652 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.352880298 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.352967475 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.344149085 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.351643775 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344731135 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.348528112 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.34905494 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.345442342 seconds)
  done (took 99.281418699 seconds)
done (took 423.362010839 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.624587896 seconds)
  done (took 7.875788224 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.4860775 seconds)
  done (took 7.739836264 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.955741788 seconds)
  done (took 21.216573719 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.361812753 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.412291964 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.342857627 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.343896873 seconds)
  done (took 26.716088443 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.554048654 seconds)
  done (took 7.806922448 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.339943897 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.355861176 seconds)
  done (took 13.952388055 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.921621935 seconds)
  done (took 8.174244371 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.063824859 seconds)
  done (took 8.326422427 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.351085312 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.364541434 seconds)
  done (took 14.233562378 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.321696823 seconds)
  done (took 7.578581187 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.272061693 seconds)
  done (took 11.528103688 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.350751583 seconds)
  done (took 7.609392511 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.417720438 seconds)
  done (took 7.674682857 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.049331499 seconds)
  done (took 9.304483858 seconds)
done (took 160.99121147 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.342829212 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.349604598 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.347251417 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.343112763 seconds)
  done (took 26.634090386 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.383627236 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.383115632 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.382639622 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.396095485 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.38857425 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.382798516 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.376541958 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.375297115 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.396194561 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386654085 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.388568086 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390451454 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.38306254 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.373162517 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.387235185 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.386295945 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.392735721 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.384016313 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.374706714 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.387040487 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.348045762 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.395966717 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.386438789 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.351919308 seconds)
  done (took 34.436378619 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.868327965 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.419234924 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.503374233 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.405244974 seconds)
  done (took 7.450614843 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.401461673 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.402321803 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.412374561 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.456191084 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.481776891 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.412480558 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.377845621 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.371882549 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.355565125 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.406188611 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.482027438 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.420813684 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.487308018 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.35475228 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.53926498 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.349149587 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.350190452 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.404382753 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.456160225 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.475871104 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.348424472 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.402611236 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.404429584 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.421975701 seconds)
  done (took 35.230720239 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.352426558 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.371325956 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.352963757 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.353594604 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.361979905 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.351961546 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.352725924 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.352223666 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.351788909 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.357809983 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.349353196 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.361460074 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.350607245 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.351518943 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.357427312 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.350535028 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.358363513 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.349075411 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.352118309 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.359473665 seconds)
  done (took 28.352923848 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.346989391 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.260085565 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.698481904 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.600455588 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.345829007 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.35401536 seconds)
  done (took 28.863165761 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.419365471 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.567452469 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.35428582 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.690559309 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.784473478 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.375104671 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.355016255 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.585852384 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.88090222 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.880356515 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.411635227 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.419337175 seconds)
  done (took 19.981746853 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.353969893 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.35410431 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.364329927 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.365943661 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.40530091 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.369488417 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.358593647 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.347503987 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.413016104 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.426188521 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.373218682 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.410142942 seconds)
  done (took 37.799221449 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438605338 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395233399 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.286529163 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360989621 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.082600519 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559411172 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351134312 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.037120398 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.369147531 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621642397 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347622398 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449091094 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6103185 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359183068 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356316149 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.309101567 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590086078 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815323888 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354616037 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.231036048 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372573921 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347598803 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.299892894 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570428972 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587873785 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.328475438 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.609751844 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.127213702 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621866315 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372176583 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362795309 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349956757 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62556497 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99274326 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463544099 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551855717 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387354209 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.980486032 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.335695295 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.224110636 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370891101 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357875193 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363248633 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350096518 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290136493 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361257212 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058069257 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.373009116 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.06582564 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.354162961 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601040528 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457623273 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.357545694 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.992339366 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406795941 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.303400897 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.355571921 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447368084 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936274946 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.456822309 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368771785 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.29489842 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353408453 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.242424066 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94594981 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.370384587 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.357983566 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356111348 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289987038 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.220401586 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377199562 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499374646 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.379703571 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003498478 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01498996 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.371206593 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.285027509 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879572821 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364353697 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.291109047 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579359773 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133075365 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289680296 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.296114071 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290671595 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021962135 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365437104 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.875257902 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375030711 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062436634 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577013581 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391325855 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376162652 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.576704118 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.234747624 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357859893 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.367878298 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485003412 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377981104 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.047048815 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306160123 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.360537414 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609899719 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.566865515 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365650674 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.331776421 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831196688 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373453413 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.38102704 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.356380574 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57847827 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.935420496 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390181426 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.472017822 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377668362 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.132954066 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063876698 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358725328 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.363743872 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362733111 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623188548 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.084875454 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.236326334 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424337951 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363929501 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355217069 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.24521641 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208099614 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.513847715 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.547586285 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382671274 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.372039406 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.358640334 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303022439 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.355457904 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369069277 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.137694675 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.580774424 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368959214 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636098809 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293080315 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504305517 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.365869955 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582883608 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.513230288 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.375803436 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617083628 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369112618 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36958522 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370768774 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377508992 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458767765 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382187905 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.369938973 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615674548 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.361749996 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.361203692 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.254538096 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.138896067 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364951138 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.364137691 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362913035 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918881113 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352320594 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365122319 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248242725 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.372353064 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428711277 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369046678 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567278793 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.544570224 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385701195 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.381103702 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.356729525 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588164748 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370277436 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.231405976 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445349489 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.822810107 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.932109203 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387892418 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.296715837 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.073140146 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.052601346 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360945756 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.548378536 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360751509 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565813936 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3955614 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377744354 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923413529 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378367814 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.256613894 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.36673397 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373778088 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.36718084 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362500892 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.499946392 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.508460651 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377974249 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.37952636 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50669078 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.377333613 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298223057 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.882179989 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367232252 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364251141 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.137471565 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397396496 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.263470468 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149421954 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638859022 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362094624 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625222906 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.345456582 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.393894442 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.361796229 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362875413 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377084495 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.398762065 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370839751 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.377284263 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.257098935 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.803013843 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933030413 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063483676 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887241922 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.624337768 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.39307376 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.249302632 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.069012356 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314580835 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.021160117 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594017673 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08226345 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325598766 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828655043 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.534585784 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113822745 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616184493 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596473565 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603286972 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.386265548 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619572858 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583476759 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401715659 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378487471 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297700689 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.632897881 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909151042 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383010365 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441690994 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072193895 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384577862 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.145587066 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.423086309 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.036485198 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759982143 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.930175839 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.754905251 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377342953 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381224188 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160228654 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386243775 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.891539035 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971229482 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383787616 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.832752897 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316333049 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.571835678 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.400065602 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.366767223 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.854763276 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.36595758 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.627380781 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619292668 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310073016 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379565478 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883488234 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.234605951 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.374062692 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36960602 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079098281 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374538075 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650424868 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.37691471 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.546968966 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386059511 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300771066 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300031549 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.063577645 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375173943 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344357543 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835844808 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.379593264 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377717943 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390193388 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278900367 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.626020585 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.382168857 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930066954 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6103367 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378286737 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389764834 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.372341136 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380268071 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.357128027 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.251239252 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606551515 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418760078 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592920767 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.298496497 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.273066209 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.843142799 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596721739 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.27140652 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386350284 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60748956 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.102495582 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.373968053 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052836621 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408267884 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386373084 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.381556865 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369999563 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391874565 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458014428 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575811973 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.405975152 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.380952212 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766818785 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401350721 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37471299 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.384390881 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46394576 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.540992102 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.547276638 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.145220665 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93609935 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089541592 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.963808011 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639416363 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376285841 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377181178 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305569017 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522121302 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900551514 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643971061 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501744414 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.372486255 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39291453 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373182261 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377311741 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591139802 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648138998 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.24543441 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373379014 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.035128234 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.275414015 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385167115 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.58670057 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849219545 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906024345 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.754526837 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372827299 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078407874 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666656717 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.469152506 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376021017 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968368778 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.373373427 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.048714084 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.383637472 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375800696 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521795258 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625651005 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028420691 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.399434309 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.53392903 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.148860375 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.292423967 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.626579677 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.819431566 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588739922 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964936361 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.066008324 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642562153 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44479278 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581147234 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.511094313 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523997392 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.378445989 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.28139735 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377231586 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320438117 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.084356956 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.384436103 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946654452 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655797155 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.378423809 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.378171985 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402176474 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.386881605 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.597959496 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059671086 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600449684 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385240526 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379862671 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.945534308 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950035328 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646384419 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310641426 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.381010187 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611421262 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632533528 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403199741 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.832371281 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.086609354 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911764478 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.35212298 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400089844 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389278202 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.071678984 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950445096 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.581611701 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866399196 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.036243498 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377761801 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658656711 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.381799634 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376167998 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661926633 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.382033246 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383645527 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59213922 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.964945091 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144236414 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.395750237 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.474385433 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.315631278 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.650339215 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479204299 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315491614 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377438989 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.786771348 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395669754 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507218686 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390442872 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.374864132 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384008374 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.117665371 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667273683 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.382693748 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.362480251 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.372230572 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389794672 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475164414 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930585676 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397161492 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.055428227 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.727960677 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636042068 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.379636618 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.380886817 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.383391069 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379993436 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.098678865 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.34810533 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388462019 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918972204 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.394084666 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.395771679 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384634748 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.596284177 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59090855 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38170978 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596017164 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412844684 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400672668 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.283099699 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150400041 seconds)
  done (took 1668.751807244 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.407332708 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.403256063 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.392275421 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.412726731 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.446375613 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.454405503 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.455942992 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481955149 seconds)
  done (took 52.741894739 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.389791339 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.535909115 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.410786478 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.388658576 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.38927587 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.381797021 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.828598964 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.409381672 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.390623701 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.390297989 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.389577781 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.392614895 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.026712509 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.392151167 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.384729859 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.366367788 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.39150826 seconds)
  done (took 66.157249526 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.342733076 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.693710039 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.955407013 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.422461753 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.419700916 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.386312919 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.841134333 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.397628767 seconds)
  done (took 58.751115357 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.401406693 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.397988663 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.398393872 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.399886076 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.398915178 seconds)
  done (took 8.284374252 seconds)
done (took 2074.693354238 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.387593421 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.393509696 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.388269193 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.390640768 seconds)
  done (took 6.845655633 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.364145959 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.093872141 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.36387943 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.3760448 seconds)
  done (took 18.48702343 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.396823375 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.40939403 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.060406179 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.998467457 seconds)
  done (took 5.35081599 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.137827758 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.152164865 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.136337926 seconds)
  done (took 7.721995909 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.385730137 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.394070323 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.3964237 seconds)
  done (took 20.475471996 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.683077837 seconds)
  done (took 2.983088198 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.536689993 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.591768086 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.707017924 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.712215942 seconds)
  done (took 7.847011199 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.778000173 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.777712697 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.580313566 seconds)
  done (took 6.431970708 seconds)
done (took 90.240610526 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.09271625 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.63976884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.601617797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.062330325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.62060311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.60196728 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.590392058 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.029778503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.576277943 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.567703336 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.066385645 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.617732561 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.761559376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.390318448 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.750930181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.641155567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.623197985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.138658817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.746502419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.983885183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.586372113 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.708528909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.896534617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.732413849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.62353585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.554131468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.304098123 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.399258455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.929223666 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.318192395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.550476928 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.1624908 seconds)
  done (took 192.163628436 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.389652039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.390237525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.407253958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.409829232 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.39925332 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.394103537 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.414880011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.390028919 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.396842565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.405229065 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.396205941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.395021714 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.394409079 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.404180017 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.394321659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.394149241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.412747893 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.391980125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.391215374 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.395157624 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.407770216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.41118573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.404278468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.394077782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.410729292 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411099873 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.398232278 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.401218484 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.401549858 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.406891636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.392751855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.395085838 seconds)
  done (took 206.101470331 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.396796806 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.397421336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.396073895 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.406853756 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.394423516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.400658319 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.397431837 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.393311186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.397927373 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424793677 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.395995994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.411095713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.393610131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.411594321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411045581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409548494 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.412644722 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.413062768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.403418997 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.399130834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.396002677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.396937466 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.410130772 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.397889279 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.399533812 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.410691277 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.404830855 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.397731936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.3956056 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.393963495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.399503271 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.400004827 seconds)
  done (took 206.1742768 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.589789549 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.404068759 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.403155149 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.340926878 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404773803 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.403063512 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.394983331 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.602092378 seconds)
  done (took 14.844254014 seconds)
done (took 620.580802028 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.630212375 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.346876514 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.604001874 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.427840041 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.189668773 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.444488779 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.42368309 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.593103212 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.323212441 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.597724005 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.668338592 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.436007065 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.804732413 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.420689696 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.675470631 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.527458121 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.263384945 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.37574408 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.727633231 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.954519917 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.67960502 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.843544009 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.607572875 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.319860031 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.820529363 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.852727171 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.120360602 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.261474662 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.438206737 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.7466477 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.991351721 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.374792808 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.488435986 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.485675737 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.540763766 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.523038581 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.355006307 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.481582864 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.624019156 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.616075921 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.961737222 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.147224661 seconds)
  done (took 94.020151222 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.391425525 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.388787658 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.387160499 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.389744432 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.389827851 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.388690702 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.38882602 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.389872367 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.391570792 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.3880791 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.387841309 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.389882707 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.38899763 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.389805228 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.388777108 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.390217549 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.39067004 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.393742202 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.390794821 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.388988709 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.388913777 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.388197311 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.391135032 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.393104686 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.390029373 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.388585165 seconds)
  done (took 37.442793572 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.409081465 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.653895223 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.815403958 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.418170456 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.410185701 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.411715777 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.485470187 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.410547511 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.408659199 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.412009053 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.561530551 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.415274391 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.447055662 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.840890867 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414178572 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.410812642 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.409372475 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.410560964 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.661479565 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42176462 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.503449921 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.41484677 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.48457989 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.427832 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.431408216 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410651889 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.415417349 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.980837038 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.430364546 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.561441203 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.178976799 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.48688807 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.958936234 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.84745128 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.1832635 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.414474316 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.411447464 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.566952369 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.418228898 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.410259306 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.489253584 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.41938469 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.822451205 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.082042483 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.433144317 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.41221426 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.007139213 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.585951839 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.649280141 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.419028621 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.844861325 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.418243079 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.412196173 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.413128428 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.646995186 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.42131351 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410717079 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.014307957 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.437575875 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.487734864 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.415571728 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.412023682 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.669116962 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.416935701 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.656242446 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414682807 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.422807175 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.429643029 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.826619344 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.419618185 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.108628498 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.435809411 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.410604084 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.565983572 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.656814309 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.033453912 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.436900153 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.676453871 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.968761819 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.50767141 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.417855641 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.971854367 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.508768958 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.421072062 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.414922694 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.413270184 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.413985863 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.462924805 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.483738645 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.037936911 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.113712454 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.041899967 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.509422055 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.42985459 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.416188897 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.016370512 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.436498058 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.413083851 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.820860997 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.106155277 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.435308873 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.420868435 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.106928936 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.440073167 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.491752439 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.424858086 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.835493843 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.423857272 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.466114814 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416770043 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.420164328 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.437822613 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.489845803 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.421800397 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.416597443 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.079646481 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.59352079 seconds)
  done (took 185.957434714 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.411602878 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.407809111 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.410634532 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.409084723 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.410984021 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416536448 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.408273287 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.408939937 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.416150245 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.408110236 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.412682331 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.408089541 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.410655465 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.42783008 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.419278851 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.417093139 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.022386116 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.409950993 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.408697066 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.409441056 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.202396528 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.416857586 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.411789556 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.408609641 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.410539679 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.412902087 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.419818405 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.409579854 seconds)
  done (took 154.26305292 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.418860421 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.957604829 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.432561186 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.541321218 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.442923572 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415361125 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.54305655 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.474170119 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.432192803 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416214975 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.420056525 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.707320851 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.421110484 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.911932846 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.600220727 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.562137913 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.909018794 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.434538183 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.417274679 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.416123226 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.543778171 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.430183845 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.711942394 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.967976421 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.441596793 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.965596915 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.408865013 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.422689816 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.416615408 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.968122245 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.436432054 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.714473277 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.499992224 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.478169794 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.984201752 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.938071192 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.936147821 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.5647483 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.420327405 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.418403325 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.420269766 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.405863884 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.969310135 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.443737293 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.421941499 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.961430857 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.441689834 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.423498622 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.428302789 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.417922689 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.476583549 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.498177657 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.733043141 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.976488762 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.512931543 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.43553407 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.547122429 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.781667619 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.423134339 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.915486138 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.403409194 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.967730917 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.43796254 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.406534775 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.424857206 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.427234618 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.56574295 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.548361104 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.914942034 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.436105187 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.915673226 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.581584628 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.423516547 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.420317964 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.426503292 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.969561257 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.932563066 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.582006358 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.553661675 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.607840742 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.410927955 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.42104334 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.406797948 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.498114647 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.427347902 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.970911133 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.932014029 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.44002724 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.423708519 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.422787938 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.424040399 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.589452302 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.992414085 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.510933623 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.912586451 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.735809605 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.716167697 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.425755235 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.483454504 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.438505454 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.718643016 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.424116807 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.478110085 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.848921502 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.720411649 seconds)
  done (took 168.212930959 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.655721852 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.616634591 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.514860056 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.572433493 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.012948245 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.985066294 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.690253954 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.559749218 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.535685624 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.675076338 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.544610081 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.514431028 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.63536161 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.498391102 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.142689575 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.506730373 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.530096537 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.570885338 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.591194183 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.436658364 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.084186278 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.703262614 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.607814862 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.281741472 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.518557857 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.167629111 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.973625695 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.949634697 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.600554246 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.71249884 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.973686777 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.530138283 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.359564963 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.104439512 seconds)
  done (took 67.683171563 seconds)
done (took 708.886837825 seconds)
SAVING RESULT...
DONE!
