cset: moving following pidspec: 764
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.32218161 seconds)
loading group "string"... done (took 0.543610262 seconds)
loading group "linalg"... done (took 7.437063758 seconds)
loading group "parallel"... done (took 0.169747161 seconds)
loading group "find"... done (took 1.154952616 seconds)
loading group "tuple"... done (took 2.074030554 seconds)
loading group "dates"... done (took 1.307093061 seconds)
loading group "micro"... done (took 0.240665476 seconds)
loading group "io"... done (took 0.96311417 seconds)
loading group "scalar"... done (took 39.980268916 seconds)
loading group "sparse"... done (took 12.933871397 seconds)
loading group "broadcast"... done (took 1.031036339 seconds)
loading group "union"... done (took 13.901791973 seconds)
loading group "simd"... done (took 4.669900525 seconds)
loading group "random"... done (took 9.452889143 seconds)
loading group "problem"... done (took 1.953110163 seconds)
loading group "array"... done (took 22.150844302 seconds)
loading group "misc"... done (took 1.996474949 seconds)
loading group "sort"... done (took 3.377144977 seconds)
loading group "collection"... done (took 19.494715856 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.568826127 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156615977 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147745638 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147645577 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196312572 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141242167 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157530413 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096758341 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.925722698 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171868026 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151670929 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520912321 seconds)
done (took 5.105456945 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.214246834 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094356962 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10297235 seconds)
  done (took 0.866717965 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076962162 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145279658 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094411264 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078303987 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093974523 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077304028 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092824865 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077168716 seconds)
  done (took 1.33517918 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086844754 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.095797615 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082259478 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095283758 seconds)
  done (took 1.031836316 seconds)
done (took 4.207342179 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.724488679 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.270811984 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205153304 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45993201 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.190394614 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213900058 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67731804 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354662821 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25076305 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098544304 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133310326 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391318041 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136540365 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687711322 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089097689 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123359923 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176688636 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.462405017 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082724365 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108464067 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115291118 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140248762 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127277149 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090181056 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183241573 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083819869 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192198869 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106963557 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07943381 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.272864546 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199895896 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692700133 seconds)
  done (took 10.831492685 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11123744 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132885993 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095657597 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138031865 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133317262 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098472293 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083749954 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095629369 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120520599 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174115363 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129494603 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123384042 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093968462 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081739788 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114403668 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243935453 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121896264 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100031513 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101105206 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103012962 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120921035 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111234393 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108352931 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093752225 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165521636 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220453572 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112689666 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127072293 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09750277 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11303345 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142900812 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14356256 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095004151 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080670139 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169614756 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121570678 seconds)
  done (took 5.108070676 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.088631078 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188184731 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120213077 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16747783 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080315389 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14226366 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093566093 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111779426 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254183566 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.194721819 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.485115355 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14128443 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099875623 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097000267 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08125786 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096604851 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.640099771 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155513911 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115349212 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114407751 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101200388 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083634728 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364518479 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096221913 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078982073 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096748032 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065509193 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159246103 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10131069 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.181491407 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12205929 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099561121 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13235079 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191980487 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12385499 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116919339 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095801153 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154335832 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.094926347 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173798325 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086428906 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09689271 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102369198 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093504313 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131080284 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118524653 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097798907 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094632982 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.194894625 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079311686 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111868503 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.928272366 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180205416 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090569024 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097419376 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285429921 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115525271 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097642327 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078051658 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273998876 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.190621609 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099434714 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080514843 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097584688 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081489604 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399743637 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083101763 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.691104313 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084502507 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109134886 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084827705 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097582342 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105067566 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089012915 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117476865 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080877468 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098347606 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078525131 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097238865 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080834074 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10932904 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213282015 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096993938 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078840274 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09476474 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11479692 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109648263 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100247337 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094277758 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113188389 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100556714 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098993261 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118414853 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099183363 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106169118 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08267661 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141270361 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098476586 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.137762983 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094009457 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07879781 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125448694 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098729638 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127893814 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078034616 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109335196 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098446718 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168239501 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077658553 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094998599 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07889906 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095189858 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079899889 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098519717 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10871885 seconds)
  done (took 22.76343881 seconds)
done (took 40.46163909 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322091465 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100837487 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10153958 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101114961 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099108519 seconds)
  done (took 1.475595527 seconds)
done (took 2.198314119 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283162768 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172088099 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093902095 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164936701 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091832763 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.161404173 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158999497 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093356077 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214825613 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093691848 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.157766957 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076092634 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093355162 seconds)
  done (took 2.603535616 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093424586 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112709613 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082451141 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108251745 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076231459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108870754 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092169291 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113600526 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107642529 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08482519 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091789571 seconds)
  done (took 1.792060534 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093632304 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111744563 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083320706 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10853261 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07678671 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108863731 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092570012 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114475855 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109274786 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086287185 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09214356 seconds)
  done (took 1.795808864 seconds)
done (took 6.904828946 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090618193 seconds)
  done (took 0.805650769 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.917335526 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.572810761 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112894075 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149482535 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.314710569 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171025161 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467553667 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123833026 seconds)
  done (took 10.751412271 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.115175095 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098362487 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112051221 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083351902 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102456403 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082786514 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100644813 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097496797 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082544523 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100394968 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0848436 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099804494 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098571023 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084951033 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097746691 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083854066 seconds)
  done (took 2.308645615 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117940244 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117262563 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104874917 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10587192 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08659805 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103087789 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104956702 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088440416 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10046714 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101950912 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089989891 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103674309 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101742794 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078731351 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103265007 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106200112 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085196825 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103919586 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104699316 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089915868 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103801773 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095052643 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086861527 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103509314 seconds)
  done (took 3.216482925 seconds)
done (took 17.802409769 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157022692 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107065947 seconds)
  done (took 0.988207272 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094850581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111205196 seconds)
  done (took 0.935259048 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097255118 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093951344 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120139374 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107150668 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07978264 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095538153 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117500048 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0799197 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095860884 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094503192 seconds)
  done (took 1.713880646 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083108656 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107554487 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099659179 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093732311 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103166685 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09265833 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087232264 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097956494 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107942488 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076757024 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100181186 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112792123 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084670508 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114168053 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102241562 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097150067 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084194145 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097449912 seconds)
  done (took 2.470960674 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079169124 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094957317 seconds)
  done (took 0.904431208 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080678291 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092383208 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080074058 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095500759 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092595866 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07571328 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092310312 seconds)
  done (took 1.339430363 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.42989136 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.133603599 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.256814403 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.09924164 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10284778 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.293896651 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096420754 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084348998 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101088679 seconds)
  done (took 2.38372691 seconds)
done (took 11.464384361 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092778911 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.1134499 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11371019 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.451505796 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106816566 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096141172 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145568355 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248169776 seconds)
done (took 2.11012814 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142393995 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.561863662 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418488353 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.228744739 seconds)
  done (took 1.946710304 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.397569186 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097284176 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081506258 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080112827 seconds)
  done (took 1.398243789 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079557278 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098199989 seconds)
  done (took 0.918443478 seconds)
done (took 5.151352142 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080322395 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097826526 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.110409205 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094279505 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077731013 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096761183 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0792858 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.094594534 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077633103 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095008897 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094935794 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079948093 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095588276 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079326054 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092858277 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077075226 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094646832 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076893041 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092659345 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079747444 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092823237 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079739166 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093733262 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077077893 seconds)
  done (took 2.886140884 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098576511 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096971684 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101794706 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084578584 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101119899 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086249658 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101267653 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095514635 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086309976 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097969965 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1018267 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084449603 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097954343 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085310944 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097384734 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099901919 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085611201 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097193814 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083322591 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100515706 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100505701 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081710825 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099910429 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103148265 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086273501 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102371416 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084113847 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099073123 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104096672 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086472051 seconds)
  done (took 3.576381499 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083650551 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09276629 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077696623 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100417246 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07731749 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095821924 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077496587 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093978282 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079355418 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093620187 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07966518 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096813471 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080296413 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097995154 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079577214 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099031051 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11085499 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078375454 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09444736 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079498958 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099270911 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079250611 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096943707 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079032854 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095560598 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079545557 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096170896 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079285011 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096817763 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08004364 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099293877 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082684677 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09629165 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086464966 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099529767 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094614349 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082525778 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094184247 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080187777 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095445745 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079938772 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093652049 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077556319 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100089647 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07761516 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095681361 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077531107 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095650824 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078579745 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096525806 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077212459 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093052781 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096397039 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078908228 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097529615 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077711383 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093861762 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077619675 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095524281 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077460647 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093066452 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077860411 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096866972 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077838843 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.108888812 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084795784 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093995394 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079278182 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094713221 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096801423 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.07896548 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107678277 seconds)
  done (took 7.140880657 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.129269241 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123819109 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080682935 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096500905 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076082609 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093807605 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082038524 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095078557 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096850423 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086167616 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096671469 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081450035 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098209519 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096462971 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096978962 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095998821 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084461072 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092599417 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078424503 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098230432 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078847492 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097682881 seconds)
  done (took 2.804794363 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206653127 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102796292 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140224956 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105452397 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082576421 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105713157 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100107178 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086512381 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100432418 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083286225 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099103348 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100378306 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08296404 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098792231 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098710215 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084720072 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101501528 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084318132 seconds)
  done (took 2.614849415 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093038758 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097597026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.202763039 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097215736 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09702328 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083480269 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101934338 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106239269 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083357703 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097132678 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090954917 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099400361 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099423024 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081050104 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099950004 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081277771 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100469866 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081242451 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106956037 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103306128 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086271408 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107268002 seconds)
  done (took 2.951725202 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096544201 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100699879 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117364973 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08336436 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093886261 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079620039 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10344972 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081177762 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104698919 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09794283 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081441907 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095163042 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087577195 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096846165 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101520984 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080965974 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098643001 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080759538 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099101024 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077134488 seconds)
  done (took 2.613352323 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101871938 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098399492 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098473235 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09147869 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098847149 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082656523 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107740397 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098548221 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082261778 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123393229 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099657596 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082872414 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10713403 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104195668 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098268564 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090601413 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106655514 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107566888 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082365091 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09806656 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122832396 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082039928 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106882413 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098844705 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082682127 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099306545 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098103389 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0881413 seconds)
  done (took 3.497164669 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081056257 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097155247 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078251861 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.094932577 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078306037 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094789 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078489865 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094334792 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080687594 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094502532 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080440468 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096877595 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081062515 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097235477 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081886793 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099328974 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082454945 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09702616 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081678421 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097423222 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082264646 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100226401 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082824587 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097404074 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080293723 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100293103 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080525428 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09746609 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08288364 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097976907 seconds)
  done (took 3.429794575 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090310732 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104099453 seconds)
  done (took 0.955517598 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078569884 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113301351 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078011959 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101496322 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102322905 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081196366 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106442651 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086086228 seconds)
  done (took 1.506855334 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095929188 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108041678 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082750615 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110351603 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.107730327 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096854863 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167644028 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099762068 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104290635 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078886813 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.110876315 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080539371 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104705038 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081448254 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102850909 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087247263 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095585012 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103843121 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084788355 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096135325 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082642534 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107029578 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100092921 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.079163521 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099317153 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090190741 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11020016 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098941708 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084750131 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105590969 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087236134 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091406211 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081952871 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098620178 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079162382 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.106961189 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115051323 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085015999 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107415856 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099660689 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092917188 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093286406 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086091652 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104253852 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108304605 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082872343 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099117328 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077754053 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097691833 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083901308 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093469772 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08200874 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092569096 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105117686 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08518808 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110200097 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080689394 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10054578 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085867573 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103346355 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106817276 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084380042 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101300278 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083265599 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109560964 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086465017 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109477434 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093858588 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076364253 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096510076 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09200617 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121679914 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.10449929 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083011666 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099720378 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080586944 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102441951 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100412765 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088201421 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10470541 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082460405 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105330308 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106690299 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082791426 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100705901 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090291726 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097309847 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.1006949 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078945028 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115206244 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081592735 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095912308 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079719863 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109468034 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102490657 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082017015 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.095361929 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088865099 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092664313 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083007195 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099680537 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082078035 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109299318 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104430826 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105371798 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090598354 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105605877 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081734333 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.101691406 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079117986 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100311984 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083400259 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105810915 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091965639 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084800975 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098622847 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083345859 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107324765 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080390524 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098865219 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106115158 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086798467 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096631746 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07881161 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101410413 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082452402 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101959502 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10673141 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081158302 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09331802 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078057601 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102264926 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081974233 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102073755 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104418487 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085308251 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093397683 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079955056 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102926673 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107561926 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08231553 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099040218 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088253438 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100021255 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080581471 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105409652 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100929298 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081031139 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105037965 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083409137 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093704843 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085503366 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101848618 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09717868 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085741637 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102988972 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084598013 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099217293 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080520622 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104633915 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099718507 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080540302 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098167053 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081005111 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110180872 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084468742 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094090061 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095149261 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090881803 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096261852 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081156422 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097765129 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084699874 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100390105 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080800251 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098427038 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100371486 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093978495 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103799244 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100647923 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088173844 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110705455 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082268506 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101845978 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082234705 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100074519 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100144017 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091251732 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104281184 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088835965 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102252171 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078210649 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105852692 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107002339 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081443426 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096935385 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081143178 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102664248 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105659797 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085516178 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100575196 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081162563 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099637583 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086074505 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10173853 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099024023 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081536263 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104222521 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082285173 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106192391 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099692802 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.0929564 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102285432 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077948934 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104545808 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080059259 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104705281 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094490846 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080170583 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098464322 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083499827 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09773747 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085528556 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093610947 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089728861 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107153265 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.098735245 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081037501 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.09970696 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089549027 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101141528 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086584094 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10246723 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105835497 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093407155 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098583109 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08615754 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110733308 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099146125 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076481868 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104961886 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081055242 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098193502 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08160377 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098115543 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086524378 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112817078 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11083975 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079230153 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105120336 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083865638 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102066885 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080512253 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107235654 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105635497 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085043898 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106325467 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084424829 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100668358 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085803401 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09930834 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101517393 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084006883 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102725906 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083298337 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.101877149 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082038242 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102532607 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082137148 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09705693 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101410151 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082389309 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099117592 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088114807 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098934394 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082407868 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102224721 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100174045 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083139459 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100247915 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08176931 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102732995 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083520685 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100234725 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085337063 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09500404 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106973598 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08213665 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107803928 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082489385 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09643448 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088035161 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103193069 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105144435 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083812463 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100459317 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083932636 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099568481 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086527024 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106764241 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0974796 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094442363 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108085657 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083426868 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102462237 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09936278 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083529717 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098253821 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083588247 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100034789 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082715155 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099354926 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087512149 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103288094 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099930736 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085258995 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101647134 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082374746 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101395154 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07791652 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09945022 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082486663 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100345433 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11101899 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083844701 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102868714 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081149977 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100839333 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081472306 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096448658 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108584847 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091922637 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100939281 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107664927 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082317281 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101243304 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093575277 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093895158 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080614765 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097932241 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08134765 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110395254 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102501449 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093627616 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099001071 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082337167 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096938756 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084086808 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106110714 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077357775 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098757319 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103826152 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084651669 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099440079 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083563076 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103599541 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084470164 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111740188 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099636492 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084259651 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100234251 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080406339 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098719816 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083054203 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102989081 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084211466 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098379527 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080073036 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099943289 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101076899 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084078875 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099679548 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085243527 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109013866 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083032534 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103333241 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1034322 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077130205 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103337004 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083540252 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099768561 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08200071 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104051898 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08559153 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101633059 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109139514 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083218218 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101256911 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083136218 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099994805 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082992125 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101836707 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101027979 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083133135 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102010114 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09284217 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100253646 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088059443 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103307547 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085480917 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109127314 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101586592 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087019343 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108564924 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086162609 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102204403 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107916354 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086276436 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103005627 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084221713 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103366525 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105969694 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08239328 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10622279 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083524401 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.1017618 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08461164 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098789952 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08277214 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100761101 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099588281 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08905019 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101821538 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082126891 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099978622 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081438303 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101713387 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104843513 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091307543 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103711935 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086249175 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096114398 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079748274 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102004618 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080916609 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102203181 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104050923 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08891016 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.102701748 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083340725 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099025267 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092707226 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107735172 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103974569 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081233353 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10415898 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085091835 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103170549 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084008234 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100923185 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102222142 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087193417 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.101553878 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082389109 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108264725 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086269196 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102617222 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10208725 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083743748 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100925701 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078795492 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101284829 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085607333 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105784942 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085677497 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102102911 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111392337 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082782633 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100543316 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086625857 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100897713 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105295006 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078838723 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10157744 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084962554 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102137753 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079208881 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100249745 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080538399 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103098728 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082383387 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0962729 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111812214 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092450266 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104485322 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08160898 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100101593 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078340842 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096160634 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101045446 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085200895 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102387653 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094929627 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100256146 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08274505 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096292093 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083974488 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103658797 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.103751155 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.0815233 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09572676 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08274876 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104625152 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088083902 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100320991 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083663782 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10437685 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103382537 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081598658 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104197611 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080574271 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104898275 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116279412 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084310965 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102222056 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089361435 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109523995 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101963055 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079299668 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101809815 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087066305 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.100682837 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084662948 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102093101 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118371483 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086491356 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100817652 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081941222 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104187049 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082881327 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109710296 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102146452 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084644615 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105665461 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085334778 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111091722 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103990107 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092191505 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104303613 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086869396 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101324539 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083621916 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099775235 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099675297 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085138461 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101805036 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089071493 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109961001 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100235638 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095194636 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111139705 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087965105 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098692322 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082664271 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101128167 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096484539 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085620812 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100039266 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081744014 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098904449 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083390747 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101790497 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088963546 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102716214 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084189897 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101704387 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095355414 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085522285 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10325832 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084224406 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097625401 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084142345 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102084495 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086772857 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106692304 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101936004 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084703677 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103378066 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084846285 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096182804 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091340631 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101252685 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08591251 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101124977 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10157063 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085210951 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105113724 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089888919 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103452462 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085450334 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114366993 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104898228 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081374898 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098856709 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088689103 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099600104 seconds)
  done (took 57.255504111 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144808126 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081078096 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096437995 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078543354 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11019954 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097865616 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080132947 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097253278 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080787219 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100213132 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079239057 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096707212 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107160946 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122455206 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092269235 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102287167 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096818972 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080094001 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096087392 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080384767 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106509968 seconds)
  done (took 2.834098078 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103856387 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118575265 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112911636 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116563389 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089452865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11390108 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112717667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113204542 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097845416 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109411729 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115651785 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11327995 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091010655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109392639 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109044148 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092483596 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11770494 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106742367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113281489 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095268701 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111386841 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113127866 seconds)
  done (took 3.183035939 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083585701 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100551922 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084085992 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096137282 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082723497 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096654468 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087532535 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099174775 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087415326 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101230336 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081180959 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101092987 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102216209 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079334016 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.100883435 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081700452 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149403575 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105377819 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082964798 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103255997 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.09595005 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085578565 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096429141 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07879884 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100196614 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08763146 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10257633 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080850138 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10147036 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082930003 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101887783 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.098816927 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084851752 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101595925 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08323622 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100250418 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0840622 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101676504 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078943752 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.09946416 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083864985 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098100079 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084429527 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103220589 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081568312 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10059188 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.102856501 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083333126 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097486671 seconds)
  done (took 5.398675004 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103387516 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159504311 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08542708 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142708638 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119846646 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112341636 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087482803 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141390211 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100961953 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082107087 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123552633 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119315097 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102567189 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088720728 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106113391 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102630764 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085272699 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10188831 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088400955 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102167874 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107157007 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090930559 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119120333 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116893068 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106613583 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083164526 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10248521 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106968381 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097641625 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108962721 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107510603 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090468432 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119648146 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104294222 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083574743 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105947708 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120225433 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103414608 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087276939 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100158187 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086520331 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107790968 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110294907 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102093025 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103791107 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107060276 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084241249 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100520995 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116978216 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088357574 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112967504 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117668655 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107744802 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084622073 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108038233 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118942976 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084923364 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101498565 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087209117 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116848747 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100001941 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088008705 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118767635 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104112055 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111494685 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100435919 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108929482 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105934562 seconds)
  done (took 8.057228151 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093330993 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109021945 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119195254 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119275761 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09071764 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.108757332 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108405411 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090821927 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109257313 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113594046 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109181528 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132112856 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085661265 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112608696 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108423449 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091458708 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109260282 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108986775 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090676737 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109710402 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109110213 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118808987 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091835489 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118518301 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140747699 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104306432 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089785839 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109715581 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118242289 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109456898 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122157476 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091065851 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108826271 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118827501 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122695747 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091122984 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102341985 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109452952 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091114466 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109728888 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104655293 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118543198 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091455651 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104035467 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110386198 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090911245 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118660806 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121810862 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112660515 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115471892 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.09130954 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119793005 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108588275 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091546764 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119116979 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145010382 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119619428 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118878774 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109410993 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119184365 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099875692 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126143232 seconds)
  done (took 7.575627204 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106930518 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114754019 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115040902 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099088854 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082220141 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107212574 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082542273 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101417379 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112818689 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093421825 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115228756 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106483027 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091738311 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11639709 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107673631 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110507189 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089162974 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107891128 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11265818 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107611524 seconds)
  done (took 2.903260622 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094153292 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121841351 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085653427 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110942178 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106109717 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090906309 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10656447 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106599875 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08650915 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106489178 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095536202 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115901613 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104577101 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091296252 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115819609 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109874285 seconds)
  done (took 2.470663662 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097101799 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115181094 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.118046801 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084049384 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102771295 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080936554 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104511221 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099267635 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081299309 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119367776 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085164818 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109135753 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10308029 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082930327 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100353876 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088218061 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100124819 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083510937 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104432822 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117463884 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096056412 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10317034 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104549082 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086933266 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103009319 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090482588 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105572656 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101671735 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083594735 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104439237 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085200557 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112433889 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.09995719 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084558395 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101844709 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082226105 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10320253 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084815223 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108331544 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102389179 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083104534 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10343289 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084349897 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104849337 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081062377 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105172512 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099990061 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091271946 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102523708 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085159649 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104331918 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105653242 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086216178 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114400618 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088576718 seconds)
  done (took 6.187366911 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098546543 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10819644 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080272473 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102335859 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087877679 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10769659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107162825 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087441338 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105739553 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083151175 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105698898 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090412354 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106783213 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107742682 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087267967 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107244431 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081244381 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105229137 seconds)
  done (took 2.592069351 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090703838 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103777646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092593212 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104778802 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08431964 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107320811 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081307492 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10290881 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102530685 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084880282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104072812 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087850537 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102655738 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087524535 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104683562 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084699667 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106912934 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102016071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084858785 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099468606 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088212189 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102194248 seconds)
  done (took 2.941384754 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117737734 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124038535 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092169525 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229326077 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103167009 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.130731584 seconds)
  done (took 1.628617078 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109297517 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120786755 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104925114 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10720782 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114098381 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106882143 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087340937 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10669242 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116626165 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100780525 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107376435 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115698542 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116267383 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096794528 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113131196 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112634054 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106615074 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088159159 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104852921 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126708137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087802018 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116927598 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107357112 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08762304 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106761255 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115926154 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11769616 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11975948 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08679886 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116197041 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1137013 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087268245 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118251471 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121097824 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107993612 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097374559 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107466498 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127236069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11340165 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096840862 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108557489 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113538385 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116948708 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092883915 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116593772 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106575842 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092625487 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107365454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108367728 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135301761 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113713756 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096933924 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114110186 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116034764 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117500129 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13287642 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101760645 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115404893 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113456113 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121347295 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115672405 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093826666 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116088231 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120919846 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112880662 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116495155 seconds)
  done (took 8.070672833 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104048581 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124757441 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107856334 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121070441 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095835129 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106656796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107621742 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087503692 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107292818 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106681027 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149854026 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087895603 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116515718 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115990055 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106457205 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086958277 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106252843 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11589464 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086829663 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133423206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105545759 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115305218 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116594904 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096021556 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121601455 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112414593 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106834273 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088295635 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107304847 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107180593 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093013863 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107301581 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116251451 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086362278 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11607525 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106463932 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107025457 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093983234 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106551918 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113576152 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096555935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126244303 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107284048 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106663653 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121678271 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087684297 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107708224 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086916884 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107515595 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10596313 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121823839 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101164035 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121526924 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11583244 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107474422 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087593958 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107833983 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106493477 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087067464 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114226827 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116005386 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107741134 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132997074 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087788438 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10703924 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116425764 seconds)
  done (took 7.932932526 seconds)
done (took 153.746287002 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215110608 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201393213 seconds)
  done (took 1.252320594 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087297678 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134422889 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096497841 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167030791 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085803395 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.138890359 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136772462 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097928091 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105624589 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085993777 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105303738 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087299619 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169244801 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085755943 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105797498 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106585263 seconds)
  done (took 2.641531922 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1136084 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253498356 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121533016 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104227609 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088849391 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10880809 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084074657 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110078366 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08909603 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103428896 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088049509 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.105204237 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083882474 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105518949 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.108670734 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088014336 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104263061 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088197435 seconds)
  done (took 2.792341315 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112715011 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144583114 seconds)
  done (took 1.105686795 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.23853792 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.159692771 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.225740711 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.464494781 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.266737534 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.351214818 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.195166848 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.204831065 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165218583 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.203986235 seconds)
  done (took 3.317128066 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117940735 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178932083 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313844452 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154308196 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106696387 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125411649 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154715286 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129099978 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.121889325 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101645577 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121965496 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116843013 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137143369 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09473853 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113790344 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116340815 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120729293 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112421844 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.1135611 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095268558 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.135994946 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104274632 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09507776 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112439057 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.117275195 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097541011 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105065824 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085422645 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11586771 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113272027 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091774575 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123770088 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117331985 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.153382382 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122293652 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154770586 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117619566 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090578215 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114092042 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.110845389 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096701835 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117599612 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123163597 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096723916 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104605899 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097436257 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104429176 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104681109 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093692164 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117191521 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113580878 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092223874 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152317085 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117530069 seconds)
  done (took 7.30943927 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.781787915 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154444919 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090444492 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.869525732 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134185946 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10346734 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.767700795 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112062273 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252760358 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.741378284 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131922272 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119171017 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204668898 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261444332 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.000477597 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290125372 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.632606214 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.122594222 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14953735 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15194036 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116665634 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135042704 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108685681 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.451450039 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11596277 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110271238 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096559436 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117914786 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159147438 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123944862 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112206602 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176371713 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248471842 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201589275 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093940424 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110251687 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109696027 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168843271 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263466835 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19310006 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178107417 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107432182 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088967131 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121164219 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131322014 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107036525 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161265651 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173919355 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167816282 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113394884 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117551727 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098124966 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11941248 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162512926 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.11988575 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316529154 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30709707 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089719474 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120864672 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124469449 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260168255 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100942518 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221052429 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13747277 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210324279 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08937023 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796229095 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167168899 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109170493 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095182015 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119160592 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114768021 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118844794 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167613389 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369681873 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122909235 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112915851 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088626242 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.250032931 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123099602 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089927107 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159157159 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11434985 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118736584 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122470519 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100731901 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18803182 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228614 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121338456 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097335656 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113392635 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12373412 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094084803 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208492604 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217086016 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.183142137 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208692324 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121033559 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161465612 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167848409 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118306709 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170395059 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118928978 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122739747 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098935326 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212966937 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144799934 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121764461 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092868737 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118179821 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147398414 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125955352 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117485073 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169126863 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.474798253 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18729661 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087404929 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126688797 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117960749 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160301213 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115506909 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236076354 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121063822 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168520229 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11920774 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086162844 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120430503 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162007709 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121950794 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120566737 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121460875 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096940755 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.254357975 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194340613 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120406602 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241247222 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182351186 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096281306 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190743795 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099456819 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186952159 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097828732 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119938863 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116357428 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751373223 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123307859 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118953514 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093287298 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195960359 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11106474 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.121407724 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102831444 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107852699 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785582728 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105037052 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120474267 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.122103412 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095018732 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118536173 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116358749 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092992295 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17961512 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225799961 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097366216 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118899038 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123026908 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158698765 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.114763484 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103598544 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124253195 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124178979 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.09995298 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11398192 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123770732 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169013963 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162432136 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218041226 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.586852671 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090280436 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124001089 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226006936 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110626943 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263825096 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119044351 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223933475 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161811609 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120295777 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305868204 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165304279 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195506879 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125740496 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174150795 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10757396 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096864905 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182857388 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089526621 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115628699 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162247515 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123125634 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101020236 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956659963 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110598745 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224049722 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107617131 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170547838 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115370818 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096990113 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288348583 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110539384 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106158564 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184817817 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093541769 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124085895 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.713151405 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103642369 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121585464 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116608902 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21808373 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164104502 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118116636 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096760326 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118642053 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161463355 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.204675518 seconds)
  done (took 43.654142901 seconds)
done (took 62.914945964 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276748491 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21647969 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270546458 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168685822 seconds)
  done (took 1.884039655 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170006375 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14795407 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121734591 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106686864 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148791942 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084691386 seconds)
  done (took 1.655131479 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.357437601 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273006198 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241502785 seconds)
  done (took 1.751795266 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288366203 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.243921924 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471450259 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32243432 seconds)
  done (took 2.323867246 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207640063 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132231558 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110202934 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103869043 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.193967941 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.242691794 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140507265 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198403975 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098514157 seconds)
  done (took 2.350470366 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.193687726 seconds)
done (took 11.037449278 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.257900566 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.221494508 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.207983455 seconds)
    (4/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.258216887 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.160608247 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090568917 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121186091 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095968816 seconds)
    (9/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.118579282 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103954302 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.219197452 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.216919466 seconds)
    (13/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.180189769 seconds)
    (14/309) benchmarking ("sort", BigInt, false)...
    done (took 0.241659719 seconds)
    (15/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.169832423 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085806486 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.143200104 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.132678798 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.240383107 seconds)
    (20/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.161403555 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.250792045 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.247979463 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.22112155 seconds)
    (24/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.181858375 seconds)
    (25/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093239119 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.123820249 seconds)
    (27/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.185949006 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.170631263 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112520123 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.234374999 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.126669732 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.12626541 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.125869316 seconds)
    (34/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118209739 seconds)
    (35/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.196980445 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.216026449 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.113537017 seconds)
    (38/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152908443 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.203374664 seconds)
    (40/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.082419627 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.122172318 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.163868589 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09278959 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133792334 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.214697127 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172806455 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.088320727 seconds)
    (48/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097379871 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.181652497 seconds)
    (50/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109305151 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096692653 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.214256588 seconds)
    (53/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116574552 seconds)
    (54/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.133596696 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.090256504 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.181474857 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128930191 seconds)
    (58/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.150039981 seconds)
    (59/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.123538433 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.136917122 seconds)
    (61/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117670397 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085113585 seconds)
    (63/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.148507499 seconds)
    (64/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.159857559 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.211154549 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 0.109794455 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065916358 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153043682 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.193297562 seconds)
    (70/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075239206 seconds)
    (71/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11903617 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116217259 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.131742259 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09371623 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.197109515 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.161369048 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174462624 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115778942 seconds)
    (79/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.106271044 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.221332443 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.146973146 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109489188 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095649164 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.107318346 seconds)
    (85/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066194988 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.173668881 seconds)
    (87/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066922156 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12055671 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138696327 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.115370471 seconds)
    (91/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.120191109 seconds)
    (92/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.190186981 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.223433489 seconds)
    (94/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.180788535 seconds)
    (95/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117321903 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121116973 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066438178 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094644604 seconds)
    (99/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164324398 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114308566 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168041283 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.176444574 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116942538 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097436571 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113600297 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.188086645 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099146995 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.143059367 seconds)
    (109/309) benchmarking ("sort", Bool, false)...
    done (took 0.180826337 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094646968 seconds)
    (111/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.089433312 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195573788 seconds)
    (113/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095968412 seconds)
    (114/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117624658 seconds)
    (115/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094163647 seconds)
    (116/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178297563 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086696252 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.133058765 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.112935795 seconds)
    (120/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093066757 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.422009535 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06716773 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090233471 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142919272 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109262298 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213106964 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114663838 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116883648 seconds)
    (129/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.207737579 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.188075056 seconds)
    (131/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065855404 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141007641 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066416652 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119737117 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06804484 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108299279 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09398286 seconds)
    (138/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107583717 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.221269966 seconds)
    (140/309) benchmarking ("sort", Int8, false)...
    done (took 0.186313686 seconds)
    (141/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.07647774 seconds)
    (142/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.116992519 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.191848644 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.141996893 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06630356 seconds)
    (146/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109553153 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067352368 seconds)
    (148/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.196197594 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.109918117 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065303977 seconds)
    (151/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066689123 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.139215283 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116127747 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066378058 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179099276 seconds)
    (156/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.161053495 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212623235 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091224607 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108954947 seconds)
    (160/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090664702 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108602689 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.152622643 seconds)
    (163/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088354769 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10805436 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089763963 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107637403 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066865792 seconds)
    (168/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.089721447 seconds)
    (169/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096252084 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067406074 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.103281208 seconds)
    (172/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093093413 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118857681 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.119113109 seconds)
    (175/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.141091648 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178480693 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.135294524 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095057808 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123938252 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107304592 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113751224 seconds)
    (182/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095921819 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.089705107 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09273539 seconds)
    (185/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.118094259 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.132627574 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.125529212 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.107275223 seconds)
    (189/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177852442 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066377467 seconds)
    (191/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087977399 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.089499577 seconds)
    (193/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.089704849 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110171034 seconds)
    (195/309) benchmarking ("sort", Float64, false)...
    done (took 0.170818221 seconds)
    (196/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095226749 seconds)
    (197/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118232715 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116110778 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.133045925 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113235206 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11497897 seconds)
    (202/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088483747 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112225853 seconds)
    (204/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136727045 seconds)
    (205/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100088798 seconds)
    (206/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11405606 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06597271 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.089905775 seconds)
    (209/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066490139 seconds)
    (210/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128456448 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087965495 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084849583 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132076133 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.09039215 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085352829 seconds)
    (216/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067568414 seconds)
    (217/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113721594 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120272668 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.124259374 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.112238359 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117458184 seconds)
    (222/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.092388287 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.185560007 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086272836 seconds)
    (225/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066994853 seconds)
    (226/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.100270439 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093443637 seconds)
    (228/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136667345 seconds)
    (229/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13471552 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138908635 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11562957 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068550878 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.130800946 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066771983 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.117894721 seconds)
    (236/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067716982 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109459265 seconds)
    (238/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08536194 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125394129 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111191164 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115463928 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066842206 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109746969 seconds)
    (244/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088270859 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109423373 seconds)
    (246/309) benchmarking ("sort", Float32, false)...
    done (took 0.173266922 seconds)
    (247/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077765589 seconds)
    (248/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115429107 seconds)
    (249/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.087639785 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117029081 seconds)
    (251/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085911267 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109304446 seconds)
    (253/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067943656 seconds)
    (254/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118109736 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067073483 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100958423 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117775689 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195088663 seconds)
    (259/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067327346 seconds)
    (260/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089742392 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068119246 seconds)
    (262/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13531583 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108128477 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.070586509 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110575922 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.183594334 seconds)
    (267/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.124574229 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.090166556 seconds)
    (269/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111602649 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.214398499 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123823116 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109096173 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086796496 seconds)
    (274/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.146538898 seconds)
    (275/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088720678 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090336675 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089176041 seconds)
    (278/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067710552 seconds)
    (279/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123246097 seconds)
    (280/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069273195 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117833317 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067182174 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108093969 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085673336 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.088788575 seconds)
    (286/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076142739 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085170536 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109846969 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117260087 seconds)
    (290/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086306692 seconds)
    (291/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066794445 seconds)
    (292/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089854095 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086733766 seconds)
    (294/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.088763986 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092133213 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108417718 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.106920366 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.136302202 seconds)
    (299/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114309848 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086104789 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109710385 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086085461 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066538084 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.114472502 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067394573 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089036584 seconds)
    (307/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075898405 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078669934 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090257954 seconds)
  done (took 39.65179773 seconds)
done (took 40.534991202 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09909759 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144213304 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096076176 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134790011 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.121929329 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091510995 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117124102 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098059567 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121103935 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123508039 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097573195 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.091867245 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095785133 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118662753 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096543585 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136996452 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122577934 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093727931 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117047412 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085681181 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117632717 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086403426 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110986959 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069868932 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121166067 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093430768 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116417137 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119031212 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086636469 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109038063 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089870817 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116770175 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086032554 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12319884 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092950106 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.116793426 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.118454727 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096740868 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110346139 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086530442 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116897792 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086521275 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115563388 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09735848 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116956441 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092103032 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119529856 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123495332 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115164887 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115175628 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095266038 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119684465 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095729827 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116273998 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090081072 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118534718 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.114739088 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115683408 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118919123 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092502667 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117606146 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094707472 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115662712 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.117448279 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095582525 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120461385 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098670502 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11531346 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096200994 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115057799 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086673609 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118789276 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.113234082 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087272174 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118184143 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097695708 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108560699 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092787425 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116653264 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091989556 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108775632 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089384041 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110968146 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093949598 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112014051 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069564461 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113719085 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093313742 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109002774 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09617983 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115740331 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094027395 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111366758 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120651578 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086829553 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115157842 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087007192 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.109501311 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088489122 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11312842 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086409501 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112178866 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.09564613 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.110948681 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093123095 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12195362 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086965218 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11623746 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086337235 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109112366 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124210136 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096460525 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.109901721 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091719594 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108600267 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094668161 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109048496 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086631545 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109712392 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087825071 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115688958 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087410174 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112265697 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093902253 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123863993 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087192831 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113484002 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090049716 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109452811 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092313223 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109550051 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086507344 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11172393 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077700881 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112516736 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087409279 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117508105 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089328282 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117840768 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111668697 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095397087 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.114897589 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092624853 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11556123 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086603352 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.097099124 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092411512 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112598579 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088210901 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110024258 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088916762 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.109273692 seconds)
done (took 16.829606356 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086743088 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184109771 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150857733 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140876568 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107008765 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110075657 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120913931 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119110112 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111775801 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141603171 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110694958 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131257523 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14634946 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086033867 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110556084 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090929739 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11200012 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102942305 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144039055 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132417031 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163921501 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08732559 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146107744 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134522923 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120011475 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114091231 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11173763 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091211979 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113817535 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103421443 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131211863 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114999994 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088233058 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133396527 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104801001 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119279423 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087583748 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116930242 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110582082 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088075631 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140598412 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133027863 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092772616 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116478502 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091673977 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112899064 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089093658 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120698112 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121437349 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091666555 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12657652 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156175951 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090498998 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12134744 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086702575 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121420772 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121721221 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089708606 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112055072 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090835707 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112601292 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091164686 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126934435 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140568214 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091502768 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120919465 seconds)
  done (took 8.565475605 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103784655 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138539873 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128939311 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105913879 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11099866 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087726126 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112212533 seconds)
  done (took 1.734736744 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088210313 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133839863 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127893812 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134957289 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13033416 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108081019 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122459165 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088089768 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130440641 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08921602 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132498812 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151467829 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090081112 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119251163 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135991947 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088517446 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136716723 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088899222 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11511445 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.135968739 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091224969 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133508168 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089616849 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112420881 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103058291 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113552451 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161853137 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093448076 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113605138 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091545001 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111173314 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164950951 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103193069 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122803752 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112941277 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103123091 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127257077 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086612548 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128902307 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094591113 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126295492 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113334279 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089705786 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.110962199 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093323117 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122846033 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089852325 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113770665 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091229851 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132778043 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089794466 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126926607 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089666745 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11690376 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114083427 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093995515 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122814615 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089000837 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133405424 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090383767 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130747934 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130813146 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102483382 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130244045 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09159137 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126424037 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127573212 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.091500385 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113992511 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092752864 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129487261 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086495265 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114696272 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099617619 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114672309 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.13654423 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112268602 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114704006 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.09879815 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112955899 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089824013 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113046757 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112332283 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116729986 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112953644 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092540079 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11659346 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087407834 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111704723 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093126324 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11172603 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090994582 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116415996 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089622271 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115306834 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106200999 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113843486 seconds)
  done (took 11.755554337 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090276316 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113434547 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09120031 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113323295 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090090144 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114295717 seconds)
  done (took 1.568636386 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11452582 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11643726 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10407347 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119403461 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156425385 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.127940223 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104009228 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123060906 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108147285 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125883082 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128453496 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105287869 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134233647 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120694668 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104335891 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119974891 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128687351 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100110588 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126773455 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097131872 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135515923 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120203615 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096335962 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130889804 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117296619 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096319901 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124977487 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103707368 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126207803 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122439347 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096259458 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117469215 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120148536 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098500561 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12831531 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096460407 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119517396 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118025399 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100375553 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117066286 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.129627443 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096239033 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125739533 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094347203 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12293771 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120491605 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093907948 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124768759 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.128825566 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093515392 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118823162 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094590357 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.1168497 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.117627387 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096431555 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122496282 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093899598 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129508478 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12027349 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096645014 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117327136 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093376236 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122744893 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117370618 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10468061 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11880096 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120659205 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096292986 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121184672 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095607349 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118303051 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116952349 seconds)
  done (took 9.190589646 seconds)
done (took 33.751192137 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.676354912 seconds)
  done (took 1.631195322 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.71058906 seconds)
  done (took 1.668205166 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.683907865 seconds)
  done (took 16.640328217 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.492124486 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.576896054 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.81656377 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177850832 seconds)
  done (took 3.020594458 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.906758242 seconds)
  done (took 1.884552408 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294330009 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255421976 seconds)
  done (took 1.514649519 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.755943299 seconds)
  done (took 1.72586874 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.345854628 seconds)
  done (took 2.310906856 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328121071 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184170291 seconds)
  done (took 1.484245878 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546155253 seconds)
  done (took 1.519113016 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.804576744 seconds)
  done (took 7.782252706 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255642975 seconds)
  done (took 1.241602582 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299457125 seconds)
  done (took 1.274142884 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.274344509 seconds)
  done (took 4.248311162 seconds)
done (took 48.906889781 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098370337 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125388422 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101662486 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123152509 seconds)
  done (took 1.418331561 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10075624 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119779421 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100454912 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119587814 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125016755 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09548426 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122537342 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101131178 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11943222 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097037541 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119256783 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119573959 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098626717 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121447544 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093501679 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12236568 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123442097 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095465617 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123270834 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095891242 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117741302 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096861248 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12337633 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117360733 seconds)
  done (took 3.646233665 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100359119 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117887639 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096088916 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116993374 seconds)
  done (took 1.407991472 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099340049 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140584517 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137093478 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100809455 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141487609 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135183884 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091359084 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115662282 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094450283 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124467321 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090436535 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.147792729 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136520962 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100014215 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.125270636 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112226073 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091792951 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136285778 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09958736 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124852239 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09360444 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123679139 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090609236 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.1376663 seconds)
  done (took 3.770304974 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.15669376 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.148509716 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137325171 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095328225 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.154682061 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139381759 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087881174 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139704019 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08943512 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128455951 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11781431 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133366591 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127133753 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087726407 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112817317 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087444876 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12603635 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127010578 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091040796 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143607041 seconds)
  done (took 3.417200386 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098096996 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116066519 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087816594 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116181431 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098718479 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120130502 seconds)
  done (took 1.621109075 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09102806 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114239244 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089816551 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113509215 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093985793 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113951071 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088898401 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113782646 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090101239 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113493771 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089540441 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112648805 seconds)
  done (took 2.208423538 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.453903008 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092611261 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119428361 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110299522 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096197654 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113506462 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103190955 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.117305925 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140114225 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088987255 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113690191 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091869601 seconds)
  done (took 2.625645517 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236704668 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123733702 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288878853 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190489009 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15930161 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170602511 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150918916 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165291918 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222382522 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156926271 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2086425 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219243605 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126112315 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217076664 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112176281 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143570734 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224842762 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218273249 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155139343 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229657553 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20104385 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163770441 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176900697 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151330025 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137071704 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168654393 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119732603 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104385209 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233000055 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177860568 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21312513 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163207159 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145639048 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239719457 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246970597 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196658245 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1880809 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133971 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145217176 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162219861 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267837118 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13803683 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23693876 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158912144 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104733709 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21997741 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167431019 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174120538 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149795101 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138162502 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198310494 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238600115 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193000967 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136763982 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161879291 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160592693 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165586543 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151325347 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251555633 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198917234 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202650428 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094476914 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144952921 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190481747 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18118091 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16702892 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206339004 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144841953 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192836311 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184889768 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164643212 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217183657 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180881121 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136617083 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167825928 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173677326 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17051528 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253050184 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177990079 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12087125 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167417662 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148403579 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130219618 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168399806 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123029699 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237289286 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124438889 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.13273154 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161539974 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160345386 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160973327 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199139099 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219664228 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147646567 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084051614 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156080846 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154082265 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187959098 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138934356 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159607284 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16018646 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128371813 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176851272 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122028078 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174826374 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091344767 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176429583 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207281331 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099819113 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156939834 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152848343 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148153176 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180283985 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198834777 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139605671 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132021029 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204232402 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199148492 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.122750508 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202843572 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199438811 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142332864 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147895563 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199359624 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243528332 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114268239 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227933854 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154660756 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133281694 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107775895 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176660521 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154261495 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15866424 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131937793 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180573393 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236467481 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098539839 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136476824 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188065811 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131512547 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130189065 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160619658 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147257003 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111536007 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14537788 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15153433 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206442069 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178287429 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151018555 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165516381 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150239813 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247624835 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115114719 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148560424 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14750618 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118720572 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193423999 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195834374 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130039779 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2031099 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.197196737 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12894403 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194464486 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108591257 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175723131 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128549709 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093374676 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217712333 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165445453 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16137627 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192856975 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154721395 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181197493 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.206085736 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172240206 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174265023 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163235438 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158211408 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.136884121 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157393636 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16373803 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097202157 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141399377 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133320862 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155695266 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141205917 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107018393 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224257837 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170122494 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147768885 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156510804 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147848793 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177659941 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102051345 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202225743 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175080545 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144944256 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195035968 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191019878 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210847008 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116486754 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230571578 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.11915115 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099015402 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141858998 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17122095 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132144167 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108249894 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189216703 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176510394 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18473717 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175352848 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161653564 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175040717 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187847933 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119659524 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167528843 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184632508 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174028086 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182890025 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139663135 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125266984 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173224849 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153867258 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253380792 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164971372 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200066955 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207162005 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147425099 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129273601 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149216951 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185743406 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153204357 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17518701 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14520474 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138150494 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160691826 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108050174 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158944819 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208601878 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161537411 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18910714 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148527448 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183662307 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126588026 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163921524 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156611946 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164036711 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107335213 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175881536 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202155815 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14595335 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168526826 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215964134 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104618663 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.176789288 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239112023 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193896776 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136481819 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157215026 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157846028 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16198718 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171751154 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176147102 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158365636 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187845084 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156678458 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136183907 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137460237 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148315116 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125164401 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131662459 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146791698 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173460015 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137512225 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187558317 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160143226 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156528368 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169891382 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149094651 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142407009 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149193911 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21539098 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17319939 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239189055 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.146660537 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178397545 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202804831 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124357824 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12981108 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105885013 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175890611 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135212537 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213871904 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120102632 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157092268 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180018053 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218048007 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111417069 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119001447 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155508599 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172927804 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163205261 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151817214 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159111254 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206802661 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142755285 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129407833 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170705502 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129819087 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145979741 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221347397 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080594283 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146344366 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100651699 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131980342 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162887063 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233060386 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108485945 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182269975 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166988457 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167269747 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162970705 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147359057 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147232542 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164345069 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197953562 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211800875 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104228444 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156655222 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174147991 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220194713 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159397952 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.137853036 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202121221 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189875667 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224249592 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114613137 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190508371 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164796461 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128511922 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20894496 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132681812 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205824466 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133083888 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195295524 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150226844 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142060617 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174400521 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.147201628 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141121519 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187157 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171743326 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133974028 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130804044 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167119442 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175823077 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154283477 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.124853042 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181621663 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.122712752 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189451515 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255474077 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106366431 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152059938 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14586013 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134195952 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156045941 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157013058 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137163637 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.137108136 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226757256 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.10674391 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215758108 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202026652 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192740666 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17375193 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142126235 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691440673 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10304504 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218026425 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152507596 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205174716 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149970036 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171587744 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156886943 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169188323 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192415392 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181891062 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202274129 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219440576 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176715754 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129906832 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15707534 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16149788 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.1421454 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151643159 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165247024 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157514188 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.125526501 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.20090587 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16916715 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.132501965 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113592393 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220386726 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127841547 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211538724 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177671004 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110609095 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196279407 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183421685 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131428312 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178710368 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234782542 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113012335 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149059616 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132074429 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154528773 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256836595 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096571108 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225242607 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174693452 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156018881 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165285022 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146953072 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188665392 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156289163 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199682879 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118253376 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156454736 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153489338 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136427693 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12808925 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151847228 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165105819 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120122577 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182642011 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.136612113 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188453272 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121230717 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142326809 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127771419 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214972403 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212849722 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136690459 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132851444 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161646362 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148135694 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172933216 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175777092 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.133865523 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108142222 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135013667 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.151691066 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112490233 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153226046 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154093926 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164699247 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203835912 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134796786 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27648745 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137647985 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15133977 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089129237 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130038711 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147696237 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117851197 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154564206 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14812934 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2570536 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.143504648 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105972358 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146611234 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123802524 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108809989 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162990495 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188468366 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173063733 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143387303 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081613554 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156572181 seconds)
  done (took 80.211531783 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170460639 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129370428 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144330948 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199863566 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173871388 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269375333 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208271494 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251273663 seconds)
  done (took 2.61322502 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093660227 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.143106726 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.150719578 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.130375079 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090567895 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118767201 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.327595119 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131440821 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090514857 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.137169066 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.169200786 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093181874 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.50170825 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.115938457 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.116713758 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082455931 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.113887558 seconds)
  done (took 3.667317637 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.454247467 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.655602051 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.473589293 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.121786195 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.906272568 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.131529053 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.269345922 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.200047987 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094164949 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.457322822 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.764220685 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.173706007 seconds)
  done (took 17.767080366 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098879962 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119521245 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107426332 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.133223289 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095781472 seconds)
  done (took 1.619021365 seconds)
done (took 126.96525437 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103188837 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.399507155 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071706685 seconds)
  done (took 1.571228657 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107075208 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.134793997 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108107219 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134190637 seconds)
  done (took 1.559509503 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097132534 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12493823 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108656292 seconds)
  done (took 1.40093753 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.317975011 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.186991644 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.140655551 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106183951 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127390073 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102425913 seconds)
  done (took 1.404164636 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096860624 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125388859 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097437968 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132495632 seconds)
  done (took 1.525054119 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094199622 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070468724 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098807216 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074324107 seconds)
  done (took 1.405500894 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113879868 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.128562902 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103688205 seconds)
  done (took 1.418633723 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129306253 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.136520687 seconds)
  done (took 1.338704528 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105056505 seconds)
  done (took 1.17391603 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118228749 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.16705167 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.18761794 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.162712498 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.222823626 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163822105 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.139309467 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113905411 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.127732376 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.141295063 seconds)
  done (took 2.617587171 seconds)
done (took 17.233275248 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102581504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.510637842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410623606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115568035 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720063878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380184548 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.017909056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144266148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164607284 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093949634 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136838235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67393666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.008420714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.466881841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970162248 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370746254 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702136755 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092940419 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117366337 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092801407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.003607439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091723728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120338047 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092768414 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701455777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424239472 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09473322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.36916652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092248557 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124351693 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382618389 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119821324 seconds)
  done (took 16.974433218 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094441489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171890278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098397169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134618222 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121029728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094061117 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122198511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092851772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177590936 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11992843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111673648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11881989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123461035 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094147849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139137033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092225008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122955384 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092118613 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118245467 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120412134 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111117877 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118563947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094523205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119121373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097134018 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133748215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121016395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092329402 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118425173 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09826116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124614928 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094493921 seconds)
  done (took 4.76258724 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140023598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180409927 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.1257717 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126700598 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.165743826 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121076695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19748093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14371284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153591121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120599705 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137202214 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092188937 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154281209 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120655408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113753663 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11986139 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097282349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119700855 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092426268 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120908725 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137612267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091852085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120736953 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092743351 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.120097836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133498153 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094716457 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119059385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093120006 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124426811 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099463761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121021181 seconds)
  done (took 5.07351445 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096101286 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124277411 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108690597 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.135973271 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095167645 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122975819 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096411251 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12185347 seconds)
  done (took 1.980290527 seconds)
done (took 29.860647219 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110084039 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124591183 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106402604 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131518265 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102636876 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.128373546 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090622651 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.131332052 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131159788 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101334854 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134962928 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091141351 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120702136 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091432742 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132653571 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097407268 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130681051 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102388121 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131013625 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.129885055 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093628751 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131252033 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10261505 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.130995432 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104141043 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.130110192 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135295386 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099016682 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120343669 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094291239 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.121758648 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102755404 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122359929 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104203779 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125518689 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097231024 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121407234 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094260457 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.129800283 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130906131 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098577751 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.130468158 seconds)
  done (took 5.915206987 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106985912 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138512816 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.1042496 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080847604 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115348013 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080595609 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135163066 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079816699 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108102459 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107515489 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073978998 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.103672969 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07826908 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102282617 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076819487 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075669076 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106395179 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07515878 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075695974 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.103498206 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079086931 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072892336 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10593007 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078752386 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.102160806 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08119792 seconds)
  done (took 3.533455081 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100802125 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133341604 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112579638 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18306291 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158779889 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099399299 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130929799 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138971506 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107748742 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118140525 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096173416 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.146785433 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110641834 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125826975 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091360804 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134458958 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132982055 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093397719 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125342528 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112799519 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136210537 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101995773 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140488743 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130413036 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.090388871 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121036972 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09631242 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13263273 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096488991 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128828404 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123513873 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.095602806 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120384625 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103212719 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123168284 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093460586 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13904573 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128269174 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100687719 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120030457 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095575866 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119419809 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112622989 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163756795 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090859132 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126479836 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126587636 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.101979742 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118881695 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1097909 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129320708 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091631326 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123187016 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091169152 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119376308 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105988124 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.120867502 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121475174 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101977994 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12266171 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104730454 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123298696 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107590678 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119433943 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099685781 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11795734 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119946988 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.090954151 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.15067151 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093046855 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161876265 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.120617069 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093675022 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127615317 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.098911127 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125348558 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092408794 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135707666 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10165754 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122943408 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127971073 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096177688 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121899628 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.110129846 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.121513492 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094034161 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120778604 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099128383 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122385977 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096081735 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133355371 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.119239994 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095183251 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.137308043 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091649154 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121089248 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098444914 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125095357 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09138925 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132946467 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.125075579 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093252518 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129587181 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093440856 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122931106 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102456853 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125005243 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090973382 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124392482 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125987966 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093452525 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121845287 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095717379 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.122405487 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102166034 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125998038 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097635438 seconds)
  done (took 14.621925047 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225197183 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212597088 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.244385377 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264591678 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.132175966 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.143011052 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211902513 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.123646558 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121152893 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.156869361 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.1598943 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183820351 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167531803 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.177388104 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110497329 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11893994 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.139255661 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134189774 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211413394 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.284192336 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.140415422 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100495161 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159717181 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157259352 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.134708665 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101510631 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.13706003 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130063793 seconds)
  done (took 5.686822004 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106532754 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154964679 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098490907 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142469177 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14587019 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09224195 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.124074644 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094322142 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.132817118 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13361594 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092322757 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126601832 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099499148 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128768452 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121004094 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103211171 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129764928 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094772664 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123424695 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097370666 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.126987702 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.129428851 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09734653 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120156378 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.099256532 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119181072 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08634941 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139736063 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.11983129 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114335595 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118781766 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099746316 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.130613412 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09298401 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120936058 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094740736 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122994258 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094994285 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122256309 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091688149 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.118154579 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077192679 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119525197 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133855192 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099063781 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107428369 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099118849 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125674565 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098227395 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118778787 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095538319 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12258831 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096394742 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127249361 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.0976657 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126667086 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095595276 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11290061 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099173325 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123522856 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083899455 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119051204 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097427947 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.115081914 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100072293 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12604673 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09117082 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122475052 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097578757 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126572961 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122105292 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.095977721 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.118620108 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.095760735 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.125163654 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097118218 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123660655 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091400395 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119983496 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093627355 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.102829541 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.092876301 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074436036 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123176212 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091440132 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119229582 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.122871567 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.098677244 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136512845 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094493197 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.127259783 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095018109 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118761498 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.123002922 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083339919 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095448129 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13493597 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138147677 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092208787 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119353935 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106860188 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125369027 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119752864 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076761273 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.099609416 seconds)
  done (took 12.759432018 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126378997 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150845298 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095309555 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140481358 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.152322274 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.154712175 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100447592 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127465669 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094170302 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138589211 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09275917 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.128503904 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096503826 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134051082 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154774549 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102289775 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121946657 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.105988416 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128292251 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.166404075 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11076499 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.13890826 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.135419176 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093013027 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125943933 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109509698 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.158722853 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.135934303 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106926373 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139546165 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107323784 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158108346 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140621293 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097061993 seconds)
  done (took 5.388809141 seconds)
done (took 48.984016143 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.201085389 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.382349352 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.172948447 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.988881286 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.193402569 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.184801888 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.202565775 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.184817251 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.298983099 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.177870178 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.408328292 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.709902422 seconds)
done (took 59.213126767 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.259929877 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.312422929 seconds)
    (2/2) benchmarking "String"...
    done (took 1.442620168 seconds)
  done (took 3.864191217 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.532133492 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.045748581 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.439769676 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.178797663 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.176545169 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.484135225 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.653554318 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.394227479 seconds)
  done (took 27.481443137 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.177511871 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.539820106 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.362856748 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.360887296 seconds)
  done (took 17.552025528 seconds)
done (took 58.79498481 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.200843545 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.211219142 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.181805718 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.159224915 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.278780628 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.209268799 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.44694914 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.423803149 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.190891321 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.173015865 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.180283209 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.178652364 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.208803261 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.424797506 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.194424398 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.191907718 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.256969699 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.649544587 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.542284059 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.194300027 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.202836822 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.219008399 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.187798012 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.201151055 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.217037687 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.184997203 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.17943634 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.205657175 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.207877752 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.187961994 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.274544005 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.674225855 seconds)
  done (took 190.551149162 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.17992542 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.227338915 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.339160455 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.224473205 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.532860224 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.384502067 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.308624928 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.689288539 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.2012497 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.186686372 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.406243006 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.186834032 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.481393524 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.178139639 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.19029466 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.2818973 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.370861519 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.49285247 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.201933978 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.448324952 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.202966626 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.421343998 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.339999686 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.375076227 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.201479455 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.268067506 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.232049873 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.200327893 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.377126011 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.322116134 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.20954842 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.246034319 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.71895473 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.043981708 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.191778105 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.206537871 seconds)
  done (took 149.182162024 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.448846965 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.181564468 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.180974002 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182223994 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.209563362 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.181709551 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.670881313 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.67610965 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.678184316 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.669394594 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.243989093 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.38538382 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187560961 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272334722 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.194238233 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.181747957 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.19723425 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.22217126 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187358189 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182666485 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.672390011 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.200424175 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.31028105 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193345427 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.182801476 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.210872504 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.568535069 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.183124996 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.211751597 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.491546079 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.225076099 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.182036409 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.441117567 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.264564277 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295783989 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186523152 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212645328 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.185147426 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.185091189 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.447315858 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184219715 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.184654127 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.18787778 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.182803576 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.730672641 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.187585469 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.674513303 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190491032 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.055180264 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.188878701 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186450532 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.736422898 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.590050485 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.204646699 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.184137552 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.185759549 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.18530006 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.18416487 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.213591504 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.727943727 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.282647891 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.19868186 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.189133589 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.212446074 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.186334454 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.360347447 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200229512 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.823989389 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249907724 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.406459978 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.676935342 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189015716 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276323734 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302520146 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.187142903 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.187060342 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186438339 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.186818731 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.289230401 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.186950098 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.555835085 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192725739 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.187820369 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.247110659 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.276975698 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.186560787 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.442552278 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.194503738 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.186758326 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875526248 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28110892 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.18720702 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.187807909 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18693204 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.55870988 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.678930738 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.334983661 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.195003348 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.806201999 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.191437636 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.186695282 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.574685957 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.670542957 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.748685254 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.194330489 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.189887579 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292956203 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19243011 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.189630498 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.18855625 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217757902 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.203965734 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.248014833 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.189198926 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.580256948 seconds)
  done (took 343.621064513 seconds)
done (took 685.913753336 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.868341181 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.823165781 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.946998007 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.841431402 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.819716542 seconds)
  done (took 10.41809633 seconds)
done (took 11.534406221 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.360807326 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.364498607 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.248600644 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.365350463 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219122487 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.379077621 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.343064039 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.214561231 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.284705787 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.267237668 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.283558964 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236488981 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212069913 seconds)
  done (took 17.897849557 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.489214409 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.494610995 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259726297 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.486712655 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233420334 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.489599036 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383242675 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.403843624 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396797443 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228746769 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204604557 seconds)
  done (took 16.182878345 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49030167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.494329191 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264564671 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.489742994 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229905528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.486930417 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389539215 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400140431 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407620644 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227869169 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204713652 seconds)
  done (took 16.206774669 seconds)
done (took 51.405581692 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.199691716 seconds)
  done (took 2.320744052 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.232010812 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.389493453 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.217572515 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.205635354 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.201432722 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.201647148 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.205798467 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.200062897 seconds)
  done (took 10.977586018 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.198319073 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.196802632 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.200805549 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.197794991 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.201316596 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.196163517 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.198615151 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.197613321 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.198134954 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.199743383 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.199985186 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.200553457 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.197945507 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.199832586 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197178941 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.200286925 seconds)
  done (took 20.303475884 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.201276424 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.198163664 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.197583815 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.198478665 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.197474128 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.199868406 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.199752009 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.199341847 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.19938758 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.19883704 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.195449077 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.198575861 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.199869899 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.198768714 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.199600684 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.199908028 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.19889358 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.198512967 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.200170712 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.196296304 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.200332307 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.199932491 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.201268953 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.196101067 seconds)
  done (took 29.899061408 seconds)
done (took 64.621066987 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.108380471 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.683330337 seconds)
  done (took 8.908382711 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.201728799 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.203184811 seconds)
  done (took 3.528245485 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.20504443 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.198617583 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.204014087 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.199759487 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.201374618 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.203104641 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.202857602 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.202712906 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.198918767 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.202158819 seconds)
  done (took 13.140745484 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.20350023 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.20298325 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.20157331 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.202709987 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.203247511 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.201069985 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.200392228 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.205624166 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.203012545 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.201081981 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.203013548 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.201546632 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.203156768 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.197866621 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.20338687 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.198683555 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.201018369 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.201036643 seconds)
  done (took 22.756614 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.206004191 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.204378803 seconds)
  done (took 3.536669753 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.201372339 seconds)
    (2/7) benchmarking "second"...
    done (took 1.198537119 seconds)
    (3/7) benchmarking "month"...
    done (took 1.202152109 seconds)
    (4/7) benchmarking "year"...
    done (took 1.201527405 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.202095477 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.196976568 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.19456745 seconds)
  done (took 9.522847119 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.198469425 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.380095497 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.461830886 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.81509711 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.199923041 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.190334077 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.068448128 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.192063689 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.192413872 seconds)
  done (took 13.818947934 seconds)
done (took 76.335871852 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.167455378 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.188439324 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.241740795 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.189596004 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.189093438 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.509976823 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.182894363 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.298849497 seconds)
done (took 37.076902481 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.186224141 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.875136403 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.878580168 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.174304957 seconds)
  done (took 11.021983468 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.144263605 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.023086668 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.150622883 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.139040324 seconds)
  done (took 17.5510259 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.120404349 seconds)
    (2/2) benchmarking "read"...
    done (took 1.49871881 seconds)
  done (took 4.714091782 seconds)
done (took 40.566439447 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.173068572 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.171492954 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.168982278 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.17075889 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.16873446 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.171491494 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.171298002 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.168179629 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.169361369 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.171336011 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.171375506 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.170914004 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.171033716 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169095948 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.166796055 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16565069 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168500506 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.166640894 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166893664 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.168642899 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167844934 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167782913 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.164872808 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.164829139 seconds)
  done (took 29.152335136 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.168656769 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.166884271 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.168621606 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.168673126 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.167351899 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.169309815 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.169733949 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.167555299 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.170076716 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.169935157 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.168450003 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.167215388 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.170153226 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.16626851 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170121119 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.167232831 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.170111981 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166274145 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.169439437 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.166925151 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.169931007 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16633432 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.16564199 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16835046 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.167695152 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.166721469 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.16967979 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.167164553 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.170888878 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.164770385 seconds)
  done (took 36.138625917 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.171360853 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.173177278 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.168106337 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.167925357 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.165430095 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.166060248 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.167543714 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.169976227 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.16303105 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.164975294 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.163662442 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.163956858 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.164264419 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.163826038 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.164489219 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.164840211 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.163693814 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.162151675 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.160947759 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.161913873 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.160575482 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.160347092 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.161275213 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.160731313 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.162536697 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.15991829 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.160110928 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.160500083 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.160267559 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.159253104 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.159692561 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.160328371 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.161150868 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.161474479 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.16048085 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.160307215 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.164127604 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.165646626 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.160335157 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.160127662 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.160073081 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.160645956 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.161522292 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.160967846 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.159511298 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.159486552 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.160839778 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.161254444 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.161328755 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.160915508 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.161265523 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.161252226 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.161510745 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.160774346 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.162372175 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.160823597 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.160976903 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.161878994 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.160514052 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.161300496 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.161957691 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.16124366 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.162334902 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.161621864 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.162351728 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.162274037 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.162834284 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.162506276 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.162605257 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.161929739 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.162639578 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.163159675 seconds)
  done (took 84.794784465 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.162273704 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.160307081 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.159781146 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.160219256 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.160593869 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.163062803 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.16081865 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162231466 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159839614 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.164216882 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16336111 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.162994543 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160999512 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.164188607 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.162841423 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.160598928 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.163200504 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.16003956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.164474537 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.163451167 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.164190866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.161114403 seconds)
  done (took 26.649688944 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.163886306 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.166383479 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.161729877 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.164587428 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.162170029 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.163686717 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.164363388 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.166987712 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.164770274 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161744507 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160994065 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.164989081 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.162539553 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162571164 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.161985425 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.164032531 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.164630002 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.164315736 seconds)
  done (took 22.031661275 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.162524863 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.162571225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.164708942 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.161821485 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.16334364 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.165239985 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.163013034 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.164207462 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.164964142 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.162327534 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.165626724 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165427935 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.165327818 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.162679148 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165845649 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.163480668 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.16628461 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16262339 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.166151393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.163288274 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.164221342 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.166239023 seconds)
  done (took 26.698571664 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.165375422 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.165162944 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.164179285 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.163911601 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.16330834 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.166594466 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.166099011 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.164436625 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.167672649 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.165973773 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.163672358 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.16635655 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.164882828 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.165035696 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.164958608 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.164182716 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.166637401 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.164842469 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167135976 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.165284813 seconds)
  done (took 24.393799199 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.168122657 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.167500423 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.167808133 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.168405243 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.168149845 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.167376254 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.168082415 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.168282145 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.168668098 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.169034184 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.168764021 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.167726842 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.168385878 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.168807054 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.169301251 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.168743626 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.168936164 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.168943892 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.168317083 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.168948839 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.169020144 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.169083701 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.170139097 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.168721022 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.168810674 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.16953255 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.169686291 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.169181907 seconds)
  done (took 33.81271634 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171026394 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.169367564 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.167610897 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.167312103 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.167363247 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.166344857 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.166388384 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.166985415 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.170216647 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.167422793 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.170443894 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.169113292 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.170797914 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.169857039 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.170969073 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.169727963 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170733599 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.168320173 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167340258 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166869039 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.170368315 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16978564 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.169901846 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.166894042 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16658437 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.169214786 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167722557 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.166560448 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.168558205 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.165942963 seconds)
  done (took 36.147990071 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.186800634 seconds)
    (2/2) benchmarking "in"...
    done (took 1.187994292 seconds)
  done (took 3.464810799 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.165868899 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168607531 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.169760344 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.166506911 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.167821638 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.170390208 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.169957141 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.167846036 seconds)
  done (took 10.436539831 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.169386071 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.170228393 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.169708018 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.170107181 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.169661 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.171835987 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.178407 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.186950704 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.171193862 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.171279105 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.175970105 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.177680618 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.173986797 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.171345806 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.170243948 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.171776729 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.170015401 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.172337473 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.170508407 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.171866174 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.171111234 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173185989 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173918167 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.168112981 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.171556341 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.181783852 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.193285848 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.171196926 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.170865743 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.175549525 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.171548194 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.168441157 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.171811078 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.171636362 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.172126323 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.170779916 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.181904513 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.188298886 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.179052408 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189342216 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171880761 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.170467831 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.173212687 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.174109546 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.174673004 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.172231507 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.171346462 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.169291882 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.171818137 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.175628567 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.177686359 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.172238569 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.171397496 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.176722601 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.173945631 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.181537785 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.189719433 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.173880427 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.181025207 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.183743558 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.202469102 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.193879719 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.175474031 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.173494527 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.182974134 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.193199884 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.181387652 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.188249177 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.171682008 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.174366677 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.18076622 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.204147823 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.196789146 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.173763209 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173958664 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.176586607 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.173806933 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.175557253 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.181503611 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.193730471 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.173751263 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.175272992 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.183240953 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19381282 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.175282603 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.175567189 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.174609071 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.175616579 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.178067449 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.185815579 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.189279318 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.176068235 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.174464391 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.173670951 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.175729185 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.175348033 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.174221183 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.176370626 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.173769836 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.17561004 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.175423276 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.178547026 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.182929573 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.174255948 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.176053562 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.183327177 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.193950983 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175668086 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.182768281 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.17625068 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175863921 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.178022719 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.181885495 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.173834812 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178514593 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.183955558 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.176085249 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.177704126 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.176194512 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.175907602 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184054875 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.198233776 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.175630112 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.177135161 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.180720971 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.186767113 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176795248 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.177623144 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.176880801 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.175927565 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.17511239 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.177419031 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.177345668 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.179012332 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.17736756 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.178162307 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.175625469 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.17692257 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.177122081 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.178532473 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.178619968 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.178624086 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.17926059 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.180277448 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.17766502 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.178194726 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.18466708 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.195563462 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.178775396 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.179201477 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.175906218 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.178376269 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.178985937 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.178428173 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.17855515 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.178777103 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.17865866 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.17841075 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17902633 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.179360787 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178451026 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.180174616 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182770841 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.179574041 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.182472713 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.178408522 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.177416073 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.179273278 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.179793701 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.178771633 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.17989975 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.179023738 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.181785087 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.18626643 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.179046431 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.17966654 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.184647588 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.179592046 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.1796883 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.179965881 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.18237148 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.186643822 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.180224198 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.186708749 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.196934962 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181861875 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.180456362 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.180534402 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.179273761 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.179994498 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.182184292 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.187997125 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.193040876 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202079335 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.181882104 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.183946911 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.181462312 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.18386985 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.18529256 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.181052682 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.181424857 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.180472353 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.181874763 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181399329 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.183266645 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.18279555 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.181229536 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.183019487 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.181389303 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.181608515 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182228116 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.183366833 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.182486107 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.180281034 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.182719609 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.181178186 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.182623 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.181236319 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.180925198 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.182704671 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.183220466 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.181869255 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.190354064 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.18210014 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.184481944 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18450305 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.182778198 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.182902606 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.184637724 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.185228336 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.182949181 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.189702138 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.199173318 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.183795047 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.190137633 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.199469347 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.183863823 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.187547131 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.184614288 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.181458691 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.186082739 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.190912155 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.184160356 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.184440719 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.184280707 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.184205718 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184929319 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.191229126 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.19863616 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.184007618 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.184670602 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.186338516 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.183893319 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.185867151 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.184512343 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.18550108 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.185561871 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.184800496 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.184347383 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.185470674 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.185486556 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.18502425 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.184193381 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.186563068 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.192265357 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.189782718 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.185014336 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.187567675 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.186100765 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.189035142 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.184466633 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.185151885 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.185071553 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.197248128 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.207087211 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192276061 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.204270322 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.186451318 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.191262745 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.203913591 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.189913442 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.186350216 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.186338412 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.186989696 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.186308781 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.184605169 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.187021315 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.186913092 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.186726594 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.188176222 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.189950695 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.187027036 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.18708932 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.187209081 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.188932863 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.187668525 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.186574296 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.18774419 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.190296619 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189679408 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.187361132 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.187624823 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.194488452 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.204930321 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.189305918 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.187977594 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.188298589 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.187642221 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.1892108 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.187429574 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.190828175 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.194893009 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.190857334 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.195852196 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.190284741 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.197196694 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.187557884 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.190547514 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.196656696 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.186878849 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.187186016 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.189359658 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.189940793 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.196903867 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.205321457 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.190908198 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.191535227 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187904618 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.189076388 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.189665387 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.189343927 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189269677 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.189977814 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.197669901 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.207145357 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.192477976 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.191975414 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.186903928 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.189818267 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.189977219 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.189117989 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.193851687 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.189565211 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.191319363 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.190244818 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.190669567 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.190399669 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.191179366 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.191067509 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.187486582 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.19072659 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.198365018 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.209105504 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194284652 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.190161054 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.199707222 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.208774707 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.198594837 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.207237982 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.19118638 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.191941312 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.190912854 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.193398765 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.191964159 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.193412484 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.192587635 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.191631411 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.194823312 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.192556264 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.195223056 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.192714196 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.191665452 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.192099805 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.200753075 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.211613241 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.193196114 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.195638818 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.190760382 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.193620655 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.195975179 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.192016674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.191934461 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.195669002 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.200662582 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200882893 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.1931651 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.19220181 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.193864892 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.193406767 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.193385582 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.195007001 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.193914289 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.193377528 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.195099781 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.193419111 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.197260217 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.195119853 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.194695839 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.196107373 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.195364168 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.203198035 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.21196867 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.195782445 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.194372536 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.195570431 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.194746623 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.19453892 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.193847978 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.195435693 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194444457 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.1948768 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.199981042 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.199915581 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.197349488 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.194665959 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.194711407 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.194923078 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.197660861 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.194842248 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.194656461 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194900145 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.195944903 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.195435496 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.195870342 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.193854202 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.196147728 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.196115353 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.195775468 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.198655574 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.201311087 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.195688757 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.194243399 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.19550549 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.196172217 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.19370944 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.197177937 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.203583055 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.21627203 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.205065599 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.202807967 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.199563775 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.197179915 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198813522 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.203147008 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.195588602 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.197549489 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.195884985 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.197876823 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.197288946 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.198669178 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.196533128 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.203602285 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.215973677 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.197465247 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.206941712 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.215300427 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.197728033 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.197962621 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.199606436 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.197706837 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.19565263 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.197022315 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.196923413 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.20447113 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.215628548 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.19757934 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.200487095 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.197803862 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.198406469 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200182095 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.198389907 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.199684375 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.195866834 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.199192601 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.198659555 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199524544 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.196768982 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.198806635 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.19857903 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.202231982 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.204294012 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.197963846 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.201565741 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.198839067 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.200177812 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.199583133 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.199814878 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.197557331 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.19710007 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.200441254 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.200124479 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.20025346 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.202106456 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.199419079 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.201332949 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.199765884 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.199808424 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.201428351 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.207287682 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.205344363 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.197433247 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.200252787 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.200634484 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.203446063 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199822441 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.200631469 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.200757744 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.202466062 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.200449793 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.200596947 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.199704186 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.203948628 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.217589751 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.218180784 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.200536794 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.201832252 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.204777762 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.201080389 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.198518238 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.201186756 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.203377642 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.204128114 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.207194332 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.200490105 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.208686337 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217185023 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.202794162 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.205519562 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.204167403 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.207295139 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.205494934 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.201484383 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.202040666 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.205148565 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.21607901 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.202968665 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.211638186 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228378241 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.220287373 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.204666647 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.202446356 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.201881162 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.202315494 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.205376506 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.202905793 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.203068227 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.204730615 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.203693159 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.20485686 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.208127101 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.205658416 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.205330868 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.204577246 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.204063925 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.20603264 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.202209153 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.204415231 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.2045141 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.20386601 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.204450422 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.204049038 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.204239113 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.215600638 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.227907725 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.204675027 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.204801072 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.202438775 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.208486752 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.206872135 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.214422804 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.211247269 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.204672389 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.204747598 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.206868567 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.205338544 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.204790189 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.205492628 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.205054613 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.205036162 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.203137833 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.216527556 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.228801724 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.210529721 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.205840215 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.204845203 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.205286259 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.206126377 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205839335 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204773356 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.206460133 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.208291814 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.209282472 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.207097389 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.20518519 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.208460469 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.211462306 seconds)
  done (took 710.574096913 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204122227 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203956102 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.203929559 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.204291019 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20267084 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203374105 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204248943 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.20353723 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.20431962 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203238416 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.204254506 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203801168 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204845779 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.204366323 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204882996 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.204992874 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204603057 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204870637 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203974824 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204721587 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.205254169 seconds)
  done (took 26.412869026 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.208154766 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.205024477 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.206073553 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.208361327 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205445477 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208053441 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.205556302 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207642842 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208225968 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205558534 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.207731157 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207743351 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.206533717 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.206776388 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204945973 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208206263 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.20811127 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206794503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.208744721 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.207230877 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209721774 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207188709 seconds)
  done (took 27.684707876 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.209315983 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.208935671 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.208258498 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.20646578 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.208693719 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.206335706 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.21037257 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.209118548 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.20992868 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.20911778 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.208750172 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.210260742 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.214846105 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.212821856 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.212380314 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.210465777 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.386201641 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.20954091 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.209523801 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.209292296 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.206620148 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.216049771 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.226786141 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.208005 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.209046611 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.208880464 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.210405498 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.2105983 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.211853001 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.21137152 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.213308437 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.210498168 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.210800748 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.213035407 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.210127238 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.211695124 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.21400063 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.21034545 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.208488615 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.211503536 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.219423433 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.227638543 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.21074108 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.218746981 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.230079592 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.212392232 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.213798754 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.218090057 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.208371969 seconds)
  done (took 60.69182466 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.211197985 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.211854395 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.208968175 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.212111741 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.213202312 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.211647002 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.211529763 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.213028716 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.210147793 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.210203954 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.212741809 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.209668392 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.20918959 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.212273474 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.213193165 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.209479823 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.210439552 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.209909569 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.209936908 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.2104344 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.211064999 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.212981598 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.214043815 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.210539282 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.213602543 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.211268991 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.21058143 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.213018863 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.21105309 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.21171109 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.213976611 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.214457264 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.213547887 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.212631741 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211767568 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.21367988 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.213890286 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.211989687 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.214646824 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.210870779 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.215571222 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.214133392 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.214515254 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.214936211 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.212029785 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.211890128 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.211621221 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.212684939 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.212103604 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.214393386 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.214557998 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.212575064 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.21463754 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.212811346 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.21501199 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.215005637 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.212738974 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.212227189 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.21490754 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.213506414 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.212622044 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.214907581 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.214217211 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.215782132 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.216267989 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.214036752 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.214514631 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.216876697 seconds)
  done (took 83.595735656 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215618563 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.216449425 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215459036 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21469833 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215463865 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.216423988 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.216912132 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.215394893 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.215300633 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216464931 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215372223 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.217214022 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.217114888 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.217371928 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.2163636 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.21632737 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215916298 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.21563328 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.216432703 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216063419 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.215405853 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.216424654 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216257462 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.215548559 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217111395 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.217548412 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216548697 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.216674505 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217397523 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.217233675 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.218598242 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.217172274 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.216392048 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216471721 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.216737976 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.216960261 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.217569803 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217628234 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.217479992 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.217404198 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.217445779 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217276671 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218047195 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.218548041 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217979248 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.217766879 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.217949115 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.218569041 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.218691214 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.219194822 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.219385906 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218248407 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218555448 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219067557 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.218087151 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.219705408 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.218984846 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.218521286 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218776044 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.218239711 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219515751 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.220497305 seconds)
  done (took 76.604552619 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219902562 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219661324 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.21689165 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.217831145 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.219723836 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216608478 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220175888 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.219897699 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22056282 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.220006026 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219526522 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217330763 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218196518 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219547726 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217869172 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217675293 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217579828 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216918578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2208801 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217080676 seconds)
  done (took 25.51084105 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.218847163 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.220602859 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.218521284 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218204891 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.221210837 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.219204453 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.221682324 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221053149 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219076584 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221703142 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221517068 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222183376 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218941747 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218658086 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.221593289 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.220267348 seconds)
  done (took 20.660642576 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.219623231 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.221716511 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.221464104 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.221509619 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.219682844 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.219555846 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.22254423 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.219234163 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.220367148 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.222866439 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.22279355 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.222741721 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.221825195 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.222206707 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.219524027 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.22330934 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.220503416 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.221129385 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.223190672 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.222599901 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.220738409 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.220894104 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.222921948 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.224508041 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.222144922 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.222101314 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.220398757 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.222561987 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.222812922 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.224542819 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.222124131 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.222284159 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.220752748 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.221626395 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.223683039 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.221625435 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.224853211 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.224648003 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.224938911 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.224383211 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.224558319 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.222683814 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.224726349 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.224832525 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.223266333 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.224668145 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.221094618 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.223165449 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.222693702 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.222378288 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.225014237 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.224043332 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.224472561 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.225877506 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.225093431 seconds)
  done (took 68.381477591 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224431773 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225131381 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.2230003 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.22491067 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.225280639 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.223870776 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.224999279 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.225155969 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223224211 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.225460488 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22402132 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.226430485 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222850625 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225497436 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224150956 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226872924 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.224033047 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.223985904 seconds)
  done (took 23.185623409 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.223673877 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224107019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.226928943 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224071747 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.224983394 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.2281791 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223999864 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.226018367 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22765947 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.224256473 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22542927 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.227890294 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226553787 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.227069852 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226047924 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225009032 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.227862901 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227320418 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225117316 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225416327 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229124789 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227404732 seconds)
  done (took 28.116778116 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.227363839 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.227010994 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.226075266 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.241088286 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.242531665 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.248548584 seconds)
  done (took 8.557073023 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233441799 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229122706 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225347517 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229432568 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228589143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225453695 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22694276 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225962342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229081858 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225398951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226152164 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228818468 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229004525 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226378236 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227649875 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229009122 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226198225 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226608282 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226838386 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229618683 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22705917 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229872812 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227264579 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227510556 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227534548 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227591135 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229821642 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227476711 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226899741 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229702202 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229073863 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227988469 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230764882 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227950247 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231303786 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229324537 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228333863 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231198112 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230203091 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227775674 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.230143793 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230693106 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230015976 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229133881 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230983686 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228537926 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229440536 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227335642 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228728446 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231566226 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232210922 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228572125 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231448759 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231025849 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231496173 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232088269 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229717487 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22926054 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232061011 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229681557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229605899 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231302432 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229575728 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229188587 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2316869 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229680339 seconds)
  done (took 82.283020825 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228692408 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.229631306 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229734644 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231360845 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22908865 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229627049 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231130584 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229717896 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229262587 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229968583 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232527776 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229853877 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229582283 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230943961 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230030891 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229577753 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230986034 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230791893 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231567911 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234024581 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230655285 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230964087 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230262029 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230626962 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231496228 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233603362 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230552463 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230708674 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23132669 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231563096 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231142707 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231702467 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232071018 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.232000075 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231506075 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232007309 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231277055 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231582083 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23174393 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234126865 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231614145 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23538269 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231924471 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232031629 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232255131 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232040024 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232834191 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233197837 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232745296 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23318839 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233028786 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232792324 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233105609 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232658588 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23266635 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233130845 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232649878 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233202788 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234721384 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235156856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233487473 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233394095 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236412767 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233438706 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234060477 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233933583 seconds)
  done (took 82.454128205 seconds)
done (took 1659.529453749 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.244890357 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.268281583 seconds)
  done (took 13.66464206 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.402512593 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.348747254 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.234238942 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.23772076 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.235366767 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.229973042 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.232021576 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.23542047 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.235573035 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.234592486 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.234435338 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.42251935 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.292646754 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.236641215 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.23646968 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.333049727 seconds)
  done (took 41.544741635 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.259510044 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.241577962 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.347523859 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.263779961 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.265931499 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.417622619 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.296157631 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.244124046 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.402945908 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.283470761 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.70388694 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.265232718 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.244312004 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.284741357 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.260406381 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.416101266 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.478215735 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.721124017 seconds)
  done (took 28.55027918 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.65744898 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.264864398 seconds)
  done (took 9.079117652 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.258992493 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.272113104 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.277703589 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.253661917 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.241589673 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.24496646 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.256161047 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.328130867 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.241084234 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.327219985 seconds)
  done (took 63.869665545 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.263191805 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.245869568 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.245327294 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.2433619 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.236740809 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.251319184 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.243436998 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.242087478 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.604071336 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.365405334 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.268620791 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.252766446 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.261010312 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.244782303 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.242942429 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.278167995 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.377240481 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.257478821 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.240514334 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.248347671 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.245497995 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.348458317 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.283168807 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.24878324 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.361284077 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.685825348 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.248781522 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.252086576 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.361393587 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.259014277 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.244589965 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.245994956 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.246164455 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.788129824 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.680463707 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.265279493 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.270371347 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.255598011 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.243879673 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.381168166 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.265408704 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.251103545 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.238720046 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.652460183 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.401455575 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.353241617 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.398851785 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.24705009 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.247493745 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.306140432 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.250470752 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.245910955 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.275103363 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.97697573 seconds)
  done (took 105.797473702 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.285549472 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.726843801 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.409115329 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.259506341 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.088728497 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.027665845 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.254998034 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.507649402 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.272854237 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.239262209 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.523864016 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.730294819 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.255789744 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.284708712 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.758523579 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.291000666 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.239033871 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.138673021 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.255036883 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.241687582 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.645264959 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.257852285 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.255594527 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.509013402 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.279659008 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.683829622 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.708815616 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.767451137 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.255526452 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.24180861 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.691994111 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.259665032 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.283062861 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.245652922 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.504217096 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.577785251 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.566530591 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.262156524 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.274438863 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.237813919 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.260829373 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.679697551 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579529967 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.257615508 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.2430164 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.701040234 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.253306721 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.248454185 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.243350418 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44830412 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.175008759 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.24567326 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.699799677 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.245739632 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.508729807 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.322017198 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.279604701 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71213919 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.258453189 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.429178803 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.288960299 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.245389084 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.24990782 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.242475949 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.244661531 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.570408886 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.576074119 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.250748864 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.57094873 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.699792217 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.259960396 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.772949132 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.168600318 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.252951186 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.281924825 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.245447851 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.957248796 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.727465523 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.289301549 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.242934749 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.559512376 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.263896362 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.512598888 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.2597585 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.24471777 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.660485114 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.269544368 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.249474921 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.241590591 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.244359326 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.02867541 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.243982486 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.517715176 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.278943465 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.242509321 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.243453237 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.259460551 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.247051477 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.246947437 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.248673121 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.758843137 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.26064516 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.554554143 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.264138147 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.24686651 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.247243551 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.249303462 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.247530429 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.468991331 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.723832533 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.251315635 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.245454506 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.246559441 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.265717137 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.468743494 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.247882031 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.532845848 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.263354576 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.254707223 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.245239269 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.068405218 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.287480182 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.246583787 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.266304363 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.088412413 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.473753427 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.263581464 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.246281285 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.249973775 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.262543693 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.662416189 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.249431498 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.316689852 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.249963774 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938484626 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.288138607 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.24769354 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.827460224 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.250377393 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.247497319 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.26551361 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.246800809 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.563697251 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.514439641 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.449896636 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.247472839 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.262644889 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.940054415 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.27553416 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.379040195 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.2647833 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.248814478 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.445802125 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.438190338 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.251389314 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.790988493 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.249910844 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466912813 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.254459988 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.574443057 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.724280204 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.262701686 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.25238232 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943054944 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.952351114 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.922229639 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.247593057 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.517779233 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.245920856 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.702094393 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.244439593 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.254755629 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.835467639 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.252400574 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.252701965 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.251162785 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.250690198 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.317732056 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.426187363 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.611060574 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.250236357 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.690847408 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324116313 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.252746984 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.253433017 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.253716542 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.603751008 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.33481432 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.256093703 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.291482015 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.252156006 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.254188447 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.704395756 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.220308749 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.256881596 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.405259641 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868505848 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.266586237 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.254820841 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.897706074 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.451702987 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.78263623 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.295316194 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.542615443 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.275192834 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.291421877 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.02880241 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335166634 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.703603653 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271509585 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.252566881 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.855055524 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.268409704 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.342628788 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.254541854 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.252730093 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774328944 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.265751436 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.255759004 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.673316964 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.253243877 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505652212 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.254130048 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.261286636 seconds)
  done (took 1093.175688092 seconds)
done (took 1356.832763587 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.254652658 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.261321433 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.24433127 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.260287789 seconds)
  done (took 26.195372128 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.262774088 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.259556373 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.259986517 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.259367185 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.26152438 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.259892016 seconds)
  done (took 8.739595476 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.55479103 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.259502403 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.260435661 seconds)
  done (took 19.25011321 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.467385682 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.490297945 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.61364313 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.342356287 seconds)
  done (took 10.092222963 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.261371151 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.260632555 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.260573808 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.262162084 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.263714286 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.265298301 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.26289757 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.263812859 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.265188139 seconds)
  done (took 12.54300548 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.019493234 seconds)
done (took 83.014457328 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.475587978 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.645042891 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.500973164 seconds)
    (4/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.245209762 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.258703773 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.517995251 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.310719456 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.282463787 seconds)
    (9/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.33845371 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.380163998 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.447985963 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.35997368 seconds)
    (13/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.534483827 seconds)
    (14/309) benchmarking ("sort", BigInt, false)...
    done (took 6.284745859 seconds)
    (15/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.255997056 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.601373391 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.339374425 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.362213631 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.538902305 seconds)
    (20/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.486087103 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.25704573 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.648241042 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.583851584 seconds)
    (24/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.591710234 seconds)
    (25/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.359919759 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.711200162 seconds)
    (27/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.335704495 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.512962737 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.617851931 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.749943022 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.587579623 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.065598867 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.244936075 seconds)
    (34/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.349077729 seconds)
    (35/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.969737393 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.238615436 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.832636069 seconds)
    (38/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.277679202 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.259764492 seconds)
    (40/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.24086175 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.306014358 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.239274951 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.394331431 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.538467478 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.894147502 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.275266058 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.549868356 seconds)
    (48/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.25801741 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.350763083 seconds)
    (50/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.315562966 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.260618498 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.259417812 seconds)
    (53/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.258839425 seconds)
    (54/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.44607885 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.878939192 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.574557083 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.603772348 seconds)
    (58/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.866380432 seconds)
    (59/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.622398768 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.166389477 seconds)
    (61/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.28827972 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.670110144 seconds)
    (63/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.030523101 seconds)
    (64/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.247597151 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.491002677 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 5.428291882 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.805547195 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.98550457 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.585449642 seconds)
    (70/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.620613308 seconds)
    (71/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.269898526 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.08954605 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.322944614 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.981850859 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.247212288 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.355423568 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.084887421 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.240436133 seconds)
    (79/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.7481529 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.273789353 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.245242392 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.106888946 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.342720925 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.379618068 seconds)
    (85/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.804313709 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.660742891 seconds)
    (87/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.056903867 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.344894958 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.859788837 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.053302073 seconds)
    (91/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.388383244 seconds)
    (92/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.818688793 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.057600207 seconds)
    (94/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.282789403 seconds)
    (95/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.473462701 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.262918363 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.916260894 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.293891752 seconds)
    (99/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.26547488 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.506359625 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.275560471 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.388695586 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.288364235 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.27076992 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.279317955 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.250540835 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.348232429 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.349499852 seconds)
    (109/309) benchmarking ("sort", Bool, false)...
    done (took 1.796345255 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.30216122 seconds)
    (111/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.617649563 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.279142975 seconds)
    (113/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.262275392 seconds)
    (114/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.347018435 seconds)
    (115/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.51814288 seconds)
    (116/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.495460151 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.878555169 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.143823978 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.985631536 seconds)
    (120/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.525344104 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.615671368 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.247401365 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.979666722 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.347753503 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.146102811 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.385201775 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.168571135 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.3650081 seconds)
    (129/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.455717289 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.280287981 seconds)
    (131/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.995612721 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.262950143 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.576899162 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.322436597 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.244807132 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.01544294 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.291338834 seconds)
    (138/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.606692364 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.264305164 seconds)
    (140/309) benchmarking ("sort", Int8, false)...
    done (took 4.281690727 seconds)
    (141/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.485216679 seconds)
    (142/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.287864149 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.671370506 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.33370779 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.674170062 seconds)
    (146/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.281311881 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.869403222 seconds)
    (148/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.79137437 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.316788785 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.626981471 seconds)
    (151/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.621536476 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.298014889 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.294665762 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.571827472 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.265128161 seconds)
    (156/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.576334165 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.265716458 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.014612124 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.891024266 seconds)
    (160/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.328855338 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.388723219 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.246292215 seconds)
    (163/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.39876002 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.669267053 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.344058761 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.698322462 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.253050409 seconds)
    (168/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.44739785 seconds)
    (169/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.368106433 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.864618838 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.837093045 seconds)
    (172/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.292721675 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.293011315 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.09986348 seconds)
    (175/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.460764359 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.286281371 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.555558873 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.310216774 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.424251113 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.654672629 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.283638242 seconds)
    (182/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.267113864 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.270233019 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.352254188 seconds)
    (185/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.368430296 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.624885469 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.489111765 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.323934517 seconds)
    (189/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.986883212 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.738904052 seconds)
    (191/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.35259147 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.263731157 seconds)
    (193/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.397038096 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.267909243 seconds)
    (195/309) benchmarking ("sort", Float64, false)...
    done (took 5.561104076 seconds)
    (196/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.892368512 seconds)
    (197/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.500345784 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.310950686 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.67929726 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.31388191 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.374781586 seconds)
    (202/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.374070531 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.332918419 seconds)
    (204/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.351330693 seconds)
    (205/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.428901526 seconds)
    (206/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.297190435 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.572594657 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.135273413 seconds)
    (209/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.252480123 seconds)
    (210/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.100099945 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.414708044 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.989989115 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.748281163 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.250003835 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.327642041 seconds)
    (216/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.802518666 seconds)
    (217/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.39399544 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.294817894 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.488235875 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.374947802 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.231147328 seconds)
    (222/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.564231335 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.299950482 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.102003682 seconds)
    (225/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.424537692 seconds)
    (226/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.633340121 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.311263245 seconds)
    (228/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.269822819 seconds)
    (229/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.320027227 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.290915967 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.296703434 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.253437688 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.661760869 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.734381508 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.312630335 seconds)
    (236/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.573470265 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.314596506 seconds)
    (238/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.474875862 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.588920128 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.161336147 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.298346173 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.74788848 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.272084351 seconds)
    (244/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.3233065 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.996903684 seconds)
    (246/309) benchmarking ("sort", Float32, false)...
    done (took 5.253519084 seconds)
    (247/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.073717857 seconds)
    (248/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.298372311 seconds)
    (249/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.397788265 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.281896292 seconds)
    (251/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.475433281 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.298775773 seconds)
    (253/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.798569196 seconds)
    (254/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.655266475 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.588193356 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.970985432 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.314374267 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.271715088 seconds)
    (259/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.465930028 seconds)
    (260/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.985498532 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.128272325 seconds)
    (262/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.288144835 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.315107796 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.08552906 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.274037725 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.37181452 seconds)
    (267/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.498758767 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.865608783 seconds)
    (269/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.306495439 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.272916989 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.991998532 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.917763655 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.288814144 seconds)
    (274/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.635892372 seconds)
    (275/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.356137202 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.254415772 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.339210032 seconds)
    (278/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.479376306 seconds)
    (279/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.618416266 seconds)
    (280/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.258765673 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.409917726 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.808577523 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.356850934 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.007060376 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.823282724 seconds)
    (286/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.684767638 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.408061007 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.283850194 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.090108985 seconds)
    (290/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.275508658 seconds)
    (291/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.877812361 seconds)
    (292/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.293868937 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.162764784 seconds)
    (294/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.468071531 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.334023398 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.819464473 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.671093996 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.738014342 seconds)
    (299/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.306251961 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.679448709 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.294008291 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.064786281 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.83890277 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.296201025 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.663926164 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.084789085 seconds)
    (307/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.61643116 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.267736001 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.993785815 seconds)
  done (took 895.866656147 seconds)
done (took 897.043245303 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.307623953 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303445034 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.286842971 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.307637511 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.39808636 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.308794815 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.29615784 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.287566269 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.334911939 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.336447208 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.285194669 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.308244788 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.288604264 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.286104867 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.286231557 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.302288316 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.279759798 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.287895725 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.303223113 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.297863103 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.30466829 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.28676033 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.336677089 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.311402308 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.290505707 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.290347747 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.29124873 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.306981724 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.399525083 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.292274732 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.291117315 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.299579131 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.28075392 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.285018347 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.28347968 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.308489561 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.302027691 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.297346325 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.293739886 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.320472887 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.668240368 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.303686702 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.294226343 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.289185398 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.290570172 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.293510369 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.290405388 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.293986097 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303313617 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.305228753 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.659759289 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.318126241 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.294710421 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.290327413 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.300174634 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.290475971 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.29476375 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305642324 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.311000647 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309078319 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.272826993 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.294710255 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.293403828 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.309121557 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.295232074 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.693669992 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.303013017 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.29597486 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.667179101 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.310497861 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.694072653 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.315192181 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.293079713 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.306473412 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.32336083 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.279358524 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.287639849 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.290555737 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.300123375 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.290254795 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.30214235 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304020257 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.296941769 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.294016726 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307991882 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.317064197 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.302769207 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.294432676 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.301724596 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.311468359 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.300910756 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.302466139 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.295551781 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.28925205 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.303685449 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.298366605 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.295633856 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.296338414 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.297231224 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.302992137 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.667464296 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.327410689 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.289695273 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.289763089 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.29215408 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.304723166 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.668312583 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.311224167 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.315212031 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.340360573 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.293272579 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.272676051 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.297969871 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311256939 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.300342364 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.297459476 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.289611987 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.273491571 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.660428786 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.32588534 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.295300583 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.294095394 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312255606 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.296153465 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.290588086 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.287940454 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.297382074 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309128175 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.416322012 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.305309186 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.326167326 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.293632605 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.297535878 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.315888619 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313277848 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.328757015 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.298542679 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313882121 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.31132495 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.29388984 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.306691673 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.304739601 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.29717058 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.299201641 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.29127561 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.318144232 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31067143 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.31041885 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.31767948 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.412972132 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.293384806 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.277495478 seconds)
done (took 218.269379731 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.354656195 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.286997627 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.374647095 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.291685778 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.391964223 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.390321995 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.290804155 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.291445779 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.289831981 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.668557277 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.291656556 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.291255439 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.286135737 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.291597205 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.373066676 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.293975532 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.291576991 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.635100025 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.294461729 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.364662132 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.289426001 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.29195458 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.294866163 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.67525263 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.294153171 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.298510632 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.360760584 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.295414092 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.639018675 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.293761045 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.287873842 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.637326671 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.380565273 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.31403712 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.305976358 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.302081887 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.394129597 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.312406011 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.376127824 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.376311735 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.378772149 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.333715615 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.292931108 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.29145068 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.296982168 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.296845992 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.292700619 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.322914957 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.294578481 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.293783749 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.637950458 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.306717799 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.295627315 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.294716398 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.295558824 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.326971961 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.294203162 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.297801782 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.385984688 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.300687968 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.358315531 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.676801213 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.675623968 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.29748587 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.298790947 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.295224995 seconds)
  done (took 145.8062821 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.363281286 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.368274483 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.406921281 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.314284452 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.347698423 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.412088277 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.315063331 seconds)
  done (took 10.735420524 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.305665928 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.299719381 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354268286 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.348550575 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.297612161 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.441915243 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300025768 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.311389742 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.298355837 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.351288762 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.299783753 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.300345216 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.307370889 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.293842348 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.349372156 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.311182522 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.415271975 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.298466109 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.295765632 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.456133203 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.297087581 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.30467047 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.353139691 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.310897291 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.301428246 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.307150136 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.870302065 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.302669306 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297274806 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.300011599 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.29560149 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.338715414 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.300791306 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.303272556 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297746576 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414748662 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.302283041 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.295810293 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.302750064 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.300156508 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.301325495 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.302179693 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.300127053 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.298462682 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.299944163 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.32477778 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.301676523 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.300827061 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.300847644 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.301332646 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.351827859 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.301485646 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.297967162 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.295696073 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.357146317 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308138358 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.300708258 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.29852195 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.302700768 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296749209 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.458177137 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.348297669 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.30034001 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.350566409 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300487905 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.302158157 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.301392752 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.30117812 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358287563 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.302749297 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.348972867 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.30033345 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.453875716 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.326442575 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.303356003 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.303194404 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.30482355 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.303325863 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.303095344 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.310361925 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.298914193 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.303719731 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.309940105 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.300994612 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.300030684 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.405779126 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411749793 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.300969513 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.315810637 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.309217637 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.300016593 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.356301648 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.30313288 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.298063048 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353904955 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.421495263 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.358747163 seconds)
  done (took 150.018235619 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.308781161 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.312226138 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.304501533 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.322092225 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.305173856 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.30597115 seconds)
  done (took 9.073730014 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.308773371 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.307150749 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.304705395 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.306053737 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.306086603 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.302457503 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.302976252 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303172187 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.308780408 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.303110348 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.307143413 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.306960268 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.306000695 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.304766344 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.308028577 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.306659746 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.304852153 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.303025821 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.306155165 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.306579398 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.400838489 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.307888095 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.307320679 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.307355615 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.31055509 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.302517087 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.313445364 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.30888703 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.309481556 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.312813738 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.327805582 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.307181024 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.306785179 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.314322129 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.31030347 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.307269648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309302373 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.30911083 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.306738377 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.307111677 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.310641617 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.308159741 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.30522912 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.311105577 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.310648977 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.313747635 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.31279451 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.313721823 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.308694879 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.308559937 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.309581326 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.308427468 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.309913113 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.30774674 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.312375858 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329320425 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.31518238 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.306397284 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.308525034 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.309493865 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.311972571 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.305161954 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.309292923 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.309248273 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.315943437 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.312957656 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.313416603 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.316913934 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.30966168 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.309974771 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.31316015 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.305951448 seconds)
  done (took 96.573660144 seconds)
done (took 413.410951914 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.635151621 seconds)
  done (took 7.855959679 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.434433139 seconds)
  done (took 7.660937308 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.056810829 seconds)
  done (took 21.28043034 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.30494277 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.302131406 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.336907306 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.302848184 seconds)
  done (took 26.469475072 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.600944971 seconds)
  done (took 7.818059503 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.30967763 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.301952734 seconds)
  done (took 13.832763616 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.770836906 seconds)
  done (took 7.988360013 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.665404921 seconds)
  done (took 7.893233694 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.323068494 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.34242328 seconds)
  done (took 14.142707628 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.288156935 seconds)
  done (took 7.513068263 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.069639029 seconds)
  done (took 8.291276509 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.311616335 seconds)
  done (took 7.537578837 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.395751631 seconds)
  done (took 7.617432401 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.07545614 seconds)
  done (took 9.30088923 seconds)
done (took 156.42114768 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.303453187 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.738406611 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.312828228 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.311092148 seconds)
  done (took 26.889866458 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.348204035 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.347527257 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.348460229 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.359766539 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.35224086 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.349301349 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.340795128 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.339756337 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.359485755 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.352661067 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.348901568 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.350955324 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.349265595 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.342400428 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.348066095 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.350743509 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.361483357 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.3476494 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.343051854 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.354697336 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.316239437 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.359555208 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.352413894 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.314988442 seconds)
  done (took 33.566576454 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.839260454 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.388036085 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.46612347 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.367022005 seconds)
  done (took 7.289013809 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.368404734 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.368230512 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.380726699 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.418689236 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.444984528 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.377929625 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.337158811 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.337798009 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.327193045 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.373088746 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.44491204 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.387495262 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.45197427 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.316393313 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.503386544 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.316232289 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.317998981 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.367314523 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.420436294 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.434638435 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.314332335 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.3698351 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.373487167 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.386656537 seconds)
  done (took 34.367027622 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.331646412 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.32180871 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.316738522 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.315960851 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.339659207 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.317361084 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.315164924 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.316199949 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.314874853 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.322984796 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.313453981 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.328678518 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.316250468 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.315906003 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.323585187 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.318345539 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.322777232 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.317801076 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.314405658 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.318758741 seconds)
  done (took 27.628765182 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.310889794 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.239623622 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.661123627 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.565217356 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.311309229 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.309915138 seconds)
  done (took 28.626870921 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.382979353 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.528312488 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.317314118 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.663197953 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.755479304 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.334706872 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.318133158 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.550934114 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.855606621 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.855850928 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.381383385 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.383557966 seconds)
  done (took 19.558405799 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.321705296 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.308026497 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.315370016 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.329956484 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.373654001 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.332380877 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.326556387 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.311847504 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.37466903 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.392288377 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.338188247 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.372624315 seconds)
  done (took 37.325485797 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409067017 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359364397 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.255693614 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063873187 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.029075339 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.520535509 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.077830219 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.743602186 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.31819712 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588147093 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310338215 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435567666 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.568012698 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312155526 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338090497 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.276552253 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553820164 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795019779 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314420919 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.177753964 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343335331 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323817817 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.354709845 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.348545668 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.52662147 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.293555682 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.575114922 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.091033733 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593768953 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328070267 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325578731 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314082249 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586803273 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965094172 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429276009 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324931195 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.027644492 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.862153164 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.306556119 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.274632351 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.089875422 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.325076501 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3259746 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315086768 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.250085845 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313756522 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753207679 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.321237794 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.026754579 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.315797584 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32691701 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409243468 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.318769358 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.88701606 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335488413 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.323572798 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.314870417 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321481775 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882041416 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674106559 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329057268 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.256806845 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.698447576 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.288360878 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944419917 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.436392875 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.321482139 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321996351 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250974315 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.281098718 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341731725 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463400246 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.342610922 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967952336 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006687391 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.337196443 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270602562 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862108657 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331082669 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.259648908 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546713324 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092625323 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253929665 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.264092516 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.251702635 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028598714 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326300112 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.674086819 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328059447 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.7493323 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.329014617 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333422631 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339416278 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.540476376 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.197582529 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3181684 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.093107978 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47067682 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340685264 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.740900058 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253341174 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.32286063 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574915644 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.528898095 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322097782 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.297364162 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532995248 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321519755 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.340699125 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.318304231 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.355737342 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.887624414 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346386504 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.667186046 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342725478 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.095959718 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055525122 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336648832 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.426242746 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.327290169 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560699251 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.070400231 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.224460789 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388968295 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3260354 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322412214 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.307957161 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.175598505 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.478589429 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.319130922 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330323615 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.338230784 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.321485826 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269808357 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.318867405 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321585405 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.125482083 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.545967366 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32272517 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603767165 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255304216 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469683601 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.330437675 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.543104042 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.50743546 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.343333016 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583701984 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328117042 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337680079 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339615083 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341782881 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420640122 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343107202 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.332015289 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583271942 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.32621823 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.327953882 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.327887711 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.104064002 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330395946 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.328307509 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.15939125 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897038257 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317603931 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327997471 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21084447 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.335507082 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389903463 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.328572085 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.331848743 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.123588331 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.169898993 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.32699332 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.320523647 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546227078 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333467307 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.356873247 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410073774 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.512166619 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898366556 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353737978 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.258714191 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.035935353 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.014740252 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325707873 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.51385993 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32392267 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333078075 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335304827 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.859296742 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.89818852 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341066911 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.242833578 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.337055072 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336956304 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.329545829 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325298131 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.101138001 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.722706084 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335010434 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.345384871 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468522435 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.339739479 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.260325772 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.843026538 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330838823 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32701064 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.101847971 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359375584 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.227014503 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804191921 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585707305 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.025444022 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337056997 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.365621662 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.35849464 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.325468827 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.178553274 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34986749 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.341460243 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332670606 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.338419818 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.305967729 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.773374239 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890496921 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027363763 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877920002 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260674462 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.329862728 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.234460477 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.759987937 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264043859 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.984719646 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513775678 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.777406451 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273744507 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520863064 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.511797619 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100306467 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339260557 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557038207 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238595045 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.185424594 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356654012 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537063407 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363145725 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.335103952 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263148968 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.847045583 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560121739 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.206774152 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409567896 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758123283 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.189806313 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.127646266 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.32874005 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.673977486 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516187362 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.877694389 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.717311281 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33179661 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342300741 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800832962 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336131225 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.855863111 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93997459 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360871382 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.531128986 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268060687 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.341727096 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.342360867 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.325709924 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.600970957 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.34925245 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.586932434 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341957704 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264333815 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330041865 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856467166 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.202999414 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.337210692 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331792046 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091189884 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34205681 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620340292 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.338183642 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.093489757 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353643506 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267225999 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268213579 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.026241354 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33209425 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307798902 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832329847 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.705152674 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.334486855 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36396769 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184765091 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587849632 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.345710003 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.90998955 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573943625 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.144254634 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353798824 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.43350988 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.234891379 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.333278786 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.229611403 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.56841808 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170542338 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.555327867 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.32312666 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.239746655 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332584002 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543519134 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.220185346 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.331409878 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572324308 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.070625747 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.351147019 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027527427 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376797052 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347735708 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345355145 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.726754673 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341105171 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405355132 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346137937 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.343731594 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.345785186 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500937365 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33712785 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343811976 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.348774734 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429572693 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.72390662 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.104144863 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.124353294 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917948905 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064764976 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.929675683 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364371788 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336397344 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336140962 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267836619 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48401027 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.861092447 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609048548 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465185976 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.844394441 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358238086 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.247174504 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356192273 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547568309 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609816387 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.207725696 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337097719 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.011352473 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.21780618 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346432036 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.546731093 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839464001 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902712618 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455627073 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337230343 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.760578453 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612443704 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.429556419 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335890882 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92775824 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.339240101 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.696216692 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.361933747 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342359844 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485672012 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347434734 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99138279 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.365176631 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.494440413 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.110107494 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.277200277 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598158301 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.78860714 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.347713901 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919841444 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.047664092 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605904643 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404525283 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34967335 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.444418351 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484813853 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.347812876 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.220490355 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338652918 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185326701 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.046891801 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.348879856 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920557794 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62041235 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.338516588 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.337043472 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375565542 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.349151119 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.561964143 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047975077 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563392187 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34896708 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348661804 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.915036298 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917612062 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379383431 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276131466 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.343243398 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577529795 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60196141 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36469887 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.792511095 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.051339886 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892423624 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.31311244 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362011173 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346113692 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.029006186 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925157212 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.135915848 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84677357 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.998521567 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34069241 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620766485 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.345743162 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340573559 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634248773 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.347027423 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34031325 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353932941 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.921602325 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128696307 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.344249532 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.303500502 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.284944735 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.566854612 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988773134 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283045141 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343867799 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.514890885 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342097161 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471436278 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354649483 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.341788283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34356887 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.102830733 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615606389 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.348696344 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.326407171 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.305896128 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345250018 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349087967 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576613729 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347720699 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.017603446 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.693401559 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599975797 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347310451 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.323546502 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.348112016 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343618281 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063269103 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.314745944 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.89662925 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912052074 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.351614359 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.35422177 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348522809 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.558689593 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555106782 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343616399 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355915047 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352609282 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357517668 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.244345204 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.109507746 seconds)
  done (took 1580.137649685 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.341400098 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.360156953 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.38373238 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.44298774 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.388827286 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.440321133 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.37494256 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.435415595 seconds)
  done (took 52.426904388 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.35358745 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.498583581 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.377497367 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.345948407 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.355105898 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.346960859 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.798908145 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.360668697 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.356492851 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.358500839 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.355764095 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.343835929 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.999305901 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.355037051 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.344862065 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.340998696 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.355422133 seconds)
  done (took 65.520935878 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.354731919 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.89748186 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.440563637 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.355113212 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.334985617 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.363351548 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.090142218 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.409578205 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.361185336 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.670455216 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.015858283 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.364671 seconds)
  done (took 84.921594694 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.353815995 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.355789263 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.356086729 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.354928069 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.355198397 seconds)
  done (took 8.037064402 seconds)
done (took 2007.525126972 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.704056589 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.038148887 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.968889865 seconds)
  done (took 5.267887121 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.487175733 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.537067614 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.657590829 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.662181134 seconds)
  done (took 7.600847341 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.621547968 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.716662587 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.537600033 seconds)
  done (took 6.131938151 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.739051305 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.354964731 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.478726254 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.339842094 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.350492736 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.347029095 seconds)
  done (took 20.294861375 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.345913445 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.349205317 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.346840032 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.349418518 seconds)
  done (took 6.65058079 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.322454364 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.029234406 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.324999941 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.336911262 seconds)
  done (took 18.270165527 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.092586725 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.104088478 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.090193926 seconds)
  done (took 7.543527667 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.356331367 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.19468799 seconds)
  done (took 9.806949458 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.634285637 seconds)
  done (took 2.89121287 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.47734793 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.670678532 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.366636541 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.32910299 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.398966338 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.130014736 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.954273772 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.543305556 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.288328912 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.487466255 seconds)
  done (took 27.904220985 seconds)
done (took 125.903182822 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.121412717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.725055253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.54430744 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.093543864 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.575350519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.542906778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.552101303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.063612564 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.601486035 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.592338974 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.134108846 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.577952698 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.498522301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.721499945 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.499022095 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.344288411 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.577554796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.170910041 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.775188667 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.974234653 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.556320546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.733431191 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.965303227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.758216435 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.578176498 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.500515459 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.312306753 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.591315577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.954063174 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.337442091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.501892057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.154767864 seconds)
  done (took 190.888514467 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.344902803 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.344682545 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.361492139 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.34581013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.345243938 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.36337066 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.34591675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.369977781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.345108887 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.362849303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.350281422 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.346062653 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.348356604 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.362734573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.365055794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.362601472 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.346726866 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.346792474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.377350534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.346882776 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.347299821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.36150499 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.356097041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.34643373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.346911388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.348056304 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.346420278 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.36499919 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.363264724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.347177419 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.347460624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.347310817 seconds)
  done (took 204.566709392 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.35335733 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.350756178 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.348744398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.347052045 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.364346001 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.348731552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.348466593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.350325413 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.348468266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.361075827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.355444991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.348376761 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.350916769 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.347297844 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.360757793 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.360070615 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.348140439 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.351083484 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.347993663 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.347840964 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.348770529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.352144716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.356997737 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.347949349 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.367387094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.347648961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.348048221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.350700238 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.348170526 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.357966222 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.348485425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.347192877 seconds)
  done (took 204.523105938 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.543901886 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.356813436 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.35675655 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.294383098 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.357122779 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.355688215 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.352780322 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.554112439 seconds)
  done (took 14.434426124 seconds)
done (took 615.669453167 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.60413482 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.327473606 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.554993134 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.377761192 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.115694689 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.396536412 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.377237636 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.545768084 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.260310128 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.553735872 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.613241977 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.392109014 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.753482567 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.375486535 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.633289535 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.477684896 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.245463648 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.374248681 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.687875526 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.893837841 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.645305781 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.83948936 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.567518782 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.261876181 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.761310763 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.829813129 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.048970927 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.237979396 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.393383476 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.700971844 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.980044965 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.283869045 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.437441733 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.436391331 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.498403785 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.472875765 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.271522553 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.433729907 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.576606131 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.609849279 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.88736516 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.087887745 seconds)
  done (took 92.087891667 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.34169731 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.342541629 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.340506642 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.341547571 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.343701932 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.341422753 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.340770582 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.341188 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.341814983 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.341658142 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.34181449 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.342908993 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.342221019 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.344370925 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.34173748 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.342339638 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.343135472 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.344593719 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.342474901 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.343346204 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.342250164 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.342075583 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.34300709 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.342792989 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.343682124 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.343569361 seconds)
  done (took 36.172520647 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.360534109 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.613591485 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.766546807 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.367970512 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.361944982 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.365607394 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.439338858 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.362908914 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.364652544 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.365984636 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.534358704 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.365065493 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.397618231 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.794479269 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.363825835 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.363613392 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.362995788 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.361663724 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.621169384 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.37182356 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.460762908 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.363929442 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.438988325 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.37211813 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.386239775 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.363103452 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.367120672 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.882783612 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.381181426 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.531410949 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.14666094 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.445655461 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.837333579 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.793465996 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.147467641 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.372544329 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.364864532 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.536110846 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.365980991 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.363359285 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.440578657 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.364151348 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.776561213 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.977242099 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.382674459 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.364560987 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.901690251 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.552082454 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.604392363 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379310698 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.800001355 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.371197263 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.366906487 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.366030447 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.604693805 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.379608048 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.365799098 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.896435362 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.389760124 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.44326639 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.366873914 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.366184322 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.629211877 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.366026306 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.61820882 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.368294855 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.374506581 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.385104183 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.786355812 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.369131451 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.000900286 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.384512992 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.366542329 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.533218208 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.619816002 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.942759393 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.38805335 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.635030427 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.84995586 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.458667393 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.371776426 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.871216245 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.462827753 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.369747662 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.368771506 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.369170337 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.366500116 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.413684704 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.441573452 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.927998217 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.007830103 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.918190153 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.463695388 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.378928044 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.368876748 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.898169442 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.386476961 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.368899329 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.778623401 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.999403885 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.385010068 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.375100081 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.002933671 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.39001955 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.445407945 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.372910391 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.789667232 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.369014062 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.414324083 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.368740656 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.37628285 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.391906425 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.445902958 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.371839412 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.369990518 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.974080052 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.563188119 seconds)
  done (took 179.574735921 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.364274667 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.361468474 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.363211424 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.362269867 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.360538857 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.371508979 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.363021806 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.36458636 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.36779969 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.362397771 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.363096257 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.363138138 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.3643401 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.363956753 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.392614463 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.369202183 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.972724997 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.36202755 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.363618856 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.362822947 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.156741445 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.372857261 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.365392894 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.380951251 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.362912953 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.364313813 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.369634333 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.383813178 seconds)
  done (took 152.951582803 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.371253324 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.925176905 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.389553554 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.501174459 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.390772776 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.369462112 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.498515582 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.427923512 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.38909975 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.369480093 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.369392533 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.667510696 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.373083025 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.87674611 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.561818137 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.516407205 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.875656288 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.389318919 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.370625415 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.369459014 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.503367959 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.374617109 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.667897612 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.92551079 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.390087011 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.925122328 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.357309862 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.372499105 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.370588045 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.926786161 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.387897859 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.669933177 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.449144207 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.431502762 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.946069923 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.896068776 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.895240712 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.519545037 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.373775498 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.3721938 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.372523721 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.357343007 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.930143715 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.392005362 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.37427205 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.919463497 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.393074253 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.375181753 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.384055916 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.37260622 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.432915537 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.450709678 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.691118604 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.93496163 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.46767245 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.394183614 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.502213075 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.756091405 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.378749343 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.879272773 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.357061364 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.936095751 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.392918746 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.357727255 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.374204796 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.379822081 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.522996962 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.503485498 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.881193568 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.392408348 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.880375975 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.53967763 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.373823713 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.374956478 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.376510044 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.936196109 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.900888369 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.539338452 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.50715225 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.567185223 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.360943444 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.375182989 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.360156727 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.451389854 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.374182585 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.938155779 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.899961819 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.394594616 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.377269593 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.376119693 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.378003928 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.550083731 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.954588405 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.46904741 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.871653273 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.693659559 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.677765078 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.378599116 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.434922532 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.393382098 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.679051111 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.379708865 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.433814958 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.822921967 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.67989242 seconds)
  done (took 163.597071526 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.618718143 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.565196021 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.467897244 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.50751686 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.965168847 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.928161446 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.587387996 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.522089734 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.485206866 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.633578058 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.512390428 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.467981025 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.545768955 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.449677797 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.100025808 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.467118156 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.483774157 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.528613464 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.488642998 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.389182134 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.01505944 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.656707452 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.546718528 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.260552025 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.470495313 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.152231633 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.936069259 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.918496769 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.553658005 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.666153302 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.915709248 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.494816719 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.330903461 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.057502024 seconds)
  done (took 65.973707588 seconds)
done (took 691.620618612 seconds)
SAVING RESULT...
DONE!
