cset: moving following pidspec: 11284
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.32684936 seconds)
loading group "string"... done (took 0.542882481 seconds)
loading group "linalg"... done (took 7.443332185 seconds)
loading group "parallel"... done (took 0.16983055 seconds)
loading group "find"... done (took 1.14640986 seconds)
loading group "tuple"... done (took 2.058063812 seconds)
loading group "dates"... done (took 1.304850194 seconds)
loading group "micro"... done (took 0.240794476 seconds)
loading group "io"... done (took 0.973428103 seconds)
loading group "scalar"... done (took 40.984922856 seconds)
loading group "sparse"... done (took 13.378078078 seconds)
loading group "broadcast"... done (took 1.076302137 seconds)
loading group "union"... done (took 14.766903963 seconds)
loading group "simd"... done (took 5.059207324 seconds)
loading group "random"... done (took 10.118164531 seconds)
loading group "problem"... done (took 2.073745067 seconds)
loading group "array"... done (took 23.53813626 seconds)
loading group "misc"... done (took 2.143915457 seconds)
loading group "sort"... done (took 3.431981161 seconds)
loading group "collection"... done (took 19.713290867 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.584142353 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.160623562 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.153592138 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151451673 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202991827 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143145124 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.16204023 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099689837 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.971936473 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180612776 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155025954 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.534154627 seconds)
done (took 5.233617184 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.238694472 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094207611 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105547651 seconds)
  done (took 0.87286773 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078325741 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145622052 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095686065 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080257033 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096539154 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080231569 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097595409 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078872616 seconds)
  done (took 1.357141907 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086810791 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.09800276 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083316456 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098668447 seconds)
  done (took 1.051736552 seconds)
done (took 4.291223022 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.735592912 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.27169109 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203752569 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.471409339 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198789306 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220920189 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685296673 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.36787443 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252554942 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101792496 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.138710829 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.402251884 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139919772 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.691639787 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089544246 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123488722 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.188739483 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.446777732 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082826196 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110366897 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116707867 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140864789 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128319739 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089954835 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185239932 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081874896 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192223446 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108909441 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080698677 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275789057 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200866641 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.704367643 seconds)
  done (took 10.945654408 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110321005 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133460737 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098477128 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13800678 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134461589 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098437324 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084095674 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097447155 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124115361 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178806086 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129574272 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121972063 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094302443 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082069348 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114648673 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246664348 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120628254 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099525443 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101304989 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104403814 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122698411 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113006118 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107441053 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093798542 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16742409 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22136004 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11032153 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124448125 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095620965 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111638958 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143206175 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14356525 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094033984 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080788334 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173816961 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123374285 seconds)
  done (took 5.135073959 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.118769325 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194079141 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124673799 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173696497 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.083090741 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147532478 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.097426098 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117148582 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263588082 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.208825041 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.498777658 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145155698 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099773636 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100988113 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08459218 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099980464 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.684123385 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160827992 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118907845 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118403288 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104980381 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086979979 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.374630255 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097825759 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081954017 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100346042 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067760744 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168991478 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100669138 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.20950939 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126970011 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103536036 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134941224 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197501391 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124368208 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116867793 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099065744 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079100019 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.195996045 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089912795 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098511981 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104950814 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136657966 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13809684 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100042134 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08241708 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.216221125 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079732076 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114424134 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.935738853 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181075138 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.121798966 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101324045 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077858841 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120885503 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100524082 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.308653209 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082288345 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277452231 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.190950732 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.105552881 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081887175 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098951057 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082422528 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400132495 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08316831 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.74187692 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085141699 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109704966 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084687431 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097644528 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105180976 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088493372 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117733824 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080907671 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100256818 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080401121 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098442994 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082318636 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111866792 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.12448988 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.219782223 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100517083 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082191733 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096911164 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101367242 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129885257 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102158043 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080011955 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133200301 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099698768 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082531927 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096343212 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.1350572 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083323638 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110603283 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100862166 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12949601 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099282002 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.159774538 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094705788 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126906236 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102197418 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115990242 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114758161 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095687752 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083917998 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.172451468 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097557738 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079060172 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099455633 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07958461 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101120421 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082460695 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113040391 seconds)
  done (took 23.26150244 seconds)
done (took 41.140037001 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.336365996 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105774657 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106207647 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105530801 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10394275 seconds)
  done (took 1.512360472 seconds)
done (took 2.246248481 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.292709314 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.178862816 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097536104 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.17178277 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094460292 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168700993 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166984308 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095396954 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.224070611 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095836529 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166075236 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07801065 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095957275 seconds)
  done (took 2.684933423 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095022068 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116602425 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084165066 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111699607 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07777628 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112014659 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093610189 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118038052 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11054484 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087001179 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09466756 seconds)
  done (took 1.832641011 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095897779 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114603845 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083521993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112019692 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077944975 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111683931 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094513961 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118021426 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111588498 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086971554 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095273114 seconds)
  done (took 1.831307959 seconds)
done (took 7.068712788 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092898071 seconds)
  done (took 0.817274744 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.932533303 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.628204382 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113530675 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.154029048 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.32355048 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.176941169 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.479004118 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128423902 seconds)
  done (took 10.87426195 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.144840025 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086318648 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103200481 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086327442 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.105843433 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087078811 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100525754 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101368885 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083810979 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103308039 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084435551 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102790141 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101238591 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084747408 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103829131 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084435884 seconds)
  done (took 2.361288726 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121129862 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120101877 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108109654 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109532622 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088555421 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107724273 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107545792 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089982642 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103672304 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104813053 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091218141 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107038932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105187185 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08177081 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107067861 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109277516 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087495822 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107213052 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107985547 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091674723 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108059382 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097588161 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087801894 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107978626 seconds)
  done (took 3.303136268 seconds)
done (took 18.086454694 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160359169 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111442204 seconds)
  done (took 1.005436716 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094998118 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115114593 seconds)
  done (took 0.951428322 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096359018 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097719672 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123728139 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110845979 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081734588 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098438758 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121338731 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081720255 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098972649 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098545147 seconds)
  done (took 1.752017701 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082846479 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111158292 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10283656 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096470571 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10752456 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096129723 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090055656 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100648203 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111869957 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07837938 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103707744 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116392375 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08784397 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11692424 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107501488 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101787214 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086817605 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100354139 seconds)
  done (took 2.540466667 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080320517 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099388416 seconds)
  done (took 0.922243697 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083193017 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095837075 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082959724 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09873178 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095781992 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078274968 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095707352 seconds)
  done (took 1.374371514 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.447231226 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13856006 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264048375 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102566694 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104994258 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301600197 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098903764 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08613193 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105229466 seconds)
  done (took 2.452425924 seconds)
done (took 11.737536506 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09504271 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117134261 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115256023 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.464768498 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108610299 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099435278 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148387648 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251014071 seconds)
done (took 2.14741916 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145220714 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.567615935 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.432784403 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235808342 seconds)
  done (took 1.987305811 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.409573259 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100429701 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083670181 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081988874 seconds)
  done (took 1.429850377 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08039714 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101813676 seconds)
  done (took 0.933278663 seconds)
done (took 5.251638639 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081523786 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.133139962 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081980572 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098764185 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079081758 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100253274 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.079022893 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099267624 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098375133 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082209349 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098435406 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082085553 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098237979 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081279414 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096682903 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079595342 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098621041 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082065467 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096648679 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07925526 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096275647 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082378093 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097195519 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079954318 seconds)
  done (took 2.968578417 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101719034 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100620797 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105257743 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08793141 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10428923 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08743714 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105246889 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099523133 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088289787 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101091252 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104836316 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086391018 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101258197 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087224093 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101196378 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103771777 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088077611 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100623032 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08541804 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103348391 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105334778 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082584366 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103534962 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104804727 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086763659 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103788044 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084357674 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100218863 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104803156 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085912755 seconds)
  done (took 3.66049294 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087215724 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095799293 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080069852 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103941789 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079216424 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098600116 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079282426 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09748916 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080918172 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097061447 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080886082 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096827331 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0794228 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098865362 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080017722 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100910618 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114138258 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080346374 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096304622 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080212416 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100439811 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079296227 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097023484 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07945262 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096939563 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079075364 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097133359 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079181578 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09769244 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079150939 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100330144 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083088064 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096565017 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086028397 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101338479 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096180551 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083682569 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096678954 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.08024284 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096668035 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078779448 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097142178 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079381721 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10369889 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080286839 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09991719 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07906676 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098155997 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080700005 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100826496 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079732861 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097112234 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098711009 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080906212 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100717746 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079539457 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098000803 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078897679 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099476766 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080137556 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096666332 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079937479 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100174575 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080488665 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112775272 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086264561 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096898311 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081302592 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098229175 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100272913 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081799826 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111533157 seconds)
  done (took 7.289321878 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.134181687 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127450929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081840261 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100043559 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078619521 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098078654 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084361294 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098770694 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099980119 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08715601 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098912776 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082262283 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099552077 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095301111 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097994042 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099929084 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086552014 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09621253 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081362194 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102572965 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081592551 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101520889 seconds)
  done (took 2.877626943 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210570542 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107871114 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145533005 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109021696 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085457291 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108557938 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104366329 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08854227 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104207136 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085458424 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102570442 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104238862 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085368194 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102651943 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103177431 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086060673 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104345394 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086908391 seconds)
  done (took 2.68844471 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094427872 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100882156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.212430768 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100111026 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100559275 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086011909 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105114485 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109916259 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08635529 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100676479 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092437703 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10330247 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103212158 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08383257 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102965997 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083559477 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103282392 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082962759 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110116745 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107304046 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088292156 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110730643 seconds)
  done (took 3.031326898 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097718403 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103253717 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120362745 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085692819 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097272259 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081613235 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10730717 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083779173 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108274671 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102179516 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082910743 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099062843 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089574089 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100305382 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106256208 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083271435 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102743326 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083417508 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103144189 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079110776 seconds)
  done (took 2.685113128 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10532885 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102496083 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101512917 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093948386 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10231848 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084242545 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11134707 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101693103 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084328913 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127254157 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102373643 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085026736 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111859046 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107442071 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102281187 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094152907 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111317727 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111677054 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084196586 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102411762 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127789733 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085088763 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111168008 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102256388 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084153359 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102374423 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102744239 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090562907 seconds)
  done (took 3.60513331 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084024646 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101183842 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080608924 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.0989374 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081079535 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098546925 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08054994 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098298926 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082895138 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097857165 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082751819 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101035425 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083402843 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101024805 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082378372 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101828871 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083343134 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098632134 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080619283 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098904225 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083483657 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101470779 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083330303 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099320719 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080566423 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101803552 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080863587 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099106732 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083695524 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098989374 seconds)
  done (took 3.504101384 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093283277 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109256581 seconds)
  done (took 0.976248749 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080434017 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11695336 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081102874 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105285792 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106245048 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084128474 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109974947 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088491049 seconds)
  done (took 1.542236356 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098306166 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113060744 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08585655 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116081693 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112111971 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100361444 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174361594 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103463926 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108332622 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081148898 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116216819 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082573643 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108712054 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084257381 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107761501 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09023599 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099545036 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108264897 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087258205 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100291176 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086179465 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110587186 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107326712 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080223485 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104192992 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093710108 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115061377 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10373391 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086811545 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109854129 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089671181 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095438712 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084484667 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102852019 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081789773 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111297329 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119758462 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086779704 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112228463 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103629135 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095717238 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098231016 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088635278 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109041914 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113199615 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084668536 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103492027 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079238364 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101847247 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086387455 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097649374 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084228226 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096653657 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109438499 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087878137 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113063144 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082971453 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104193147 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086552507 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106308839 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109445832 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086209807 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105191515 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084171343 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112744788 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088349045 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113718293 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097807013 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078624787 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100730359 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094070887 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127436778 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108684814 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084969006 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10433701 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082497072 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105853064 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103605483 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091066415 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109408086 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084858998 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109618737 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109692456 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084825246 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10489103 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093010743 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101059689 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104475662 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081886195 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120132224 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083471045 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100538565 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082282169 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113825219 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106392351 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084821491 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.100458869 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092592438 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096434814 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086034735 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104022468 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084696031 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115185163 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108896771 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108777124 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094558565 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110391244 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084518633 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107058182 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082258493 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103877585 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08676528 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110142304 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096398321 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087249335 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103738816 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086056748 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112756267 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083175081 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103533562 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110793166 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090822063 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101299142 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081555311 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105901952 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084199104 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106257633 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11238058 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083270407 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097504406 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080069388 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106219819 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084122043 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10636306 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108051585 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087960135 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096539994 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08270207 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107799851 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113107042 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084661438 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103606339 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090743982 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104379105 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083592199 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109747898 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104945977 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083723238 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109319772 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085349342 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09893312 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088889019 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105741756 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102123195 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088133904 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107774085 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08715614 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104307987 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083862017 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110470963 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104777462 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083974036 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102579513 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083696315 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115022099 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087298779 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098919465 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100152063 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092529118 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101479257 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084600508 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102012315 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087112272 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104378848 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082944765 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101948174 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105214603 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096978419 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108440444 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103853034 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090582669 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115564077 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085419455 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106119317 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084934009 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104713843 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105223649 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094238903 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109529299 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090922874 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105627235 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081073711 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110105267 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111727966 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084463911 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101339502 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084126468 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10727248 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109212221 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088885268 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104561902 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083457106 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104724116 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089232188 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10732902 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103673407 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083629921 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108819768 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085009294 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110960414 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105102883 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09527421 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106667408 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08020227 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107513467 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083468065 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109933276 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098574639 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082018741 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103474873 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086643573 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102892058 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088140647 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097484504 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092809155 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112261253 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103994911 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084059542 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103742661 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09152606 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10554218 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089830759 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10722075 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110862693 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096429414 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103255191 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088109398 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115261654 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103849403 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078899103 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109524104 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083272751 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102946558 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08443919 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101474602 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088858723 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113282465 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111681864 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079344063 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106153473 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083766958 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102494441 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080784841 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109318258 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106981211 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086226439 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111043524 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087591733 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105542713 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089229342 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103684021 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105613912 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086145803 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107293685 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086613686 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107114994 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084804881 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10813117 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083971793 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101793843 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10652695 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085993339 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103796882 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091641313 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103643325 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085706221 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107452904 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105293167 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086525945 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105296487 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085106415 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107583028 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085891464 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105182272 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087847911 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099874699 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112802647 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085175984 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113022082 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08591407 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100849527 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091496222 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106956318 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109955335 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086945343 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105494061 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087487965 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103949257 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088163788 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111131186 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10181033 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097295555 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11366125 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086410505 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10734202 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104234695 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087179892 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103956312 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086348179 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105241921 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086217266 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104997883 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09027646 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10702312 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104043251 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087638265 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105568042 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085403292 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105334758 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080153196 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104097462 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086040396 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105075255 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115462918 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086623006 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107963402 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084491629 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106043715 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085133175 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101464301 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113277356 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095853081 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105360218 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112240354 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085251841 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105672244 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096948849 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098092147 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084411796 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103107254 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083018738 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113748058 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105758176 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095989307 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104479027 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084463434 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.10231465 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087120632 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.112634927 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080413396 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102554891 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108246745 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088582171 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103369265 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087108069 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108125854 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087852615 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116480582 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104527106 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086943708 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105472335 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083185597 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104008734 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085225692 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108215148 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086934454 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10323833 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08345461 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104292346 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105742577 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087232336 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10445361 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087756769 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114149598 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085488667 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107755917 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108800112 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080582963 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108163762 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085880895 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103940555 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084618788 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109626244 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089194189 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106903045 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114028812 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086567114 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105532234 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086479448 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103309363 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085645621 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104795152 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105199916 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085558678 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106952212 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095231014 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103525611 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090137447 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104955974 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086126184 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11301009 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106968347 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08992361 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113720352 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088733436 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107107095 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114092983 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090496355 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108507847 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087229648 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107185852 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111553326 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08536189 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111773809 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086360335 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106133989 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087654211 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103494937 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085455384 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105583077 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104459895 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093046402 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106065644 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085586431 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104387131 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083975312 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106383106 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109191908 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094038075 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108156854 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09000871 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101105781 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083782864 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10643727 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083087769 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107337039 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108803068 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09199273 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107422447 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086684237 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104613009 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095885235 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113482404 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108324133 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084505453 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108798371 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087776719 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107798223 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087254129 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105678199 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10783078 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090894168 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107025557 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086536153 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113468941 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089744603 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107336459 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107245815 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087143754 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105984461 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081720903 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106256233 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089395002 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11103871 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08887135 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106454847 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116578427 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086686027 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105537102 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090726434 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105633703 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110820937 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082057066 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106492037 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088445615 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106648582 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081323632 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105536812 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08435878 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107635136 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086584744 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100828273 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116293778 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096329204 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109593771 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085756912 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104655475 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082526591 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.10199709 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104853315 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088178252 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107533044 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097180724 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10570697 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086003063 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100748401 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086792399 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109039354 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109314091 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084130918 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101113323 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08620148 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109596752 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092023389 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104864365 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086616127 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110052985 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107719385 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084316237 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109130409 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083974296 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109467532 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120763743 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.0884891 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106458242 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093387098 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114983029 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106544086 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081475309 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10735542 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090053671 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106294493 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087829064 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10686107 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123125606 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089498545 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105737532 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086328984 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108434628 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086429069 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115935926 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106943118 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088098475 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110294218 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088934558 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115593348 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108569298 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095543636 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109449337 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089545791 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105879667 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087200434 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104984758 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104888723 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088145445 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106638445 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093079902 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114831028 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105373073 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098170173 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115990587 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091716395 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103258697 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086171491 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106175447 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100627178 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088213694 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104281239 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08544761 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104371731 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086711264 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.106929668 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093084518 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107709339 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08769522 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106701874 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100372831 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089249151 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10868892 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087785376 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102477062 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087710408 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108014948 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090841296 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111238321 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107159618 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088882199 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107885911 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088279772 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102619469 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095154987 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1065759 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090016175 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106419738 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107181709 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.08900376 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109545946 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093454711 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107873706 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088021327 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117877937 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106576751 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082611804 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101134071 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089690554 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101854539 seconds)
  done (took 59.564910265 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147361181 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081703738 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101446234 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082649791 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116869068 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103460134 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082456834 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102542206 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084621308 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106327842 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082285629 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102382802 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113021885 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1275478 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096256582 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107554044 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101717285 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083556528 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101702784 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08354124 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112549598 seconds)
  done (took 2.942860595 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104066138 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11967756 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114770949 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118397511 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08986655 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113921044 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113951024 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114281709 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098536327 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111408167 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117825396 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113496617 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091477494 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109848596 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110332533 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092507283 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118276721 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10849835 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115684065 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0959415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112472175 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114816913 seconds)
  done (took 3.223325889 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083837998 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.1014043 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084271073 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096521646 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08336532 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096975422 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087672337 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100310145 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086912812 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103180689 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081893453 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101072775 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10395694 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078779792 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101443957 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081077155 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150339085 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106488657 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082897113 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104214468 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097254915 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085946685 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099513817 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079608894 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100347744 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087363783 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102995725 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081933419 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101785716 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082293377 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102536865 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.100059182 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084148384 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102945529 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082761443 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100636595 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083780817 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102237835 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079383136 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100463294 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083628751 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098498716 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083384815 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103597664 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081711861 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100897762 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.10339367 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083940047 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097792911 seconds)
  done (took 5.432527827 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102704584 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160056043 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085154065 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142152072 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122542192 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112676887 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088082313 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141550181 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.1030566 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08290742 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124251439 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118999894 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102565683 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089967134 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111264558 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108190786 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089764332 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106755841 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092081804 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107400067 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112476047 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094074773 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124329737 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122451798 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11263174 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087073456 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107105731 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11261641 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101696684 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113093543 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113558226 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094246633 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125224849 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11355412 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10721548 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090437676 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126617459 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108609666 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091177444 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105347398 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089477595 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113412918 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11481489 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125971581 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08880458 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114119624 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08805621 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104906663 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122113627 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090691504 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116693387 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124254238 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112002395 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08848595 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112886605 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124029747 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088594282 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10654368 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091419715 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122487758 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105706528 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091035905 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123382211 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108416293 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115588296 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100941794 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109913999 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107702304 seconds)
  done (took 8.328017638 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093754964 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110346673 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119699595 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121218337 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090829757 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111354367 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110019828 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091180044 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111094049 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117241212 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11290746 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13630897 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089391246 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118190899 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11506338 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095305284 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115200452 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115456289 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094984002 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115102878 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114890408 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124409473 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094833776 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125258777 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146560675 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109784821 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095434753 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11645893 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124086993 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115139936 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128745568 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094383306 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115715709 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125006161 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126083731 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094163042 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107355604 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114426099 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094354291 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115355842 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109196 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124699188 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094807116 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110767856 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116875808 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094650656 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125407895 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127939806 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114330498 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116309863 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092287657 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119504483 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109461732 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090978068 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120466356 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146040097 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119135369 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119094188 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111536647 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120280486 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100910876 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127521061 seconds)
  done (took 7.813608013 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107780577 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115790119 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117178958 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10144542 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086123105 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113471403 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086518499 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.106553598 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119219304 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09879987 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121479995 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112829293 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095989516 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122190928 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112785138 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117487607 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093243059 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113604816 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119318772 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112922979 seconds)
  done (took 3.011623115 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093292792 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123823656 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084752384 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111926558 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107644286 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091512545 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108632275 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111638161 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09042165 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111940328 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100438841 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122368769 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109939101 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095819025 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120929926 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115801129 seconds)
  done (took 2.540212544 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096353582 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116118301 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120283145 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085270051 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106249788 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084596956 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.11038647 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105302697 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08496113 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125449556 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088485631 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113819253 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109687127 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087325628 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105965467 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09172766 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105154741 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08679553 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110221039 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12392707 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099225697 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108611083 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110207446 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091122898 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109568964 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094562758 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109532169 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10780673 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087831321 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109759815 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089222705 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1173831 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104163861 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083804745 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10308531 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083109652 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105764008 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085121335 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109795334 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10427751 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084182566 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104367585 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085190613 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105810123 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080788533 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105897944 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100325852 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091845053 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103207243 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086410853 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109056758 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11150394 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087487162 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120147864 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089777046 seconds)
  done (took 6.380307048 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098971691 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108252356 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080517676 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103939514 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088138066 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111732878 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113237845 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092139424 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110952577 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086424751 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109921575 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090807264 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111609666 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111514199 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090901282 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113622496 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085552849 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111320821 seconds)
  done (took 2.666720728 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090882564 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104495456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093065857 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105063026 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084984251 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111612905 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083396981 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104674304 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10286009 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085613184 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104519771 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087366102 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102759511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087180844 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10474338 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084884754 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108069224 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104027339 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085010638 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100829706 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087533696 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102817216 seconds)
  done (took 2.968724851 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11756385 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124481361 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092982929 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230580107 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103659092 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132542333 seconds)
  done (took 1.644523643 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109807732 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119927832 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10607488 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107247727 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11419825 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107191712 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087239485 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107400372 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117533051 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100904364 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108121474 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116746883 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117432747 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096643703 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114825889 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113905235 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107966841 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088828953 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10515428 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128417213 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087754952 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117011535 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108033404 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086508172 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107686013 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11663117 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118133458 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121476188 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088106472 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117723357 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11405817 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087982436 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117827054 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121666171 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109670256 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097429982 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108065805 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127660432 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113471234 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096182478 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108442694 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114898244 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117997045 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093921505 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118123666 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107306634 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093436518 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10804688 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107666941 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134809145 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114483341 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09711869 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114551065 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118019942 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119663219 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134800423 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101063292 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116577455 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114571462 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121902885 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116600709 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094037357 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117075189 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122816054 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114340943 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117391761 seconds)
  done (took 8.125529649 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10457243 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125947928 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107282689 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121938584 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096317433 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107943133 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108705922 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086827541 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108069642 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106474539 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15174743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0884605 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116840482 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116699324 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108269669 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088644813 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107972818 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116337674 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087816577 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134473324 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10819252 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117377676 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11774225 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096108483 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121910183 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113796622 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10852449 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087906292 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107253614 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107914978 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093209353 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107704173 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116881783 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087075504 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11795916 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107997329 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107332499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093770637 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107592641 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11478751 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096220734 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127621671 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108715714 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107841297 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122617478 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087467482 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108482139 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086981827 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10865036 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107790858 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122548456 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101215781 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122389155 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116913523 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107667168 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088258947 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107765734 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108621619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088294033 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114190899 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116608263 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107747321 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13476731 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087793818 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107820157 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117574061 seconds)
  done (took 7.996364539 seconds)
done (took 158.212917689 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.228077164 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.20686648 seconds)
  done (took 1.283068068 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087348817 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135512095 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096830939 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170263799 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086164197 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139551651 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13855274 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09734455 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106679394 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085057798 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106772378 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087529187 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175711839 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086195069 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106834634 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107645342 seconds)
  done (took 2.668707656 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.114395551 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255219813 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.123200885 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105707121 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089546144 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111295955 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08558869 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114561325 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.0917938 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.109650629 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093509724 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.111812405 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088465444 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111671364 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116043745 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092831019 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110622682 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093419593 seconds)
  done (took 2.874263834 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112681991 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146228046 seconds)
  done (took 1.119913194 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242048812 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162406692 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227528372 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.467836914 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.275549469 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.3551261 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.196881819 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210400539 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166115613 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208056889 seconds)
  done (took 3.364909701 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118563121 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179773252 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315896248 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155676917 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106934791 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127393865 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156325737 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131092979 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123007201 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122199757 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.101395646 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117359155 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138604657 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094364579 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114848348 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117243917 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119994354 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113890069 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114544508 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095626484 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136923782 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105480981 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09377328 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113266982 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.118368624 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097579409 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106600646 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084708299 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116333172 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114830325 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092095259 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125778641 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119077704 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.153764607 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124141 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154975219 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118563756 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090936123 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114550337 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111329386 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098150687 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118736846 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125399039 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096550695 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106326063 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117698969 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084920378 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106245445 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093736798 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118905455 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114340018 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092892221 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154966857 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11909837 seconds)
  done (took 7.367381871 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794900179 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156271283 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090711755 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884052732 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135788675 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104000761 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780035643 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11143093 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255445186 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.752741768 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13306082 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121246487 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206712725 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261305882 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956167741 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293133076 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.640011773 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124122238 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151160872 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154168659 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118325262 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13588144 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109799917 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452933725 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11667836 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111529271 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096794702 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119332139 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1599131 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124649605 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113529863 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179039688 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251271686 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206990341 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095670471 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.117437078 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113845479 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169886417 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267028509 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193875161 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184246782 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108929173 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089289238 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122462923 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133042114 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108302744 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162189585 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173786144 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170233603 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114471344 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118608422 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098109642 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120949422 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165101984 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121807808 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322059717 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31296551 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094118806 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123737109 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126159943 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258539836 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101806003 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226273726 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139239564 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216009505 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093704634 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776678561 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169420437 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111427536 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095080697 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12062855 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115873813 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120777148 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146445753 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390813568 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124371736 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114527591 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089590643 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.254357185 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125248487 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090269138 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161927899 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115900107 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12133691 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124267477 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100766724 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190600929 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.22960265 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122959505 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09809663 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116730454 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125450943 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095007356 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211292584 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217897439 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.186440559 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207813117 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12139962 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163047693 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170380185 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12058473 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174480502 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126768714 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130125261 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10279909 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220641232 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150058065 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124276757 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09703559 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120365639 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14906018 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127929087 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119637193 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171461143 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478002887 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191615019 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087305865 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128321421 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120761877 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162795293 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116945521 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238614395 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123051179 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17128475 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123629356 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086813906 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121103527 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163135517 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122963265 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121774971 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122197437 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096959435 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258080736 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195530848 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125987341 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24341329 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18334376 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096027147 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193867416 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099433494 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19122331 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100695893 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120762083 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117970146 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774676774 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125121031 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121180563 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094045833 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196615867 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112185301 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123591698 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103042012 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109004956 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780379945 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109483655 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122082 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124390754 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096177694 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120852922 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118827245 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092872387 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186000878 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232557632 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103555876 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127460284 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.130165483 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.166606507 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123551355 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10712236 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12787546 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12514827 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099776159 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116093331 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124496173 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170709086 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164850414 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224722083 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597044599 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094707541 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.128956313 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230380626 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112685217 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.267607359 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121065307 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227151621 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169895415 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.12779752 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316746099 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168793673 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.19851865 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127254899 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174556049 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109433223 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096590487 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.186320781 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090391209 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118152559 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163852454 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125782113 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100658099 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960574527 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113057367 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227773071 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.113089115 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172286573 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116155695 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098129968 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299608735 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112929771 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105575421 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18627197 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093251348 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125092379 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.715352308 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102709283 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122560363 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117916 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219352571 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165049025 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123039518 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097995838 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122080863 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164549804 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213402628 seconds)
  done (took 44.20547412 seconds)
done (took 63.73792857 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278715413 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21832641 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268926434 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170236675 seconds)
  done (took 1.898445032 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171305892 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149257013 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121314773 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106962782 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150786189 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084598206 seconds)
  done (took 1.669882179 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365115357 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.284965673 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.252513138 seconds)
  done (took 1.792233004 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.291797134 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247022747 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470115189 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324445907 seconds)
  done (took 2.346654233 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209441552 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132389397 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110854773 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103656229 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196399892 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244360434 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142696852 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201424099 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099326731 seconds)
  done (took 2.379756058 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196191487 seconds)
done (took 11.171945472 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.131980657 seconds)
    (2/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.248311843 seconds)
    (3/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.300565443 seconds)
    (4/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.181421329 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110716693 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.183918096 seconds)
    (7/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.271214732 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.093034134 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.226109527 seconds)
    (10/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.240049808 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.115942031 seconds)
    (12/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09539509 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121942567 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.210546992 seconds)
    (15/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097681204 seconds)
    (16/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212135165 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.159489697 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11999569 seconds)
    (19/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.217845452 seconds)
    (20/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.168685278 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092600501 seconds)
    (22/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.156985955 seconds)
    (23/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102353381 seconds)
    (24/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.237753168 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.204465988 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130954033 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.18710097 seconds)
    (28/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.215895449 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.243566818 seconds)
    (30/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.254670471 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.164871393 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085532138 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.262386877 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.165057574 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116577581 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.200179289 seconds)
    (37/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.133440485 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.101895876 seconds)
    (39/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.121170729 seconds)
    (40/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.179177195 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.108503735 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.185986715 seconds)
    (43/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184083892 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.130865337 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.08912897 seconds)
    (46/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.169728179 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.174907706 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116059182 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092010808 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133590875 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.205467775 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098726378 seconds)
    (53/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.188684932 seconds)
    (54/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.151449571 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.139634411 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09544219 seconds)
    (57/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.18183682 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.137772176 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179295851 seconds)
    (60/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.098402643 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112186593 seconds)
    (62/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.198199805 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119962341 seconds)
    (64/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125546459 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119395915 seconds)
    (66/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094826836 seconds)
    (67/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138493928 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096525191 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111164484 seconds)
    (70/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.216083487 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087600234 seconds)
    (72/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.145437819 seconds)
    (73/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090643014 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.137742535 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138740233 seconds)
    (76/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153611933 seconds)
    (77/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18649094 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155497189 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066083661 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.18692964 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.109979971 seconds)
    (82/309) benchmarking ("sort", BigInt, false)...
    done (took 0.218308188 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113484978 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.178831392 seconds)
    (85/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.107887475 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09272873 seconds)
    (87/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.07518844 seconds)
    (88/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110011014 seconds)
    (89/309) benchmarking ("sort", Int8, false)...
    done (took 0.188628343 seconds)
    (90/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066058157 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.132988678 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.140019243 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086057071 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110373874 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085634362 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.178331797 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.132777283 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.123344197 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109161777 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097743463 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.088890089 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094012742 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122653624 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097153401 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.21243649 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116014803 seconds)
    (107/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175252685 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067086249 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.087785505 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126378371 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.183330658 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066946168 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090203075 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.157626528 seconds)
    (115/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090661229 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.106821681 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.143067079 seconds)
    (118/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11746494 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112094916 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.135171445 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117015295 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066872643 seconds)
    (123/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.454557104 seconds)
    (124/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066276033 seconds)
    (125/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109770251 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067248902 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147820059 seconds)
    (128/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.176848053 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.16926912 seconds)
    (130/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.148858647 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.151530852 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115635781 seconds)
    (133/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115139576 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096418615 seconds)
    (135/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111157647 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.166832116 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085961537 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.191393663 seconds)
    (139/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117199995 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112174508 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113893888 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067846993 seconds)
    (143/309) benchmarking ("sort", Bool, false)...
    done (took 0.179970588 seconds)
    (144/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118605197 seconds)
    (145/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097111213 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119850858 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.135756263 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119118914 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.112072923 seconds)
    (150/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076050132 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.092831645 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091819904 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116016453 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.175324008 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067062843 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119397265 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094217936 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.190040854 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067372359 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090444007 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222783983 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086984224 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090174553 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066139982 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065924603 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108623088 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094125226 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115174274 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099516998 seconds)
    (170/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.088920862 seconds)
    (171/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09378658 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.118946734 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09521839 seconds)
    (174/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.10700084 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13953858 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087068987 seconds)
    (177/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117724765 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096138814 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113294541 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092663055 seconds)
    (181/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090035722 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.109829883 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112360884 seconds)
    (184/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.125317349 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.132843193 seconds)
    (186/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172672376 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223456464 seconds)
    (188/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104430944 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109381387 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092479434 seconds)
    (191/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118290851 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085421647 seconds)
    (193/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110946355 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066246211 seconds)
    (195/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116303873 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086174397 seconds)
    (197/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113188064 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076975602 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114774076 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.155585951 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116573137 seconds)
    (202/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.191007423 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101412271 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12025409 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132452844 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085561379 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067542148 seconds)
    (208/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112809322 seconds)
    (209/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068196907 seconds)
    (210/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111413098 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068070417 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108675584 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086616794 seconds)
    (214/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178315719 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086274851 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110770963 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.06635306 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120744766 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195818417 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.125495157 seconds)
    (221/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.090491193 seconds)
    (222/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067793396 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.13682208 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09569936 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117630606 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066362001 seconds)
    (227/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.153717056 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082235157 seconds)
    (229/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.0673405 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093745395 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.19260039 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094513002 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090379289 seconds)
    (234/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067472506 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091929871 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.165940842 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066800985 seconds)
    (238/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132897987 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109474625 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086310848 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090186234 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077107991 seconds)
    (243/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067839 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189307979 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.111209444 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114306505 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117571808 seconds)
    (248/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068763913 seconds)
    (249/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.09171574 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172314011 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111473968 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136195157 seconds)
    (253/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100080093 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111674817 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086612098 seconds)
    (256/309) benchmarking ("sort", Float64, false)...
    done (took 0.173080915 seconds)
    (257/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067450556 seconds)
    (258/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090040341 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06805452 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067961615 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109851333 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21861649 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068301974 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116960219 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093335576 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110907029 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095892872 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090306724 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092964098 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091072102 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086292367 seconds)
    (272/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068128726 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.090654036 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093778511 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115686937 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111835985 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.1358664 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113516226 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068265189 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094192881 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111095233 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108983561 seconds)
    (283/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104815793 seconds)
    (284/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.091466548 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08631448 seconds)
    (286/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067739228 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182553143 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153400166 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093849632 seconds)
    (290/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094112094 seconds)
    (291/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088375264 seconds)
    (292/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.091799992 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092136245 seconds)
    (294/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118884016 seconds)
    (295/309) benchmarking ("sort", Float32, false)...
    done (took 0.150191183 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091499343 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113703866 seconds)
    (298/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.090540523 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068446246 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116084796 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08568602 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109391437 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094779043 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111715969 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093149815 seconds)
    (306/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163809727 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.154041442 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085444374 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132084936 seconds)
  done (took 39.793322082 seconds)
done (took 40.692803651 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100267777 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146885018 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096417075 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13563564 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123962312 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091364972 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118777362 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097891417 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123201397 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125566093 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098275921 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093741207 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097191924 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120948385 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097256058 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138715191 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12453992 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09359938 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118814164 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08612143 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119878386 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086855131 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112375645 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069919922 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122964088 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093837959 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116609281 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120312363 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086561596 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110806766 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090405384 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11779849 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085971938 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124234536 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093282866 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118744512 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.120353498 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097150902 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11202414 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087596011 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.121523899 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086626684 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120207883 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094916166 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118548232 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093036072 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119563004 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123078186 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115041661 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115853098 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095019595 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12186418 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096413916 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119321633 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090606757 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119969976 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116240687 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115661166 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11923353 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092219027 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119160761 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095401975 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116547656 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119553402 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095674116 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122346388 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09799078 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116405127 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09739318 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116172135 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087123037 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119418683 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114306271 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087385678 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120729617 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098629967 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110403782 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093443038 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118763042 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092527542 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110835954 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089704419 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112446659 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093483084 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113799539 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069915312 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114554207 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093053361 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110443499 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096388333 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117792147 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093740373 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113223553 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122724858 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087111692 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.11638246 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087602127 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111304816 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088941771 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114914131 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086323144 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113532713 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095136834 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112817191 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093581317 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123509803 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086527238 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117900523 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086901682 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110437197 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126447548 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097529969 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111452201 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092019043 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110885985 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094081788 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110473316 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087431008 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112031049 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086829629 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117304059 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087396314 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113946394 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094350634 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125381097 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087084753 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11510525 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090097472 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111126259 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093476638 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111824917 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087445935 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113344059 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077834885 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113854017 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08762891 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118593349 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090367165 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118939395 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112693991 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0957586 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115903789 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093078973 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117302037 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085824877 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098710156 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092460465 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113699465 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089198668 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111635566 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088840686 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111617409 seconds)
done (took 16.995830744 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087413184 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188012996 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153951519 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143086271 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108158105 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11223939 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123266273 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119373575 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113957406 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143433071 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111247351 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133057314 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150252771 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086919913 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11263272 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091153573 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114299903 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103671751 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146834621 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133567508 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166412878 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087104068 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147777402 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137369865 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121065127 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105497357 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112957008 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091268975 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116877308 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.13845479 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108561139 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115811846 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087226529 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135148267 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105365018 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11965192 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112851715 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094548707 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112523239 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087521992 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142799352 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134268583 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093283267 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118657241 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091672578 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115203475 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089387218 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122674071 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12339587 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091916786 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127658714 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157938461 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09155092 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123057103 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111641116 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.097915306 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122399924 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090777121 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113183293 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090048109 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.114563663 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091348609 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127915189 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143392155 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092417739 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122851156 seconds)
  done (took 8.672441665 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10498377 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140996438 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131814939 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105875155 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112784295 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088127055 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113028701 seconds)
  done (took 1.762681367 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090541467 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135669181 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12790725 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136723042 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132166104 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109375311 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123714588 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088403064 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131101175 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08984851 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13371892 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153215176 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090852696 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121625453 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138487654 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087975797 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138649143 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088797092 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117874984 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137766708 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091567116 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135786025 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090577197 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114225821 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103355237 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113979973 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163415826 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094063415 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115342662 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091651786 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112504499 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16726441 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10254302 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124901874 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114225412 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103098494 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129623782 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087028819 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130510374 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0942672 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128546012 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116012555 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090581916 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112368279 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093785174 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125137095 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089879438 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115655483 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091291087 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134161807 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089752261 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127952205 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089706806 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117896252 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115703457 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09519602 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124676387 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089650775 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134870685 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090895317 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131282348 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13448421 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103097346 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131481247 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091544307 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128328351 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127612736 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.09180429 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115260721 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091669119 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131028391 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087240587 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116580913 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099663635 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116621948 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137829482 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112412451 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116806874 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099080727 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114413131 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089699039 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115039666 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112456838 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118254417 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114699528 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093991877 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117650764 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087017404 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113667014 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.091925146 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112724398 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090047473 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117645682 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089777481 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117423204 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105540062 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116182036 seconds)
  done (took 11.876609755 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091074944 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115481339 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091273606 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11533709 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090639083 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116305032 seconds)
  done (took 1.591307967 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115246898 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118302082 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104288272 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120713078 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159063596 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129365014 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.103781475 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123752094 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107956176 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128123977 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130282841 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105843246 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136101861 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123334702 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104463494 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12136914 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130328968 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100187247 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12890059 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096683101 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137218238 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121651138 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096042608 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133401466 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118756377 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095196006 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127254848 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103102051 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127883769 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124383953 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097417952 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118656562 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121411021 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097430639 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130613823 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096833257 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121863799 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120515025 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099910231 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118531746 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.131008604 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096392427 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128009894 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095387432 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124143808 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122165236 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094020582 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127196914 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.12869923 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093472279 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120367817 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09566829 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118954936 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118784996 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095995431 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124145639 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094091149 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129467015 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121535906 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096270969 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119237117 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09396656 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123200797 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118944182 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10484776 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120114932 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122316345 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095953 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123858305 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095915602 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120092199 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118551753 seconds)
  done (took 9.280083822 seconds)
done (took 34.137425278 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691293786 seconds)
  done (took 1.663598572 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.72431754 seconds)
  done (took 1.697428062 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.990600044 seconds)
  done (took 17.958237029 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504141593 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.590989287 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.818000195 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179554336 seconds)
  done (took 3.067146692 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.940220779 seconds)
  done (took 1.935077308 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298552861 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25979375 seconds)
  done (took 1.537098475 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774544341 seconds)
  done (took 1.754833193 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.388910916 seconds)
  done (took 2.36868532 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331571328 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185698559 seconds)
  done (took 1.501693495 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550731482 seconds)
  done (took 1.528030729 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.116099316 seconds)
  done (took 8.105237384 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258802326 seconds)
  done (took 1.2559048 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299904205 seconds)
  done (took 1.285292326 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.516052948 seconds)
  done (took 4.511030997 seconds)
done (took 51.147821209 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098490197 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127728457 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10269915 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125328525 seconds)
  done (took 1.439799547 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101816688 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121252075 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100463242 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121746525 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126987753 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09624859 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12388195 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100724698 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120747622 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097123362 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121942229 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120879492 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098037447 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123742659 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093577505 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124264066 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125060111 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095387819 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125241859 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096684862 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119221778 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098676586 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125079368 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119166976 seconds)
  done (took 3.692638578 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100001881 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119268817 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097119176 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118279071 seconds)
  done (took 1.429079416 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099818106 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14252629 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138742934 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100094411 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143636493 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137058556 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092380647 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118119446 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094266058 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125604308 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091255961 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150062575 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137641615 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.10058516 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127258357 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114431923 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091568126 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136896961 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100110121 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126136253 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093428475 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125805593 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091464412 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13895586 seconds)
  done (took 3.816269704 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.159969729 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.151369054 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140123704 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095690361 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156240879 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142100891 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088123347 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141924563 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.091487952 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129883435 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11935038 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133446777 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128583193 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088453495 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113874478 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088599269 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128918409 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129691913 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091427942 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145933159 seconds)
  done (took 3.470690578 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098130296 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11776552 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088233941 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117222756 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099023792 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12169134 seconds)
  done (took 1.64678262 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090382138 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115107038 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090473488 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114611696 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094644511 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115643933 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088254015 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115318174 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090075565 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115552176 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089741097 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114655923 seconds)
  done (took 2.239728554 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.459100662 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092419709 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120914849 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112726044 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097636995 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114723323 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103650664 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118789239 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141237804 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088294939 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115688816 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090852951 seconds)
  done (took 2.6624195 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239071359 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126120911 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291665348 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191795786 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160585215 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172005659 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152571651 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167566598 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226859503 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158566905 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210318904 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222402215 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126859447 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219573033 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1128371 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145014323 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229215332 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220376228 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156222094 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233655037 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20339875 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166114644 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178247351 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152327496 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138716898 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170940439 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121129577 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104166786 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237300142 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179803788 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218449785 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16459177 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147480757 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24493703 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253674717 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201852005 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188564348 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136175162 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.146769588 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163602985 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270162318 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138854424 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240582528 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160958419 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105150464 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222937902 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169338704 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175059923 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150810118 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140195231 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198799261 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243002725 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193799335 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138484951 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163209082 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161705156 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167768122 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152396441 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254361257 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200435533 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206541495 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094279642 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146954175 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192608058 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182019076 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.195000166 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182319556 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147625903 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195219669 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187801384 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166943898 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220149116 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182312002 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139180318 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171151117 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175456253 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172409913 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25604482 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205142453 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096044829 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169142848 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149156101 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132102576 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193425509 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098550426 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241220575 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150643914 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1087356 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163797542 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162188418 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16142186 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199385203 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221511779 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14882507 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083601246 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157127084 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156157509 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189971062 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140443247 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161350445 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1620378 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13058417 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178565099 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124198859 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177350998 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09082514 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178245288 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211133215 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100727718 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158915169 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154186037 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150181972 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183247806 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227282851 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114192337 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133436769 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205771078 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203355597 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.123707735 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206669897 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200170389 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144086068 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149281963 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20080238 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248735103 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14017872 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203315175 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155707212 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134746151 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.108575409 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206679424 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129581868 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160742474 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134020617 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181276083 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239298535 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126431542 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112008873 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215279853 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107260064 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13242978 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161986472 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148618792 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138760037 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.120412713 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152931893 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210079407 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179673187 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153280525 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168102082 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151995319 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255998178 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141786811 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122669704 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14915295 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12051243 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195942752 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197140797 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132415737 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231063354 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174112984 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157171751 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171989899 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109428316 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177736272 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130696008 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09276112 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222016469 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167352255 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163724701 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195391719 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156175366 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184135353 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.209822673 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172879876 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176733806 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16494479 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160504671 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140297911 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160560312 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166402588 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096456568 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14440237 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134877963 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156889816 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143546009 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106999026 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229464148 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172137586 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149664681 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158758884 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150014587 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178469329 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102316688 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205402392 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176581393 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14775987 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198344606 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192792751 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213786859 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115938608 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23560668 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121697146 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099208115 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142354335 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173544364 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134011797 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108049991 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192592633 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180557533 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186832059 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177052288 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164630298 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178431503 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190028638 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122176368 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168193532 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18665192 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17640234 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187428243 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140971286 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152445549 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175547045 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156685516 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22932586 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194450612 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177504357 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2102223 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150164468 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132187818 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150388229 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187683666 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154976179 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177841181 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148112287 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140994277 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162547234 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108099326 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188222907 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185495324 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16284908 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191387724 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15019012 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214515775 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100665626 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165605897 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158106394 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164883766 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108863187 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177757234 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20425096 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147097762 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171135172 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219988032 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104176524 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.178454714 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24369591 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19624828 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138213749 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158686173 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160670463 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166294119 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173661337 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178257364 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160159535 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215927856 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130237079 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137442297 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140402454 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151359866 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153941989 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.106118472 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149068123 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173861789 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140688203 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188944935 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161417285 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15817234 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169713902 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149808136 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144727923 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151378501 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218085463 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174919815 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244024173 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150107606 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18006033 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233081884 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09951926 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133066064 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133101149 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178430773 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108877837 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218509576 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.121364936 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157643928 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206688268 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193242755 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139829312 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092910896 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156148748 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17426959 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165573879 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151595757 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160007958 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209127167 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142649335 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132318798 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172696299 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157908511 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120046831 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224816066 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080816033 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149789537 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100831415 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133291815 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165529519 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237229668 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136702794 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158275429 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167459014 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195412136 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136644627 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149398886 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150032086 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166962184 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228074623 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185697331 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104044421 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158062078 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204266084 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196062033 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161600638 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139806073 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204234125 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1942843 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226290458 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142959422 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168015174 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168288935 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156500788 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187381202 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134986048 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20724592 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13589456 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224738886 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153465143 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115498463 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203509719 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.121320898 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1429456 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187623169 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20127177 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10981155 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133962237 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168015849 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176113121 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155958196 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128483197 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18320982 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12500774 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191322976 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259229865 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134143848 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126016034 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147200972 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135615736 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158235718 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159787602 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139899356 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140148626 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229905025 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134832766 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192809775 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228609837 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172589763 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175604352 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144426429 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694366992 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102940788 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221540628 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154200188 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207993994 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151628471 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172348419 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158233336 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170626561 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222169671 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159986557 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203502147 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220679038 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178649792 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132319517 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15880289 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162099474 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145625334 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153963177 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168101473 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160840604 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153178864 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177892285 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171280129 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133780049 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112903813 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224830193 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156455423 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187585497 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179740006 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139425808 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172871199 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187286821 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134897735 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182409041 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238421311 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142881479 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12305931 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133911098 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156523913 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26185172 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097690243 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229273392 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176352851 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157956101 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166924008 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147820351 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189259539 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158204691 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205193759 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146435069 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160116077 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127775174 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137935785 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130406862 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154301055 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168080456 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147495022 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160445483 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139325691 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187497561 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12404883 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14554065 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156983536 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192854453 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243703773 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110530788 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135570904 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164228917 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151206538 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17483096 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178989821 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137101936 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135721581 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109901547 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156274579 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113136575 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155094918 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156143999 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165115727 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23191105 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110347943 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278910026 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13977101 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153057497 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089950035 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131826827 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149514358 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144999055 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156214483 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122926004 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258747021 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145875213 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131582514 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121941274 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125858799 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134594487 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164361546 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164079935 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174802556 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144808554 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081654169 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158729338 seconds)
  done (took 81.210117894 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165619063 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131794957 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147017545 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202088863 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17600246 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269213993 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210379773 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253110835 seconds)
  done (took 2.641582743 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093367742 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145750198 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.151108628 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132325616 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091768779 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119415278 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.331634754 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131653423 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090474949 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139931496 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.146841281 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117044455 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.511213315 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.118519663 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11727738 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082443908 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116502222 seconds)
  done (took 3.717475928 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.463882486 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.711457747 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.477936663 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124466657 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.105148835 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133976365 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.737713584 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209614815 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095080236 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.484805263 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.774565726 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179627925 seconds)
  done (took 18.588748627 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100890749 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121177208 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107643937 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135066311 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096383781 seconds)
  done (took 1.650121615 seconds)
done (took 129.193627731 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105763694 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401943115 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072551996 seconds)
  done (took 1.602625032 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10973476 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136603184 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109814778 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135815936 seconds)
  done (took 1.591767864 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099571212 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12681278 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108849432 seconds)
  done (took 1.429135101 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321099291 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189023506 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142099712 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107542783 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129515938 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103326207 seconds)
  done (took 1.43204821 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099080907 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12757818 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097539531 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130116681 seconds)
  done (took 1.546546675 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096630608 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071473029 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100362181 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074582135 seconds)
  done (took 1.432723837 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115642725 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131370549 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103831583 seconds)
  done (took 1.446455106 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.131959878 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138530384 seconds)
  done (took 1.366667653 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107772816 seconds)
  done (took 1.198817369 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119860216 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168197688 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188482093 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163435229 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227739112 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166517627 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141660375 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115317217 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130763828 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14412777 seconds)
  done (took 2.664412682 seconds)
done (took 17.565688953 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104639903 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418475823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414250149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116388112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721284163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380890409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030066723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145277107 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165162334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094137522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138477215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.737771783 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.031354696 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377919086 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.016748582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.375061306 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705676865 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09294918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119794792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093467426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015765827 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091845391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121783441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093128005 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703320776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426230596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094569201 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374283083 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092180639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126689103 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410239339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09425031 seconds)
  done (took 17.008384224 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095677191 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173787257 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098816376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137865362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122985555 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094066482 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124955907 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094243778 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179561784 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123094372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111067647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121289637 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127417219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095117633 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141977543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092519318 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125319361 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09300106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121610101 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123209573 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111142622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12059785 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09404927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121890967 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093761697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136545073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12403331 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093230903 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121546075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098631198 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128834728 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095778684 seconds)
  done (took 4.839154705 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140728613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184145342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128733385 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126253979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168365685 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12406939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200614868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146491001 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154684932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122832156 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140742061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09306214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156947995 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123414011 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114371089 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122412166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097497213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122699666 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093071583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123588052 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141037351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092261106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122810289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093734327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123259613 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137147234 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095290721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122345874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093286931 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127807527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10066687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124507043 seconds)
  done (took 5.166426107 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098924733 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127347275 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109677579 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138577713 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096713437 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125935913 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097664711 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125825988 seconds)
  done (took 2.025784911 seconds)
done (took 30.132783759 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113791416 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127737792 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107161573 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135102156 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103514364 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133186167 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09167998 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134491172 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135072668 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102167309 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138839024 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092170831 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124278102 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092953288 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136321327 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09806436 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133396559 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102753611 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133821915 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133453693 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095466396 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136003993 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103193043 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133849602 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104386886 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134295462 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138156948 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.1002123 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123625949 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094876506 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125228136 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10438233 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125051742 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105986918 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128083667 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097021181 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123602669 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095020122 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132923621 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13331353 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100321068 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133924108 seconds)
  done (took 6.035528395 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109232167 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140750867 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104903734 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082499844 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117430474 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081051569 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138056646 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080097171 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111206814 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108357489 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074673047 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10650336 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078895128 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10571053 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077252538 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076044114 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109137998 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075726172 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076717135 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106286727 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079757337 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073005923 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108858458 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078640067 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104807508 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081602684 seconds)
  done (took 3.599482146 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102051053 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136380141 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113165238 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185501801 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162451544 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100597165 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13279944 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141411953 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109000806 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121392538 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095803303 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150750034 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111081769 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128942687 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092200342 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137495348 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135332872 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094497538 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128652225 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113515581 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138663102 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.1033183 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142833613 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133575436 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09138599 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122943859 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096331048 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136027559 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09802565 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131008671 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125899233 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096867481 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123567348 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104545311 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127105855 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094854465 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142073802 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132049959 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101675964 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123406319 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096642747 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123774682 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114332608 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167603367 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092461465 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128886444 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129739236 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103234009 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121788624 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111554144 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132178776 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092290358 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125709128 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09129763 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122015494 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106378457 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123930271 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124823816 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102239605 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124794886 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105124588 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125475405 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10876876 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121892532 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100020076 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121007285 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122476615 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091682016 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144428535 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094116894 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16378957 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093404179 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123319525 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.13183828 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100677348 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128389911 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094052755 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137390569 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10255746 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125433164 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101427201 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125028762 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124846469 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111488517 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125129732 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094892719 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122448621 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100132766 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126113273 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094069166 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135989639 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092830626 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125728626 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139810207 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092557832 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12391929 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100277303 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126862835 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092575797 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136148553 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128064219 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093668595 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132187537 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093572673 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125514713 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102763036 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127133927 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091196631 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12755096 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099840658 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123107319 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122748989 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095867817 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12379459 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103228142 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129155609 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097154504 seconds)
  done (took 14.863115042 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.23004825 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215625214 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.249388775 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.268703998 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136225721 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145478297 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214288834 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125953813 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124155627 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161681586 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163237867 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187382996 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170868322 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181111418 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110418283 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121766527 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14278726 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.136058134 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214227405 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.289913952 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143489278 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100852596 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162801679 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16044559 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137585114 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.103094858 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140784229 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134084732 seconds)
  done (took 5.801502492 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110169157 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155979118 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098622433 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145179452 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148796505 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092985661 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127779071 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094477922 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134971779 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136609313 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093183563 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129575954 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101283033 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131910771 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124328552 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103055124 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132901572 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095111957 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126426132 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097611778 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130290143 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131854598 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097810448 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122889387 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101027936 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122229542 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087292367 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142290451 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123876549 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116025325 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121379359 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100428705 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134472331 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094304275 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123679076 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096147044 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126183643 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095743098 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124183406 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092262668 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121693253 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077877952 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122117406 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136600689 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098668684 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110275304 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099944582 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128063386 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098715428 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121003006 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09690676 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125845257 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09691618 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130371388 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098872846 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129212368 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096495265 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116586184 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099890578 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125969375 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084560815 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121636159 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099022494 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119329627 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101172722 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128325475 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093045884 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126205867 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098431156 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129231012 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.124284634 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.095925637 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121302227 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.095554339 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128576516 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097636707 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126633158 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09160002 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122890427 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094685362 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105637399 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093400622 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074898432 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125734882 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092221407 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122163486 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126741806 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.100492684 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138699162 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095068835 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129791052 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095050868 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121963539 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126570747 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084016981 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097217921 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138202702 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141648749 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093659461 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122028024 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107228121 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127865934 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121909917 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076305757 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100132294 seconds)
  done (took 12.989285387 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12890822 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153154752 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095969336 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142649398 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155519248 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158071247 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100283235 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130282459 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.0951391 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141911548 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093938996 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131809397 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097888528 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137542244 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157209381 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103031807 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12564621 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10730064 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132392501 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171463242 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111852837 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14343237 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138820631 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094180036 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129661815 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110713502 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162210663 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138516282 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107371718 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142241381 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109094313 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162084232 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143212712 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098300974 seconds)
  done (took 5.496510121 seconds)
done (took 49.890432112 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.234551996 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.436627933 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.207089516 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.133277566 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.245887898 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.239866447 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220054357 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.204736803 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.786025326 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.210017893 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.467866749 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.831032841 seconds)
done (took 60.354132227 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.21927391 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.343196434 seconds)
    (2/2) benchmarking "String"...
    done (took 1.479751401 seconds)
  done (took 3.956832948 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.572213761 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.148369087 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461244628 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.208609673 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.203469926 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.490451235 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.86934528 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.564637903 seconds)
  done (took 28.078965606 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.217594976 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.599554523 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.916602736 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.922799122 seconds)
  done (took 18.792217834 seconds)
done (took 60.752423805 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.199414398 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.227415927 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.224363703 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.192610558 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.316976901 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.251867604 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.554930918 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.457264016 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.20935237 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.190023846 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.231145103 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.203953452 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.22940331 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.524371495 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20876114 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.217893168 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.232215297 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.699458196 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.625701319 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.220234795 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.210026013 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.28362833 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.219067298 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.21436144 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.278428312 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.205966142 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.207002961 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211229506 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.81813939 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.211203914 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.214057118 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.699890526 seconds)
  done (took 192.124282242 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.211318058 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.215198224 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.288824519 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.268332474 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.623802505 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.407402305 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.339917059 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.713052044 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.228117799 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.216239817 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.432158623 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.21460111 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.511261736 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.223003522 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.2162018 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.301497011 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.494973845 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.510921972 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230288075 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.459707096 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.232516899 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.492978862 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.412183168 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.397043209 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.259166767 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.269526161 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.2123775 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.229973778 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.39721488 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.414576681 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.222591874 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.233948939 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.834781716 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070749487 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.217407526 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.247502964 seconds)
  done (took 150.388761384 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.505282442 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.211665111 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.21175779 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210042081 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.245234451 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.212347904 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.798118594 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799464713 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.717563461 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.504778693 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.272268689 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.470839412 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.209078405 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308178536 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.221743646 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211223724 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.227450891 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.253710885 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209037231 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210729992 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798078762 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.225322285 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.440989914 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.220351296 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212916357 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245796263 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60666029 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210720355 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246086527 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537723399 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257042243 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209785325 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.550430053 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.136734302 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321937533 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211278 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246403576 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.215064166 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.485751547 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211764439 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.213803587 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.217485488 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.826949777 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.210827581 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.800413222 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214256741 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.151381299 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.211508603 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215472968 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.570496428 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.729717192 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.225724184 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.213815446 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.215480515 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.213857462 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214421525 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.217579215 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.249942764 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.523701502 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314589332 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.230871865 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.219590207 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2474762 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.21686604 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.429579033 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216570176 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.554960166 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.271387834 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.436725195 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800168508 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21750208 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312556688 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333270571 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.213378694 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.217356424 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214492467 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214373724 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.324804963 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.211355488 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.643562952 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.21378834 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.223035965 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.216505632 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.27968561 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.309513048 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214075986 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.554533049 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214614748 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.217207618 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.943969292 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309148494 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.212707161 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.216454758 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.216966165 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216360221 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.644075974 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801770802 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.452867822 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.218669806 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.521067707 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.218402397 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.659328236 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.77722574 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.833378681 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215772567 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.216100771 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326095497 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219054815 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218455512 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.217867423 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.246747951 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.231108476 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.278092569 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.215544497 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.618306639 seconds)
  done (took 347.208101935 seconds)
done (took 692.35852186 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.9049087 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.853516445 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.991979834 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.869747557 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.858330898 seconds)
  done (took 10.622066096 seconds)
done (took 11.763087858 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.411218257 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.412106379 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281590012 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.414835318 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24591827 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432336168 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389124846 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.238598266 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.320800362 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.303159372 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.323250876 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2755134 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247941817 seconds)
  done (took 18.440429816 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.537658732 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.529495333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280292863 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533100497 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255942252 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.536471616 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409917186 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428916099 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431364591 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246946343 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233197866 seconds)
  done (took 16.570088037 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535767605 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532398612 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283301763 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536557443 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257815224 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.536597952 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417742344 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437621039 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434220401 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24931546 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233245602 seconds)
  done (took 16.600545202 seconds)
done (took 52.754477179 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.22904615 seconds)
  done (took 2.373607866 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.266229271 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.426939769 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24765838 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.234942552 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.229443733 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.230834308 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.232396739 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.230099397 seconds)
  done (took 11.244441063 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.230020576 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.228071686 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.222962681 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.22740808 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228200727 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.227002095 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.227916074 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226599705 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.22831614 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.232019606 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.227071555 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.231604318 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.226612253 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.228305956 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.23118353 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.227103335 seconds)
  done (took 20.798145775 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.228406677 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.227911435 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.228912505 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.229067868 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.229178728 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.227597252 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227763703 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227130602 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.228344184 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.229121618 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.230314352 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.228827856 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.229056319 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.226680672 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.229355477 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.229526801 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22820202 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.230084251 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.233732714 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.231057605 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.228332953 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.227681558 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.228503182 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.228864654 seconds)
  done (took 30.644151221 seconds)
done (took 66.204134852 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.444499237 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.94640314 seconds)
  done (took 9.539831343 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.231332211 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.232708559 seconds)
  done (took 3.614988857 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.232458961 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.231421801 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.231388164 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.230568675 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.232115415 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.232053199 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.23043606 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.229066892 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.231049995 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.2317026 seconds)
  done (took 13.461233249 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.232031747 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.231381512 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.230688277 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.23319375 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231389174 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.230060413 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.232290978 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.230853494 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.232135839 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.230663078 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.233444231 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.229659168 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.233898209 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.230227639 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.232268861 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.231574385 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.231382194 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.231963932 seconds)
  done (took 23.318329996 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.232129309 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234287819 seconds)
  done (took 3.61701743 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.232637131 seconds)
    (2/7) benchmarking "second"...
    done (took 1.229969335 seconds)
    (3/7) benchmarking "month"...
    done (took 1.230288959 seconds)
    (4/7) benchmarking "year"...
    done (took 1.23167095 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.230961843 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.230774349 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.231110114 seconds)
  done (took 9.767708218 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.235457841 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408713814 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.489094417 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.857169506 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.235298891 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.237644319 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.08811045 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.236874866 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.240313186 seconds)
  done (took 14.180085542 seconds)
done (took 78.645288953 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.264143856 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.240063316 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.436564835 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.246092017 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.260426091 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.572403555 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.274082681 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.366547817 seconds)
done (took 37.810378681 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.242118543 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.996277904 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.998204943 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.22791291 seconds)
  done (took 11.374901072 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.220039459 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.204309491 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.224085298 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.272083896 seconds)
  done (took 18.074110716 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.297172127 seconds)
    (2/2) benchmarking "read"...
    done (took 1.566912104 seconds)
  done (took 5.017092019 seconds)
done (took 41.857951669 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234907834 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.232257613 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234019918 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.231260941 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.233207324 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.23575953 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.233483875 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.232844859 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.234952105 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.235964499 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.235507998 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.235802464 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.235195149 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236201499 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233906751 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23314389 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.235903482 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235368965 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.234198529 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233028069 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234246356 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237281018 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.233814068 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.234364542 seconds)
  done (took 30.78011633 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.237374069 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.233229617 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.236470131 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.236937262 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.234784385 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.237772788 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.237117024 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.235366738 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.237130056 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.238162624 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235961836 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.235939771 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.238324006 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.233980603 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236893324 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.23783336 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240412374 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235893281 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238753974 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.233761489 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.236769031 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235313624 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.235504024 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238209774 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.234928855 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235047976 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.240240543 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.235195289 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237640074 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.23736323 seconds)
  done (took 38.252949981 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.243252963 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.246506188 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.239433282 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.238219677 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.238664637 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.239451385 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.239918563 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.238276405 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.239897664 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.237677213 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.238955477 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.238560044 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.238467789 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.239318812 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.239472004 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.239537962 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.239052152 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.236600847 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.238888049 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.239761682 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.23880502 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.239284684 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.239220394 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.239420515 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.239504403 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.238512583 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.241007486 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.240412444 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239253354 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.240055728 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.23986342 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.239345152 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.240524325 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23916017 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.238007364 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.238822127 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.243840091 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.245743946 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.240666389 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.240344784 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.240697283 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.240564275 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.239337306 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.240846147 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.238416744 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.239160276 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.24109206 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.241094244 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.241456921 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.239612552 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.240414084 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.240477017 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.240776096 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.241967623 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.241334404 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.242047192 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.240608226 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.24231793 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.242484538 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.242589124 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.241823817 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.24103229 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.240407899 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.243250847 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.242578556 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.242722315 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.243369983 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.242282592 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.242469231 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24109544 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.240437185 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.242733959 seconds)
  done (took 90.471659222 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.244436654 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239820386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.240328617 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240919725 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240521804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243074138 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241101341 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243495615 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241409368 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.249816581 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243048383 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.242246951 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240035311 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241070099 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242546117 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.241679448 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243811426 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239802277 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.243248175 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.245087241 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243707472 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.240780711 seconds)
  done (took 28.492534878 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243523955 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246036689 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240522862 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.243247272 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241308689 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244205106 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.24245599 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245969942 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243983569 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243428764 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240152435 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245780728 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244236926 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240351421 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24146572 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243005225 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244251905 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244499759 seconds)
  done (took 23.539085597 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.243103837 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.242712266 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.24460551 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242729312 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.240827802 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242816672 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243678443 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244079225 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.243406753 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.241717199 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247162057 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245624222 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245693657 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242780993 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24456632 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24506482 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.245651148 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243943351 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246158392 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245040655 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24403325 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247758979 seconds)
  done (took 28.535162833 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24690631 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246617125 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.244992996 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.244044876 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.243848439 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.246861348 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.245764954 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.244649352 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.246813975 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.247313553 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241664652 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.247139778 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.244531428 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246900781 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.244554457 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245214708 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245197756 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246554736 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245598648 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.245675692 seconds)
  done (took 26.074392352 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246865053 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249215489 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24968883 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247655373 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24929242 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248374823 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249356627 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.249937258 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24978498 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250930235 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249582972 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249500269 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249549559 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249713515 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251726415 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250562235 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251081609 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250370953 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249500168 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250584808 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.249798415 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251223424 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250737759 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250301081 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25097535 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250617134 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251914075 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251802166 seconds)
  done (took 36.166304797 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250326071 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248880852 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.248577128 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.24691811 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.247289358 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.248428877 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.248456026 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.248686083 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25034232 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248435919 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.251015975 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.250824268 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.251126472 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.251976271 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251302925 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.251591862 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251219281 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.249663292 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248533733 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248328525 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.251623824 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252382868 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.251686088 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25000577 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248604486 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.25110636 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248995596 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247949197 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253085097 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.24853935 seconds)
  done (took 38.663309353 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.271328078 seconds)
    (2/2) benchmarking "in"...
    done (took 1.269341535 seconds)
  done (took 3.707961452 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.251492632 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251353527 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.249640244 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.249070979 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25104468 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249435972 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250532738 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246716738 seconds)
  done (took 11.16750629 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.251622408 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.253607777 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.252631699 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.252396417 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.25141636 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.252702382 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25692431 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.270129298 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.253504446 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.25436432 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.256378777 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.25892645 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.256578078 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253971953 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252277283 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255339261 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.253898035 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.252125237 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.25285092 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.255124263 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25165188 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255860436 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255632353 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.249977793 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255965004 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.264594703 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.27385409 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.255601132 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251194191 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.258611941 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.253935507 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.250457209 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.254203525 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254230853 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.253687949 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.252108712 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259955189 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270415361 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260443461 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269846235 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255934981 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.252620879 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.256918794 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.253776376 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256491224 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.255223552 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.253278136 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.252480917 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.252810015 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.256890674 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.257034668 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254755263 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.252024634 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257938675 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.257562901 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260802875 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.27328306 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.258015657 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.261512909 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.264996267 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.287364604 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.275593327 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256194136 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.25603189 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265261001 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.278770592 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259098848 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.272213733 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.251954692 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.25693879 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.263852708 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288464649 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.282290172 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.255712441 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257069768 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.258092635 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258744353 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259531722 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266403119 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.277363655 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.25794427 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257562497 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265177612 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278051413 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256113079 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.25560267 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.258344765 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.258585142 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.256211236 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26736143 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.278390317 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.258427201 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.254420148 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.256531778 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259863035 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259332529 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.258881507 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259650806 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.253830132 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259043966 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257526644 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261822455 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.264273107 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256304664 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25808636 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.264751153 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.275455218 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257651344 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.260565873 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.255408526 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26006274 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.261409376 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.264012044 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.254711882 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260446611 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.267290073 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.257394082 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.260307358 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.258855064 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.258640611 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271583223 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.282587281 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.258380909 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.260344979 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.264165041 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.266811649 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261772838 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262522042 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.260840049 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258170721 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.259759487 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.262803751 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.260942776 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.261187519 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259548974 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262919312 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.258319648 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.260288828 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.264490325 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.26158718 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.263385643 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.261287435 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.263217088 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.261046292 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.26236839 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.264221779 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.267249377 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.2796308 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.263745512 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.261128774 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.260964107 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261032914 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.262620257 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.264431741 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.263785659 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263720306 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.263569346 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.26081697 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2630464 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.261313868 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262271859 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.261206462 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26476287 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.264902155 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.268201532 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.263461588 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.261915042 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.264116658 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.263585883 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.263415439 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.264275176 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262715565 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.265757955 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.269321484 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.264182129 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.263525579 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.267234779 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261969525 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26448981 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262571265 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.266463384 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.269310319 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.261716513 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273329284 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.281955776 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266019926 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.263626311 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.263229099 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.264390632 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26248439 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.26877667 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.274113556 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275846382 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290218104 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.264871886 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269538895 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.266570829 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.269688271 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.269055232 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.265284189 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.262729633 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260925909 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264646728 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265459337 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.265750887 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.266895799 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.265092769 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.267179495 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.263273609 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.265740429 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265049159 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.263976329 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266830919 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.264684646 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267877887 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266605597 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.267403554 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.264074429 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.266860291 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.264511948 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.264080249 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268144779 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.275121846 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.263515426 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266070566 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268590783 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.267498258 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.266739554 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.269175862 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270684001 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.267693061 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273984455 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.286301347 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.266106875 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273025131 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.287050088 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266583812 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.270547977 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.270028043 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.265217016 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.272625472 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.27396593 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.266986945 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.269661608 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.269217451 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269468415 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269138444 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.272704303 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.282761781 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.268602998 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.270056113 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.269666226 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.268013291 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.270309144 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268276033 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.270243431 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269444793 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269271897 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.269437765 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269384606 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.269305657 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.269575801 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271379755 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273009988 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.275044553 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.275121017 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.270034653 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.274060471 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.270809947 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.274833695 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.268189615 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268218091 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.271318175 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279903376 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.292999408 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277952061 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.290443729 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.271452982 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275725398 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.289269988 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.274442653 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270583609 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271204398 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.270207718 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.2709817 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.27140991 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272856302 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.271490503 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272663851 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272492446 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.273943929 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.2693009 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.271946314 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.27019873 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.271904741 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.27231747 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.270126962 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.272674145 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.273694313 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274598146 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.272767139 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.272414331 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276130044 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291830521 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.274959487 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.273436956 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.272605353 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.271534898 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.273953329 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.27464583 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.27743347 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.280738263 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.275974139 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.280346002 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.274571956 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28219635 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.273532805 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276663113 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.27846584 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.270289921 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271150042 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274496466 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.273648625 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279482127 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.292920523 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.274666254 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.278475934 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275780962 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.273979748 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.273534054 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.27347352 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274543389 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.272670812 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283547111 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.293007334 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.274254263 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273953129 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.272191199 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.272087893 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.274006091 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.271063924 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275356953 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.275266511 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.275499823 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.274547926 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.272908804 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.273898904 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.273468535 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.275308522 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.268256534 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273060022 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278034495 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.295426411 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275976312 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.27646714 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.280451141 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292666271 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282596613 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294513408 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.278010623 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.275406793 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.278288232 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.276393116 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.273796599 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.276973306 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.274483587 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.278011062 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.278065032 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.278421998 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.280580039 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.27769009 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.275767087 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.277787797 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284071786 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299655425 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.278602299 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27954088 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.272571716 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.278989582 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.280458864 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.278015356 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.277687884 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.278906913 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284615292 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283814931 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.277823281 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.27607198 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279327987 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281240969 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.277100837 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.276212112 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.276232637 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.278951878 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.2765947 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.277960688 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283095892 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.275329805 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.280961469 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276313308 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.280676564 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.28425619 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.297663195 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.280597583 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277973356 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.281487746 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.277407792 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.278033337 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.27930425 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2751474 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276116013 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.277366996 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282005248 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.281536662 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.279480906 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277105615 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.277776477 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.279653312 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.278597385 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278820442 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.280674088 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278350924 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.280830829 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.282838203 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.281501967 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.278019206 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.279396305 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280505392 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2817398 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282282537 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.287077429 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27919782 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.278696571 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.278818378 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279823393 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278085409 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.278995808 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290507443 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300331091 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.288304771 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.288038441 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.286401188 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.282338259 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285327466 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.287287296 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.280255385 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.282469065 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.279728496 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.283627634 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.281183324 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.283880388 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282161652 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290155503 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.298683229 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.2776579 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291354817 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.300151671 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284906572 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.285311931 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.283895666 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.284683685 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.28236097 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.282438143 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283637547 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288618503 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.304089695 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284885534 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285613174 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.283294542 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.285116562 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285367745 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28125213 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.281875878 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.28230931 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.282241473 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282816468 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284754128 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.277880713 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.282214513 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.283719925 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.286433139 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.288695986 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.281081563 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283756683 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.284428698 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.281891064 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281650966 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283787856 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.283067349 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.281423833 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.280014658 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280922978 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.284548817 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.287050254 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.28560218 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.282491426 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.286360357 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285963738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285573414 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.292912282 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.289781291 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.27899908 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283074632 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.282940794 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.283931035 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284601335 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.282387001 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281671163 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.283110577 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.282532108 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.282974636 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.282129022 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.285115294 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299996274 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.301885081 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281572197 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.28183905 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284934569 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.281898172 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.280223002 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.284685748 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.284472976 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.28547699 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.290974629 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.282594231 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289402374 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302733194 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.284331535 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.287387839 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.287042 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.292760937 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.286074866 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285342542 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.283805864 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.288115274 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.300086463 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284344008 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294058393 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.314337054 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.300728753 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.285043369 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.283187059 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279941694 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.283137161 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.285919488 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.282105788 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.281999018 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282826304 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281298847 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.283751978 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288436614 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.285343695 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.287099607 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.283510953 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.283024511 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.283738756 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.279932172 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.28278742 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.283599433 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.283898604 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.284172635 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.285743536 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.283452007 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297412877 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.308078858 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.286951222 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.284849012 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.28322798 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.287207192 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.288680829 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296476716 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.292394158 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.284610635 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.285574225 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.286056903 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285729032 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.285813266 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.2861549 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284615886 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283982239 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.282978246 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.296905893 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309978543 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.289192338 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.286020968 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283738183 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.285051248 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285246412 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28467058 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284493082 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.287136656 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.288039606 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289380168 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.286465921 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.285934302 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.289098006 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.295024543 seconds)
  done (took 760.283104065 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285803606 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284211669 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283398521 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285606191 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28442529 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286078714 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283483856 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285183867 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28468423 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283210076 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284596882 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285550034 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283855657 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283994421 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283551207 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284640772 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284577635 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284248755 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283819646 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284697038 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284206771 seconds)
  done (took 28.170975541 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.287067348 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.283969667 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286117472 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287608426 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284239325 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.287692117 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.283978126 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288041712 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287836023 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286183667 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.287455572 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287311864 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.286160374 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.285742474 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286088686 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288760076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.290751783 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288123149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.289085005 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2870953 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287210165 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28641158 seconds)
  done (took 29.513825646 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288943763 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.288145638 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.289501516 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.285835113 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.286847087 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.284948012 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.288060093 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.288588674 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.288286811 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.288174074 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.289842077 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.289205439 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.294035012 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.292989083 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.291413416 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.289604508 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.431691828 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.292864607 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288704954 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.287159007 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.286481325 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.294165639 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.30565634 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.286724054 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.287280152 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.28802202 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288807306 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.289288532 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.287905515 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.287810437 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.292942305 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.287431223 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287338261 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.292642758 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.286163072 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.28902426 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.292411376 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.289446665 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.285579405 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.290378327 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.299331484 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.311584913 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.289069009 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.295567609 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.303766176 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.286969406 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291761996 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.29807637 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.289481155 seconds)
  done (took 64.588710464 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.287161129 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.289187294 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.285853943 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290052563 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.288023498 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.289637053 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289701524 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288260352 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.284191976 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28751629 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.289724119 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.285245173 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287534531 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.28894787 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289667686 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288164734 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286913011 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287024625 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.285598896 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286665642 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.284522863 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.288967762 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.291441779 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.286229932 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287450983 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285157154 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286811877 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.289167051 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286172016 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.28503041 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.290657337 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286717765 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.288542623 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287485319 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.28852403 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289905436 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.289326011 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.288279909 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290390636 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.286774785 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.289352815 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289773889 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.292332178 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.290220851 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287037191 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.289062711 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28782257 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.286548448 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.289512205 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.291269361 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.290425408 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.28845497 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.289390547 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.288966777 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290148192 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.290516177 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.286162771 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.28635925 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.290221429 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.288770975 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.287384304 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291812096 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.287941858 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.290457377 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.291417023 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289842207 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.289381606 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291339342 seconds)
  done (took 88.815936659 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291840306 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291587893 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291101317 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291102699 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291831028 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.29070678 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291164895 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.291154706 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291336879 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293211657 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292351354 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292028495 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.293192091 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.291719557 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.29218421 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293274042 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293616855 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292043148 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292940304 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292488106 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.293223167 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292133781 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291803938 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294377515 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291812212 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292855337 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291973358 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291584619 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292249745 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292964821 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294646078 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.291107484 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291812944 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293378819 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.292591163 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.291291566 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292638391 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293060192 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.292656232 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291782664 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290853 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29130302 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290006028 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.290957548 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290978168 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291399936 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291433919 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.292514353 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.291455285 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29320412 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292432801 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291548012 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291212645 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291506195 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294574004 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.291693613 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292388691 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29281832 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292916916 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292496397 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29236502 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.295426371 seconds)
  done (took 81.322084695 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292422644 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292595004 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.289901055 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.289363607 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2919602 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289265519 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29458041 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.293106365 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293048549 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.293279229 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293469025 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290965759 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290327499 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294439477 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.292790581 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288982103 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290574842 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290320779 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293603453 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289822781 seconds)
  done (took 27.036844277 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.29051138 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294932668 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.290636263 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289782842 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294482789 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291771837 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.294922427 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293361478 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292005501 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294456159 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293757792 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29199269 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29066872 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290644288 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29365621 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289644177 seconds)
  done (took 21.879976016 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.293155659 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.294570766 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.295057584 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295819442 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291474192 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.292051645 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.295213456 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.292892087 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.290399057 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.292894663 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.293088645 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.292764812 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.292266143 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.295009678 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.291778653 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.295028004 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292245907 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.292789359 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.295572218 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.294854756 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.29192158 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.292648303 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29355253 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.295400526 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.293179029 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.292826778 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.291906353 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.291867724 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.292827787 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.294689524 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.294762322 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.293467843 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.29193545 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.292053883 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294686518 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.294211777 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.294207092 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.294330345 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294846886 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294879 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.295283409 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.293133546 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.29448364 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295309653 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.292715667 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29544554 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292207503 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29372635 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293013139 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.292709344 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.295095363 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295342196 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294610823 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296691715 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296074276 seconds)
  done (took 72.359484042 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295030123 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295668679 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293784981 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297639613 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298367329 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294690274 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296882406 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296734017 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295185287 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.295969981 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296404339 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297680897 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293196616 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297987857 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296109066 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297421479 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295727583 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.2967242 seconds)
  done (took 24.538036995 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294641434 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296152704 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.300170149 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297146544 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.295571075 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299307102 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296285922 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.298506623 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298496724 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297486329 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295647629 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.29738304 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297704337 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296307837 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294130506 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294724162 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.296589929 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299600178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294010405 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294089958 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297664584 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298102709 seconds)
  done (took 29.734834094 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296227187 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.295925179 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.299217651 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.310892569 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.316680818 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.319176679 seconds)
  done (took 9.044957164 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304047454 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299748083 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295973709 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298353855 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298593498 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29401291 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295147586 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295953593 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299963018 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296226944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296306369 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297936199 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298499099 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294086462 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298037767 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298251463 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294505353 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296351795 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295628966 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295841986 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294665462 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297805958 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293816438 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295211343 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294030573 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295263287 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297689702 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292748664 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296655561 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297703265 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297223654 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296453819 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29875281 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296687271 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299834877 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300138673 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296537199 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299803808 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300060748 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294843465 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299673846 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297698022 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297597545 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296681402 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297818779 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29708238 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297159183 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297251968 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295665888 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302507013 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299462632 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298018264 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300767582 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29916289 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298333415 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299180634 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297212314 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297942819 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297217714 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296741217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296002708 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297096786 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296013087 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298838112 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300861211 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296715018 seconds)
  done (took 86.86064345 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296008716 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295196913 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295291461 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294899455 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296752365 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297090966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294767788 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296384647 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29572176 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295603197 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298232771 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294207076 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294782056 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297106864 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29599866 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296532556 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29647227 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297306401 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296470354 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299086282 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298258236 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296754391 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295787673 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29509515 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297113722 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297156037 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295242651 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296170101 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297783651 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291940067 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29462172 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295676231 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294762158 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294904112 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29473847 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296313576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299459382 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29532814 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295733565 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29795707 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296342915 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297211954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294410999 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294619834 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296883256 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295903866 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29786413 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296217391 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29614013 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295846104 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296070737 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298253585 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296310771 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297730446 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297353746 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297047001 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296893193 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296628013 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296173737 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301623351 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29787493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296794209 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302581331 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297710415 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295821254 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299187912 seconds)
  done (took 86.779053056 seconds)
done (took 1767.929523876 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.358700536 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.383418625 seconds)
  done (took 13.949981835 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.458373259 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.413595261 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.296043361 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.328316222 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.291310613 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.317852693 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.309401418 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.290774792 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.295649516 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29882517 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.296254751 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.484802177 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.290324945 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.291170658 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.294316082 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.388265801 seconds)
  done (took 42.554329821 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.321871254 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304766541 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.408287995 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.320221337 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.322899343 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.474011311 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.353123459 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.303643181 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.460115171 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.342418065 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.780769233 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.325986996 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303404572 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.353993083 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322405747 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.470572876 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.530812327 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.786464507 seconds)
  done (took 29.691754805 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.711814326 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.304086847 seconds)
  done (took 9.227160939 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.326757727 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.320016382 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.326446618 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.338227115 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.300084079 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.316381996 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.327662974 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.332825548 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.326848184 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.305896634 seconds)
  done (took 64.430855514 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.32008306 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.304173406 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.304183517 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.301091152 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.296020266 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.296332695 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.303552453 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.300981384 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.634339533 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.419455107 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.320205452 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.30924137 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.318757988 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.306521219 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.302550237 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.338796667 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.437161406 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.319993392 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.301466614 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.310874197 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.306404096 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.41373252 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.343442062 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.303617998 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.420274336 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.659324806 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307318836 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.311749755 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.423429831 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319849471 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.30663223 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.30513851 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.30750548 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.854474492 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.740580169 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.322496924 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.321924619 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.315815042 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.303803594 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.44190611 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.324260214 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.313642099 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.302184634 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.725629526 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.458776224 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.41125956 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.459087738 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.308639665 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.312409999 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.363876153 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.308981648 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307766466 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.337962423 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.047390829 seconds)
  done (took 108.971823709 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.30559217 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.788993925 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470090191 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320559975 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.137893932 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.089045647 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.313039788 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.567107685 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.345271259 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301194189 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.582178265 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.778866124 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321178544 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.316787466 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.783643835 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.297483965 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301890479 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.182601505 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.313591335 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.302063846 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.705512216 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321803889 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.295159545 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.551187688 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.336557565 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.746660605 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.763536973 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.790093999 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317516115 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.29675136 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.747409226 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.318225284 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.337043706 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29635825 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.563154156 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.630072738 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.619535149 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.315665006 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.325973088 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297520281 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.321541056 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739093454 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.630564474 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.310534244 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.306465636 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.737385399 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.312338615 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.308977937 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.306486642 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507153086 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.222095496 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.305704467 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.736741457 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.296138211 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.556884436 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.386740351 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.343397431 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771275279 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311527644 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.458561975 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.358219344 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30410891 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.299280965 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302678711 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299801799 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.623488499 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.670522118 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307237306 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.630460401 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.750202023 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316683431 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.811282483 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.174588443 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.335869478 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.349515036 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.312046662 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.982067985 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788695539 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.330737671 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297797548 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.617791767 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315194934 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.56355023 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.312681629 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297023541 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.715987308 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.322055571 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.328191274 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.305765529 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.323891394 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.066807982 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308609031 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.568350491 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.351399114 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305412067 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.303752606 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.353070212 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.298641096 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.300253145 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.304490116 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.802131798 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.324961572 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.613976654 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322334507 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308701936 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.31501935 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.30754736 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307979798 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527528089 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.777829253 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.307195554 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309141471 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.30216017 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.312811767 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.559065675 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.3094469 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.593448153 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322286713 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305599353 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.305857324 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.119889272 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367298355 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300984566 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.320235557 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.149239081 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.523754992 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.330006698 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.29911308 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307461253 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.322853153 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.731901771 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301466767 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.377647289 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.308152534 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986797787 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.34798789 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.348360835 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.883887976 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.308352637 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307220853 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.304806914 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307258622 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622854254 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.572242196 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.511089685 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.307819225 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.323754314 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.975693142 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.360617215 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.435255049 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326052481 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.308173134 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50470769 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.492275521 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.308032502 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.854553738 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.30496832 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.525847279 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.30877514 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643075786 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.777890965 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323773693 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309809968 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.993462071 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.011199252 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.994286358 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.31477932 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.569565548 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.304798067 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.76093168 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.309685741 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318182587 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.879513109 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.311373905 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.312324208 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.309353612 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.309820312 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.366003107 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483860615 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.802034817 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306819379 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751740043 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.37271025 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303595686 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.307948284 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.311133123 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.661974224 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350491953 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.312315788 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.324919755 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.314085959 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317861161 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.76340457 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.215093591 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.3130229 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460706188 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919128097 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.325499116 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.310988234 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.941580032 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.530707802 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835909306 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.361002748 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.598297421 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.326341191 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350636076 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.078017806 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.398507508 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.757738002 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330457951 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.313351603 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.899121232 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.327224352 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.429483974 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.306033367 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.313456679 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.815248285 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.327197785 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.316795476 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.721207584 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307379149 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561425922 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.311814728 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.357325533 seconds)
  done (took 1105.995492967 seconds)
done (took 1376.022909108 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.312253799 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.307584668 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.296870978 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314283757 seconds)
  done (took 26.459289609 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.32183077 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319259377 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.32029949 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.318507607 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.322118254 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.320450575 seconds)
  done (took 9.15136517 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.363664845 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.309286713 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.315263873 seconds)
  done (took 19.217245346 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.523953157 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.539476745 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.662326533 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.400760725 seconds)
  done (took 10.356765764 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.320852166 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.321435315 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.318972848 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.324092891 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.323703775 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.325548093 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322003476 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.320933113 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.322161992 seconds)
  done (took 13.127468091 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.009377853 seconds)
done (took 84.546459592 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.400022819 seconds)
    (2/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.647934885 seconds)
    (3/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.539872228 seconds)
    (4/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.585919741 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.43846112 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.30049127 seconds)
    (7/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.316424463 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.795414701 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.290972853 seconds)
    (10/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.036605934 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.55370864 seconds)
    (12/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458405688 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.357927178 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.129807213 seconds)
    (15/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.325546973 seconds)
    (16/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.329944092 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.623956296 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.344643554 seconds)
    (19/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.316589434 seconds)
    (20/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.393750935 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.019706527 seconds)
    (22/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.487121581 seconds)
    (23/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.601406401 seconds)
    (24/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.989307412 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.731526672 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.393954953 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.41872454 seconds)
    (28/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.522869023 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.615917173 seconds)
    (30/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.600416027 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.711433477 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.13181238 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.00578033 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.690528794 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.438646705 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.303982445 seconds)
    (37/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.328699576 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.329409897 seconds)
    (39/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.379834841 seconds)
    (40/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.671913023 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.329299428 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.513060947 seconds)
    (43/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.147510345 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.04212429 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.699853259 seconds)
    (46/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.525798459 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.44645113 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.438178747 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.049686862 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.58036204 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.620162356 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.438473203 seconds)
    (53/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.822585534 seconds)
    (54/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.88302588 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.920680033 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.404226606 seconds)
    (57/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.141811155 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.147406653 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.318885162 seconds)
    (60/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.344661304 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.376947766 seconds)
    (62/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.300076874 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.388516969 seconds)
    (64/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.433059125 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.3195351 seconds)
    (66/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.380894721 seconds)
    (67/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.368168301 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.43032406 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.41873625 seconds)
    (70/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.319378438 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.337390422 seconds)
    (72/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.656467593 seconds)
    (73/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.383965395 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.364640647 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.554942295 seconds)
    (76/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.5886101 seconds)
    (77/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.513114682 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.324264105 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.937118801 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.851344905 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.489014031 seconds)
    (82/309) benchmarking ("sort", BigInt, false)...
    done (took 6.321261915 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.222400404 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.86299498 seconds)
    (85/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.83335134 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.746423323 seconds)
    (87/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.659831032 seconds)
    (88/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.344421961 seconds)
    (89/309) benchmarking ("sort", Int8, false)...
    done (took 4.349177117 seconds)
    (90/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.669017921 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.194966329 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.320341043 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.211570257 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.357121223 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.721114773 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.756169779 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.386013075 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.738284229 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.880699628 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.344733142 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.055554545 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.349217055 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.428229172 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.330023137 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.401591392 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.346930631 seconds)
    (107/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.755925809 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.02525126 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.651466467 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.032352819 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.315076199 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.622022426 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.144089674 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.905167134 seconds)
    (115/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.826537859 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.704125886 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.394448273 seconds)
    (118/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.364814973 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.701078016 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.53811734 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.349178223 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.328600874 seconds)
    (123/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.850424242 seconds)
    (124/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.896816266 seconds)
    (125/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.322560045 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.296972055 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.517519314 seconds)
    (128/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.475647588 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.334642441 seconds)
    (130/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.538924995 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.318606155 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.151531933 seconds)
    (133/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.419548573 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.954921813 seconds)
    (135/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.343805853 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.417152478 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.889974624 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.323945955 seconds)
    (139/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.344486836 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.773923319 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.341709385 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.728906602 seconds)
    (143/309) benchmarking ("sort", Bool, false)...
    done (took 1.843527628 seconds)
    (144/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.363524187 seconds)
    (145/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.324258325 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.641648128 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.700755462 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.325711043 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.352579082 seconds)
    (150/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.580723131 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.008655449 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.053482376 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.5988851 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.416074686 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.123223815 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.435144804 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.454121983 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.421680285 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.312954557 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.299362687 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.320541321 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.334245772 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.617726527 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.947592263 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.406394007 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.079003956 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.345841032 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.658444798 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.447969062 seconds)
    (170/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.678742348 seconds)
    (171/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.436710304 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.724679051 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.356236223 seconds)
    (174/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.343550477 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.225818702 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.318710565 seconds)
    (177/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.452007265 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.352519584 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.390676175 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.355125729 seconds)
    (181/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.87659623 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.711200752 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.407594139 seconds)
    (184/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.053198634 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.367997954 seconds)
    (186/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.318177157 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.319671984 seconds)
    (188/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.115397992 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.651734633 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.405181163 seconds)
    (191/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.346236475 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.668159353 seconds)
    (193/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.462105866 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.798795524 seconds)
    (195/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.347564334 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.220872733 seconds)
    (197/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.412679033 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.664037956 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.537312183 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.336934006 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.363248643 seconds)
    (202/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.307526125 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.455951147 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.36772054 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.192084702 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.564038219 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.337255491 seconds)
    (208/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.508731191 seconds)
    (209/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.108464297 seconds)
    (210/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.372043087 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.342610134 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.38172476 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.785586595 seconds)
    (214/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.866341795 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.721339609 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.335882083 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.597708618 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.323113607 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.341185169 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.55002563 seconds)
    (221/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.553288608 seconds)
    (222/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.340752889 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.759355304 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.967393983 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.54417677 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.561990575 seconds)
    (227/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.370465975 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.3245489 seconds)
    (229/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.67788788 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.30456019 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.882696081 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.332372623 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.151733781 seconds)
    (234/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.919670012 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.345106882 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.351014537 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.737468068 seconds)
    (238/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.341582645 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.371237897 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.15105099 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.615326332 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.121302616 seconds)
    (243/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.829015217 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.325206723 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.943512119 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.342830557 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.352968092 seconds)
    (248/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.311476366 seconds)
    (249/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.101081766 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.331274206 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.66799731 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.339426846 seconds)
    (253/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.040699236 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.945222011 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.215386898 seconds)
    (256/309) benchmarking ("sort", Float64, false)...
    done (took 5.581306866 seconds)
    (257/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.505458531 seconds)
    (258/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.73086272 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.244031079 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.875427905 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.528668527 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.340049584 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.639022496 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.41182971 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.355393563 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.337636969 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.713283161 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.644767018 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.352963734 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.314180964 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.165529649 seconds)
    (272/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.635670871 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.679423706 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.353281183 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.051725892 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.372981688 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.166250045 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.407142252 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.851092314 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.416871739 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.34035633 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.410732906 seconds)
    (283/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.622966318 seconds)
    (284/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.951415618 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.444413216 seconds)
    (286/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.538783174 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.345095625 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.370178837 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.151444117 seconds)
    (290/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.310121456 seconds)
    (291/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.45104593 seconds)
    (292/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.514622723 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.38610134 seconds)
    (294/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.342483847 seconds)
    (295/309) benchmarking ("sort", Float32, false)...
    done (took 5.320016637 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.727472698 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.608701582 seconds)
    (298/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.309554429 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.518125146 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.352421379 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.452032107 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.061906494 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.447594414 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.333306672 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.351855518 seconds)
    (306/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.334337942 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.414249018 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.416460682 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.731046331 seconds)
  done (took 912.695454252 seconds)
done (took 913.924008826 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.368872421 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365957392 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.346864278 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.368637132 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.457367355 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.374551165 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.357538502 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.349030459 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.39484462 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.395947949 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.344105129 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.373715832 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.347223841 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.346242816 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.341816856 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362736189 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.322099403 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.341275751 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.36201641 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.355849245 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.364303196 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.342533431 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.394442528 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.377245705 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.352689669 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.352675071 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.350243349 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.367261127 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.458900299 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.348839029 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.348663804 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.361165076 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.317318875 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.340658267 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.34019427 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.367423776 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.359277487 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.352767854 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.350829925 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.379623957 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.702084725 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.357483212 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.347344689 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.344035688 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.349152511 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350725795 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.34929006 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.355437075 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362136382 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364537132 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.697174119 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.371913452 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.351594416 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348268675 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.359846607 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.349286324 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.351474907 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365922204 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.366266177 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365826305 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.325660547 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.356049119 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.353724236 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.367106659 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.356540028 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.732358532 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.355663973 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.355927789 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.708142281 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.365928691 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.73462275 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.368342175 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.352911159 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.363867923 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.37768407 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.335814121 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.347491909 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.351317201 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.356720905 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.34839115 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.360751726 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36468211 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.351140221 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.352743676 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367721316 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.378897218 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.36318497 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.351533649 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360196514 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.370267188 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.356974463 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.36070259 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.353172149 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.347736402 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.362481786 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.356147355 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.356220694 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.353684243 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.355879402 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.363191883 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.711093367 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380532918 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.345039725 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.347600766 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351191931 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.363463547 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.707254571 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.363289296 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.373793156 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.398088033 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.355191831 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.329007223 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.354253946 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370951904 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.359689376 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.357244116 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349788973 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.322601134 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.696809969 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376088619 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.356618991 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.351819611 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369652819 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.355834144 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.351989762 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.334841108 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.348736296 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368787521 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.47463537 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.36341992 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.384715419 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.351411909 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.356884343 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.382183169 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374170636 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.385689288 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.356250024 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371184437 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.370154224 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.352196397 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.36498405 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.365000907 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.352806631 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361090067 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.35003991 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.385346574 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369316735 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367991975 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.377292854 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.477498482 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353157083 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.325559737 seconds)
done (took 226.992636658 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.414406256 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.342367093 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434233663 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350992619 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.452082176 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.447977878 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350632198 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.347523509 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.350733148 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.755916393 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.348733668 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34960571 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.343297084 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.349656007 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.434676453 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.351845702 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349335317 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694050897 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352095196 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.420302188 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.352516912 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.350308106 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.351350948 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.732975295 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.352692994 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.35199718 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.421937743 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.353936744 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.696434317 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.352383612 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.352121176 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.722268144 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.442028479 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.369578944 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.362403983 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.359016429 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.449816427 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.371017758 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.434161463 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.434022583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.43699883 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.391059727 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.353897622 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.346419837 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.353147808 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354858937 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346226221 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.381952227 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.35669222 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.350550246 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.692614213 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.361589617 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.35183433 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.352217157 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.352880391 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.384596489 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.348450405 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.354822376 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.439966278 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.355160933 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.41146079 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.735504971 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.787353552 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.354415464 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.349784287 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.352238354 seconds)
  done (took 149.770836299 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.420107404 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.427219089 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.464516739 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.365871838 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.403651413 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.467886258 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.365648464 seconds)
  done (took 11.177330424 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.360275642 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.356171221 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.405727897 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.405097383 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.353319596 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.502010358 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356755652 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.368960285 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.351852886 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.409951932 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.355136601 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355211471 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.361862727 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.352787839 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405469342 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.36680213 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.472213594 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.35717527 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356696399 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.507813411 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352841211 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364487739 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.409795318 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.368911335 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.358687655 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.358449105 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.92814382 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358013288 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349824054 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.357278013 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354007286 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.396016474 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355845376 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.348701932 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354799254 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.475919092 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.357740455 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351478636 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.358565137 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.360178154 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.356358461 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.359664712 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.356873122 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.355671012 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.355460272 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.38036681 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357897777 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.359568434 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.358973871 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358610319 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.408204304 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.358511232 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.355036807 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357457655 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.413993229 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36602982 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359063999 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.353210737 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.36016217 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356392911 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.514223157 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.404838888 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.358122727 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.406336216 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356207922 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.359836101 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.359427557 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.357972827 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.412286598 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353417212 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.4068519 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.355666253 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.511329492 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.376722934 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359406392 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.359413863 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.358413343 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359645794 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.350649526 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.364714416 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352832233 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.360325437 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.365482536 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357834262 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357501377 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.461169477 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464650611 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352258784 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.372962791 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.362346729 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.351735203 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.412199161 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.359057486 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.358447158 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.413974974 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.474417528 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.412338505 seconds)
  done (took 155.507124741 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365857651 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.368758069 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.358503886 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.376433517 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.360428258 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.361800726 seconds)
  done (took 9.45771839 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36441768 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.360953098 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.362662292 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.3593376 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361390852 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.356466584 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.360684518 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357718601 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363433845 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.358440561 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.361972418 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360249254 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.359976943 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.356542493 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.356740967 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.357176204 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.362275705 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353665204 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.358768589 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36045256 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.452086668 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.357111938 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35718948 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.3572463 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364483737 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.358910545 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366178606 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.359583753 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.363848725 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.369615963 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.377490547 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.359114739 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.362694176 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.365864933 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.366063799 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.359573509 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362275137 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.363064408 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357152427 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.36545983 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359781951 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363448477 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.358012812 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.364802506 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.367084422 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.363658433 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.364481763 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367653132 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361118558 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.362456453 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.362561052 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.358474097 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.365043671 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.363632335 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.362861619 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379494594 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.365964605 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.362100821 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.358922046 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.35957821 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.361388791 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.363784289 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361895758 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.361409816 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.368919267 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.362629063 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360897587 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365600781 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361005906 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.362177157 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.366574779 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.360856431 seconds)
  done (took 100.437602681 seconds)
done (took 427.604871191 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.670623832 seconds)
  done (took 7.944358351 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.591002786 seconds)
  done (took 7.865947486 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.91616331 seconds)
  done (took 21.19294621 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.372530318 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.411222232 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.346975846 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.349436807 seconds)
  done (took 26.749589132 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.632514737 seconds)
  done (took 7.892093493 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.349264049 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.358606347 seconds)
  done (took 13.971716387 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.866371523 seconds)
  done (took 8.127661459 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.873309664 seconds)
  done (took 8.137546589 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.37718478 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.362036353 seconds)
  done (took 14.271400036 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.327390255 seconds)
  done (took 7.587747261 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.117615362 seconds)
  done (took 8.375735342 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.356717178 seconds)
  done (took 7.613976143 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.399708864 seconds)
  done (took 7.657095232 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.069642728 seconds)
  done (took 9.327227129 seconds)
done (took 157.983809281 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.346288909 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.745934992 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.338399313 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.335015314 seconds)
  done (took 27.021980658 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.377025843 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.377930931 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.379339227 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.388594859 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.38049327 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.376666132 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.370863676 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.370234672 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.390356481 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.384770709 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.393458883 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.383333233 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.377565771 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.369180163 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.381555251 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.379371776 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.388896577 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.379067121 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.368580917 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.381961756 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.345094786 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.388184663 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.379371679 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.345918342 seconds)
  done (took 34.306925233 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.866387993 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.415457868 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.497669417 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.395583742 seconds)
  done (took 7.421582119 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.395521837 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.398455074 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.409885467 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.449293402 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.475620003 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.406770967 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.369109683 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.364403126 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.353392601 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.399856365 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.473865721 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.413888972 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.481132371 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.344673549 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.531641731 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.345303405 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.344668745 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.397508208 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.446678946 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.464100705 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.347436291 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.397670152 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.401145846 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.416248954 seconds)
  done (took 35.076492627 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.357381075 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.352769901 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.346085021 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.345135288 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.369334209 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.344457333 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.346914238 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.347637866 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.343644579 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.352916673 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.347163218 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.357089751 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.347445111 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.345170663 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.354141859 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.347267984 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.35151153 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.344304814 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.346293391 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.35069563 seconds)
  done (took 28.245946284 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.339448401 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.202351121 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.692038247 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.596307126 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.342584971 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.340402804 seconds)
  done (took 27.763980875 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.414145989 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.557470412 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.34997752 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.691786099 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.774475529 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.356714486 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.349785056 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.579169481 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.881668883 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.868681913 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.400175471 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.413737681 seconds)
  done (took 19.887762949 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.344039648 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.341198693 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.344396641 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.357997596 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.399898118 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.366643207 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.355053844 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.341257107 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.400228941 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.418254513 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.368319212 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.402344288 seconds)
  done (took 37.692736298 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430763687 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387948621 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.28536703 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064010943 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053683132 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549052958 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.091556059 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.774524444 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.341300843 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616809255 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312070178 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441248682 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599836305 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34208712 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346379063 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.31503802 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580940778 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82409391 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340372047 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.173789523 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371151049 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343400213 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.361804504 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.374105718 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556430116 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.321180967 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.606304579 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.120042718 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621807668 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351888701 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355615565 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343433716 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618206409 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996451817 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449485447 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354943827 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.030487268 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.890659203 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.342949509 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.268055305 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.102691781 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339927259 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356600353 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344466056 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.279586775 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345364545 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774565297 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.345676833 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.058504287 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34583393 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355081273 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441448722 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.348706654 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.33721482 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368802579 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.345860044 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.34587552 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351572719 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91722411 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.667239614 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349305924 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.297071819 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.715139194 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.263981307 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968120667 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.458504221 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.350859784 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350102002 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282361709 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.184409007 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363068412 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495444163 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.365157111 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996693723 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03765196 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341326116 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.288547481 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88513949 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341609948 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.282472999 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575070663 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126893038 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283708719 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.287949148 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.282810436 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055165342 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348883978 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.728401192 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348660708 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.773261682 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.353849958 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364723561 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371385314 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.572305673 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.241856157 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349887418 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.100567571 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48643533 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364073188 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.774035092 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278166538 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.347229463 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60334861 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.559131969 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349311572 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.313785707 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560999707 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35261256 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.366038974 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354165964 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.360436014 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.907031723 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379240382 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.660003831 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36823742 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.125566785 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088604389 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363193167 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.45078443 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.340641732 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60304153 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.107520042 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.505939797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419690572 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353386819 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35090236 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.299547408 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203273044 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.258165084 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.349510862 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351119482 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.362963534 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.353679705 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300418153 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.351029379 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352545486 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.126278671 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.571497781 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345925388 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627720419 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28591234 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496631875 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.355125142 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.569319758 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.549374911 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.36560485 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613867231 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353781635 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368254331 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366923201 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372913541 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449298335 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375969235 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.367208943 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.609007696 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.355711109 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.357915982 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.320132363 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.131481882 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358490568 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.359712191 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.191405573 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90877325 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346938624 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353040891 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244778831 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.367486304 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420670558 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360467591 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.363877314 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.120833078 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.165170557 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.359615294 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.352200076 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578685067 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364508917 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.33413534 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429599522 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.542790884 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921457004 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375638514 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.291150211 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.066259528 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.048020484 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354288349 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.543411627 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356491265 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366175171 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365197906 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.874297397 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915159214 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371891449 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.227225176 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.363116864 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368029925 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.3605768 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356445783 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.094333886 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.713156015 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361069351 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.361423807 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499203792 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.37044215 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290150675 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.874821194 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363207257 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357160694 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.131947038 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389535004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.218345571 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833869466 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609697739 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.075844489 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36350049 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.400012759 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.384619836 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.366053419 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.149640766 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370635749 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.358920794 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36789983 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.368430771 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.328782601 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.799946218 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919747205 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057429245 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897426391 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288534092 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.37314539 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.244624326 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.787521809 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293329536 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.015832919 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541519413 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.800535687 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298297128 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544689229 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.557027452 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114598306 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369162725 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587514046 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26555512 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.159369342 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378942689 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56832952 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389101132 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356282667 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.280250115 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.739116356 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597539129 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.160427857 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431495806 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784723977 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.154357204 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.146187301 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.357995987 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.693357796 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541020183 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.989950887 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.745642323 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354950851 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353029534 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82856673 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360327545 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.884951286 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971690484 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382711324 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.545003152 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297265545 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.369763142 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.371183581 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.355032416 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.607093563 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.372946435 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.616280115 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371296713 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294279852 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363983774 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868928487 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.225414074 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.366063337 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361541153 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10702183 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370643637 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63177022 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.374255009 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.088492457 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370111557 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.293222737 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296995264 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.054347053 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363007907 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341190653 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851277519 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.704906612 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.371352345 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386695725 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324957658 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.612196623 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.376053758 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926221978 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598390843 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.146552973 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384416451 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.462511264 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.205784698 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.354052205 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.244171632 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597930986 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199725466 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579371841 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.350895517 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.261486862 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.361969658 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574565334 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.241562264 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361977087 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593664278 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.079920318 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.383946925 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080955987 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396726743 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37769058 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.370314233 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.72484492 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369972047 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428607972 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374974847 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.375065159 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.37542695 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528108934 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36759075 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35977343 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.377114883 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456816911 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.720842068 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.087700331 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.1494316 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937065784 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086544741 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942265847 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384930328 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363042287 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372698454 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300194935 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508194163 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.887765889 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639139777 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494972297 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.817002756 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381489467 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.21567192 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385197011 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568889622 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637956168 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.233970597 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372276401 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02233898 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.257363415 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372062664 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.573153073 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860918895 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922740626 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476608879 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362045175 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.802349829 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635189633 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.454453557 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36173607 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960152737 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.379663499 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.723621014 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.385277668 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362439838 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520724077 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372949962 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01406577 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.38471887 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.528457791 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.141440596 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.381319982 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.616181866 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.808935553 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.37293783 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940764197 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05553111 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630891466 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433410566 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376252961 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.477536254 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509099086 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.370966767 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.27089694 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367156758 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280051776 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.073125748 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.374945014 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945230765 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637941292 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.365426487 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.375321635 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391048373 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.376507568 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591605641 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072707869 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586697279 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372951771 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370428407 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.3620932 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940543179 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388860314 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304204514 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.366373948 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600556273 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613524462 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391057756 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.821755975 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.075695719 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918047675 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.33656362 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387223163 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375331444 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.050916707 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943053673 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.109010923 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872083853 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.022847738 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376330053 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644602785 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.374203451 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369353705 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648366332 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.374885217 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369415453 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391137943 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.943220195 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127772085 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.369561279 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.316832683 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.299616747 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.599130621 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99879179 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309262193 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374657548 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.544356831 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373988743 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50267925 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376534741 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.383200423 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365187096 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.10547043 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645911462 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.370977391 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.35372573 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.264490613 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367279687 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379056573 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598626048 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374039534 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.046271364 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.723495157 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.627974346 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384061703 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.354661808 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.375775541 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372391544 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.09227259 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.335427085 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.870130652 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944846142 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.384915129 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.384963183 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377311514 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.588133722 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580963129 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384782963 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377352147 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38356965 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388196957 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.273262252 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.141744689 seconds)
  done (took 1592.536047683 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.401503818 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.40121644 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.379043306 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.473056422 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.431450316 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.466513237 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.406302031 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.490842922 seconds)
  done (took 52.728756841 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.373536378 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.516551043 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.398631095 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.385962019 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.378921024 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.388925647 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.820800107 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.385977611 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.377748746 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.385103439 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.388861531 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.377060336 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.015781361 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.377826921 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.376160931 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.366324125 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.377268564 seconds)
  done (took 65.979836879 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.382410765 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.857568464 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.460970554 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.373403576 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.314935033 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.385594857 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.009856093 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.378950104 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.367971021 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.645385051 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.041330403 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.398145278 seconds)
  done (took 84.898281531 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.38500969 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.378169129 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.377718811 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.378504786 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.379330607 seconds)
  done (took 8.181253269 seconds)
done (took 2022.996083138 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.622504577 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.055140917 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.994646877 seconds)
  done (took 5.331765798 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.524156184 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.567788919 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.686271251 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.699604456 seconds)
  done (took 7.760437984 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.657327545 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.748256286 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.563505085 seconds)
  done (took 6.250946246 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.742792358 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.380144186 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.5143209 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.378375521 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.378203987 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.378582566 seconds)
  done (took 20.419646514 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.382343285 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.380233488 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.379940108 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.378126468 seconds)
  done (took 6.804681186 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.358381673 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.073449251 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.358438828 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.373915222 seconds)
  done (took 18.448339697 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.128256632 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.137728335 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.124718734 seconds)
  done (took 7.6759694 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.392478737 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.21271206 seconds)
  done (took 9.888684883 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.676299039 seconds)
  done (took 2.962502235 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.516285678 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.707207161 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.405880037 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.333660913 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.413726014 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.088426932 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.950847024 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.559990654 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.316999979 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.460283844 seconds)
  done (took 28.03823397 seconds)
done (took 127.120393593 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.113960093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.378727731 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.587709997 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.085045567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.605753447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.588081119 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.577426411 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.059989054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.595007157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.584499498 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.08204816 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.603461655 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.745975747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.402867345 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.739724162 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.387371034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.611668879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.159944286 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.76641525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.001431708 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.573015201 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.730061717 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.913370731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.744358215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.603996304 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.563916327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.318234195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.378967473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.941988043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.335642835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.534077972 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.183113736 seconds)
  done (took 189.784836908 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39335822 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.374836387 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.374120359 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.403671685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.381973803 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.385959186 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.39187039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.388858714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.375604667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390500548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.388345342 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.38261543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.376678522 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.377674476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.389221823 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.376228799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.397041647 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.393947252 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.377461416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.376292363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.379084163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.391876881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.402999784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.376128785 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.409330951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.378600404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.375920574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.393383878 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.375457774 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.378021415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.379245433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.38244538 seconds)
  done (took 205.608142161 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.384647557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.378149195 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.380483178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.3868096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.374287073 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.381200921 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.377994781 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.376566525 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.377542458 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.375574283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.378565433 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.390115251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.378337011 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.376960488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.395594268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.395386746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.390670902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.388414551 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.378516524 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.378784927 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.38164217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.382950759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.379143876 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.378661387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.385292497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.391304844 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.396930832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.377399457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.39147021 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.392565139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.390796358 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.402631443 seconds)
  done (took 205.585977833 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.64526137 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.394361525 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.395420066 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.349468294 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.396203777 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.394889525 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.390438666 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.584365168 seconds)
  done (took 14.841912192 seconds)
done (took 617.106884503 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.615781593 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.330493532 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.592932234 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.416140118 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.173118561 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.42960627 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.412870396 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.580222401 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.315354759 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.588782603 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.651897716 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.427072362 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.778817955 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.405217126 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.661603669 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.50818451 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.280152896 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.398651711 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.716386071 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.918185565 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.672683944 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.876898946 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.594607618 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.305643098 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.799721978 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.875117195 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.089567608 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.273790057 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.429185691 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.73231107 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.996170477 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.332512175 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.475161993 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.470855534 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.527753242 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.505020157 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.315252846 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.468608241 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.610549823 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.657355337 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.929297168 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.134757153 seconds)
  done (took 93.56822561 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.380098511 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.375669471 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.37358652 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.376354264 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.377901422 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.377499348 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.37548827 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.375040727 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.374919162 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.376020571 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.376492765 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.378635542 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.377740875 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.375747355 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.375695499 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.375046779 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.375749015 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.378391688 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.37995637 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.375490836 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.375348104 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.375624081 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.378417646 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.381434792 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.375778479 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.377230116 seconds)
  done (took 37.092240447 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.397904308 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.644014624 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.802466743 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.40346372 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.393620984 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.398917481 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.466855887 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.400740817 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.401703128 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.398276374 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.562511565 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.402042048 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.428018942 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.82679193 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.40314311 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.398997143 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.401440266 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.398912363 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.652390133 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.411382578 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.494954681 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.401115012 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.472013409 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.40837904 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.422673566 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.39273283 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.397621072 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.916203659 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.417727066 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.566324049 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.168139401 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.473548927 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.872559633 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.83103767 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.169512362 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.404133513 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.401420924 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.574978417 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.404139103 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.401877957 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.46828344 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.403864725 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.810352806 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.012253794 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.417804646 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.395400875 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.939350921 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.586161072 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.636834866 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.408267553 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.832028645 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.405713025 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.399958822 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.400795009 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.63237826 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.409612574 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.394126209 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.926438928 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.424443554 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.473149976 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.403311578 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.401933535 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.656605191 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.403466742 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.643585951 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.403660952 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.410739731 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.418975938 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.80894445 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.405462797 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.044576309 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.418682843 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.404942571 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.570805016 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.650984466 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973985012 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.422933828 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.66075484 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.884378964 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.494111145 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.407617764 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.91040591 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.492030744 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.407737934 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.406819965 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.40664959 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.404479198 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.455937025 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.476210007 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.963655129 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.044438925 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.94361455 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.49302379 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.418712969 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.400708262 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.924748471 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.413191422 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.403843161 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.807488538 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.034809373 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.421259587 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.409634046 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.042174059 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.419319255 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.47606246 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.412071685 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.822084568 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.406683031 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.451713762 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.400077589 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.413296895 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.425826966 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.477044537 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.40701933 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.401378537 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.008859475 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.59687387 seconds)
  done (took 183.554534743 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.399432009 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.39257255 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.400597942 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.392614242 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.395445287 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.405719854 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.398635005 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.398821975 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.40675194 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.400139829 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.401022354 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.399748699 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.404083651 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.417069061 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.405019278 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.400229976 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.052001485 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.398322282 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.413468733 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.392591795 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.186972511 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.401277431 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.416493148 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.393314111 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.402024612 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.399413102 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.402421808 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.417984698 seconds)
  done (took 153.998706502 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.410720323 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.954990929 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.423948123 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.532094059 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.423596132 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.403710232 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.533148422 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.464391387 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.425167321 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.402979273 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.403820133 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.700914158 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.411041969 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.905590223 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.584014523 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.549656779 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.907826079 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.415937043 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.40619576 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.406635833 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.534947606 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.40741293 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.705915074 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.960023188 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.425493294 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.957909655 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.38760775 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.410422852 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.408164333 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.960768837 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.421565141 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.706368015 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.484214284 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.466795521 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.979808501 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.919026704 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.918542931 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.554414652 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.403258677 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.409406688 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.40743152 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.392489791 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.964542434 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.427331992 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.408345944 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.946340985 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.4301592 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.408704888 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.42088303 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.408267779 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.469301223 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.48441188 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.725551707 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.970025375 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.500461909 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.433542742 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.535454852 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.780374094 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.412974977 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.912217921 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.396865732 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.968343322 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.427532539 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.394315893 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.412174611 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.414046983 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.5549883 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.54250615 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.916067439 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.42688345 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.911220177 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.572398759 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.413684917 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.412215051 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.412134113 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.969989184 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.932701119 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.569481694 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.543774467 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.596350493 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.397828695 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.410570354 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.394580913 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.487267014 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.411807997 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.971825392 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.933732433 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.429518327 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.413373921 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.41591657 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.414500246 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.581479419 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.984782202 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.503822524 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.906551435 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.726115082 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.711888345 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.413724042 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.468332788 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.428425341 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.713145696 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.414404011 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.468990752 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.836537044 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.71534468 seconds)
  done (took 167.1794449 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.650875573 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.589419046 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.496021141 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.53336897 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.0016696 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.969171193 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.637511943 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.546859489 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.520463622 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.666233266 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.536041899 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.494815085 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.578364417 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.489180476 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.140360456 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.497237554 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.519861243 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.562377726 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.519690855 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.41381944 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.057777116 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.691739284 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.582235131 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.29386015 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.499389192 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.187135907 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.961699271 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.952299132 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.595196744 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.679838082 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.9375228 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.517546386 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.368084147 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.076505164 seconds)
  done (took 67.074613599 seconds)
done (took 703.758759945 seconds)
SAVING RESULT...
DONE!
