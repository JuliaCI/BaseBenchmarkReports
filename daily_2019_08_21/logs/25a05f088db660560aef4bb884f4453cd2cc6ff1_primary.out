cset: moving following pidspec: 20001
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.346228121 seconds)
loading group "string"... done (took 0.541269323 seconds)
loading group "linalg"... done (took 7.105272569 seconds)
loading group "parallel"... done (took 0.153742008 seconds)
loading group "find"... done (took 1.075371768 seconds)
loading group "tuple"... done (took 1.814744656 seconds)
loading group "dates"... done (took 1.210735854 seconds)
loading group "micro"... done (took 0.222763486 seconds)
loading group "io"... done (took 0.997940148 seconds)
loading group "scalar"... done (took 36.220344795 seconds)
loading group "sparse"... done (took 10.907034152 seconds)
loading group "broadcast"... done (took 0.911682424 seconds)
loading group "union"... done (took 11.8596916 seconds)
loading group "simd"... done (took 4.127992347 seconds)
loading group "random"... done (took 8.484242075 seconds)
loading group "problem"... done (took 1.852112311 seconds)
loading group "array"... done (took 19.767016795 seconds)
loading group "misc"... done (took 1.6711412 seconds)
loading group "sort"... done (took 3.071435525 seconds)
loading group "collection"... done (took 16.563915343 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481071909 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121798378 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113511901 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117982223 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139063379 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114426662 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122397103 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083384059 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.79131676 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143580802 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119433913 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412460536 seconds)
done (took 4.94093633 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17085193 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081684733 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081028878 seconds)
  done (took 1.305341561 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064289366 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120489414 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066221464 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066317798 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066178876 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065779732 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065424827 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06524865 seconds)
  done (took 1.658751949 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073262403 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068308433 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068561647 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067783459 seconds)
  done (took 1.422503518 seconds)
done (took 5.77553284 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.760742844 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200390399 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182440476 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394764234 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130386991 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152688337 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63923873 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317556229 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182839308 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080473853 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102371443 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.314744697 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106594836 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641448635 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078169839 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089031115 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135765738 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453397727 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066708609 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081234774 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088344359 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127815895 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086938185 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07360601 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142003455 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067420808 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129835883 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079517071 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066513524 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205980377 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172366651 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656430091 seconds)
  done (took 10.188756119 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096103413 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096648513 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068072449 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135546769 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095984383 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069127569 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070201151 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066341619 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08583234 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127707071 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088409239 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100220086 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064946239 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068494624 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084030557 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20359137 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081413222 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080497968 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069737652 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074687575 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115798762 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077048548 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076924415 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077090236 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128041985 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178874814 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095358562 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096563952 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066443147 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079464382 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114278986 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127233614 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066620137 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066570821 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123178365 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094424999 seconds)
  done (took 4.58482652 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.938382802 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138348761 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089508463 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165944901 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066840497 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105439664 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064726 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083171651 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198527471 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.370443415 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.566336138 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110272051 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099669678 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066937126 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068007109 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082867739 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06510016 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340490773 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.119576238 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111256898 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082348818 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073164142 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068210381 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.346751377 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069275197 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065469372 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067300186 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057506733 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110503536 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067008386 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.91686758 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124375254 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066352418 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099989306 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167924869 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09101744 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.218258423 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141013567 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065625581 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065984266 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148447692 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073976279 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065977074 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082818376 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102257999 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111684974 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068982623 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066730257 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162640794 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066342523 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085168203 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.976696265 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151873214 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076699423 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066781612 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243457029 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085543644 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066767157 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064402584 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17918217 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134031309 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066982419 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065937498 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065419782 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06851157 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348508977 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066053537 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.723340439 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068895811 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076620117 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06865128 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065751766 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071966596 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071895762 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084766275 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065516357 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074158994 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06542207 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065538911 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06746676 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08339998 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354392381 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065630502 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06764366 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063501343 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085035783 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095660976 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06808975 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064422082 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103743999 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067239542 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.171091209 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105333498 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066415357 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064094804 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083817516 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068619817 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112810908 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065622369 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.114649272 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066597499 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095526842 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069388119 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098371111 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063938167 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07977606 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067071064 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398678594 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065194186 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064774966 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066978224 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068459468 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066965774 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068625381 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079637061 seconds)
  done (took 20.913336875 seconds)
done (took 37.768828028 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274012895 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07391163 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074233511 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074681488 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074253229 seconds)
  done (took 1.80486525 seconds)
done (took 3.020482452 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119013103 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098762013 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064578361 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09447192 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063938351 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099008196 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098063803 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079897963 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09832865 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064250904 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0950605 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063862269 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063494697 seconds)
  done (took 2.336107 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082629444 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083290618 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069212486 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081573762 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063414424 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081405337 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079997953 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087668731 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079891285 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071335002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062875418 seconds)
  done (took 2.055276012 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081964164 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082923624 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068845196 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080466704 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063043343 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080441567 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079731396 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.083939661 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080308841 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072481333 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062897475 seconds)
  done (took 2.04185395 seconds)
done (took 7.636800004 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076602589 seconds)
  done (took 1.269694367 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582401076 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.038184704 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080918182 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111242817 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181708462 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118160567 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274691129 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085614339 seconds)
  done (took 8.848132283 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086650361 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068497013 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082563634 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071465741 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068905673 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071112646 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068953162 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071447928 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067966331 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067826401 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07014261 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068174708 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068902147 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070184311 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069815783 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070334177 seconds)
  done (took 2.411790103 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090977055 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090392124 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072485762 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073834535 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071432373 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071475521 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073430356 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07260008 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070195866 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070980257 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074276641 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07268936 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070617456 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06437063 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073246965 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074871625 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070122907 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073463216 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074315077 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074462271 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073690846 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063723319 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070629312 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073127433 seconds)
  done (took 3.06577913 seconds)
done (took 16.798353526 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110501321 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070602565 seconds)
  done (took 1.385735949 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080451165 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082881682 seconds)
  done (took 1.376002119 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082682244 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065327069 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088187127 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077009389 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065784858 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065354064 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086135891 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065784593 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065639712 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065781765 seconds)
  done (took 1.941036385 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068112515 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077324944 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069936867 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080019263 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072786005 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063330767 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071364134 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067194092 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07730056 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062241438 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069953202 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081435649 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069944008 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083025415 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071354243 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067607668 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069549153 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066280067 seconds)
  done (took 2.504310989 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065435761 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066155874 seconds)
  done (took 1.351169125 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066226941 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063557356 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066168048 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065791313 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063174545 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061973836 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062900864 seconds)
  done (took 1.664576207 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38084749 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109188301 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.291185042 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069828271 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080611053 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247697744 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064695362 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069137389 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069552023 seconds)
  done (took 2.639563024 seconds)
done (took 14.082879887 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078081535 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084237149 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093151877 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.344078522 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090467162 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064971053 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113442128 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186034565 seconds)
done (took 2.285487609 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210365336 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.605655092 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.377227871 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193502496 seconds)
  done (took 2.397119145 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321866032 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085457939 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058268302 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065730493 seconds)
  done (took 1.759064117 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065321384 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068153801 seconds)
  done (took 1.358120659 seconds)
done (took 6.949792396 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065570445 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065430057 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081583734 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062093648 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064488463 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063075627 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062530409 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064904714 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064766238 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062609362 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067862411 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064905272 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065067445 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065055737 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062719714 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062401895 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067945046 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064887636 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063132955 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062370235 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06234843 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064731842 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063019249 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063093893 seconds)
  done (took 2.814613763 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082418192 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065867908 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070014865 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070638378 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069239995 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070157665 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070070409 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065539706 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070402618 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067443192 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069395825 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068813793 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067467339 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069122305 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067561775 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068911035 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070478583 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067123427 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067190012 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069063638 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069960913 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065265093 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068965613 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070003382 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068343437 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068973644 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067222648 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065162411 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070056167 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068991827 seconds)
  done (took 3.305017012 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06945679 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062956053 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063728563 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070194578 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062861181 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06406647 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06301031 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062963133 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06326813 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062677089 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064350535 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06228794 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062902839 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063726964 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063799036 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067370356 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078206303 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063115761 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063047714 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063577603 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066424158 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062739816 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062781447 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062737916 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062779356 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062391188 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063366287 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062602282 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063289358 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062679036 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065712717 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066648709 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062522531 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069159191 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066244214 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062786821 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066680363 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062289719 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063346276 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062462823 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062416661 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062369329 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06246935 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069097701 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063241712 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064547613 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06274985 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063807054 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063032504 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.177393532 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062140354 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062428286 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064261495 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063604292 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066231946 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061809005 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063091024 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061902424 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063256373 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062542547 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061850899 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061824109 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064459344 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063033773 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076808958 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068986852 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062190892 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064395173 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063440538 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065151452 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06422977 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07543642 seconds)
  done (took 5.989183103 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088975442 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08626299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064819601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064751358 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061225184 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063262346 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066706895 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063079614 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0645798 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068372792 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063322786 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064566745 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064371614 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07541508 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06351287 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064494114 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068439284 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061170882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063186422 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066371379 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063446685 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066147902 seconds)
  done (took 2.730081567 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152547378 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069501374 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10466841 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071551724 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06658205 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071852638 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068365555 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06886563 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068957522 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06725458 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067065565 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068933104 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066487923 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066683378 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067185633 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06734017 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069161741 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067288367 seconds)
  done (took 2.594809323 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075945576 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065123175 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084622674 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064822421 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065021187 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067354975 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069557547 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072896528 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067218694 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064978417 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072830944 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067584744 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067051359 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064772559 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06734681 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064928694 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067219465 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065046481 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073226077 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069516569 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069899 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073363136 seconds)
  done (took 2.762568254 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078592416 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067269737 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08057623 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067970726 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061158964 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063526949 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06916816 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065177393 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069220616 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066702377 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065349834 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063942426 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068635584 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065087714 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068588325 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065116635 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067045543 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06459499 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066811067 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060929555 seconds)
  done (took 2.589842777 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085568628 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066653041 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066797224 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07457002 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066487757 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066502333 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073907039 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066324732 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066192295 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086044059 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066099418 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066310901 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073953828 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070960733 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066009421 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07391099 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074147345 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073692621 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066108668 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066306259 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08570027 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066199958 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073526401 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066035317 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065976246 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066449542 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066231343 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071245441 seconds)
  done (took 3.222870866 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065677434 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065114078 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062587835 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062350223 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06265783 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062762836 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062580283 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062546703 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065005821 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062551071 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065090851 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064769987 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065088913 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065720395 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065467316 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064890832 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064995841 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062601672 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062915332 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062752995 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065160473 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064870666 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064899593 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062561196 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062426383 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064932853 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062410203 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062584826 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065212536 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06254 seconds)
  done (took 3.163458515 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075572535 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071576923 seconds)
  done (took 1.396532748 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062758925 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079235005 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06265865 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069556196 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06866984 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065910119 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072172016 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068914578 seconds)
  done (took 1.795133653 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080354375 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076771101 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067538495 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079413526 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07577094 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081619296 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130468464 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066305911 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072195057 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063261411 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078823478 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064656551 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071297124 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065817673 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071472041 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071466324 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062943135 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071214876 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067650932 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063975721 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066486237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073611313 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067724528 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061056087 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066551534 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087084748 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075936356 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065061268 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068586073 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073002481 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070804069 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059785107 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065388971 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065611564 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063244456 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074775265 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07942937 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067905683 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073666258 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06624789 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075428574 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060558464 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069439418 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071648232 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075207473 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06577676 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065886987 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060467993 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063529676 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067588598 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060749217 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065541678 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059886327 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074417858 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068746697 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07554323 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064046085 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067006023 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068134076 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06871334 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071851123 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067439907 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067809273 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065381284 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072155201 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069733886 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074231103 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060893101 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060057698 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063389444 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075027335 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087207336 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071240532 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06586416 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065956173 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063206118 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068484527 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066297195 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070676908 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071469132 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065002777 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070346282 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072395606 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065540781 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068045344 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073559382 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063546832 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068102615 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063240303 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081371842 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064315596 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063524879 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063305222 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075279211 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068366256 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065128421 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063069555 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072221128 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060478413 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065790952 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06608404 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06613691 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075674245 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06907293 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068715384 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072778735 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071587163 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064744263 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066917866 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061082712 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064915085 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063117229 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071092728 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058584031 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066468325 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065181758 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064502708 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.196699401 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064743522 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066570103 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073082664 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071114907 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064836819 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062507672 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069116142 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065755841 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068963555 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073730327 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064561405 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061310469 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061396105 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068951548 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065721672 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070025841 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070674837 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069555846 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061138256 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064650318 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071549069 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074859964 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066255748 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066563224 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071821802 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067682004 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065051494 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072867907 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068308169 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06549733 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071593276 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066783112 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060830394 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068823976 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068669724 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06391235 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069975298 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069125482 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068139221 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067195094 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064933564 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072584511 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066983799 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065053235 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066599637 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064691025 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076073604 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06797816 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061439076 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063089191 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074501659 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064445237 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064989123 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064981083 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067850028 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066342606 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064700332 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065243584 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067244797 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076465108 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069811454 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066406195 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070803442 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077120205 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065980465 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06826224 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065303962 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067097351 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06653538 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074162455 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071019173 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070787071 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068152124 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061636554 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070644245 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073085579 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065052592 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063255154 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064584482 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069159098 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070505694 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069121746 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065863185 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06344229 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066026643 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068513756 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068027945 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065075943 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064501471 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071680891 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063538133 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072011061 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066194415 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075464493 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068811198 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060791903 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068573241 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063316511 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071037862 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06077271 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063946085 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064566069 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066042384 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064608415 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06746761 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05963375 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071840076 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072979146 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065037698 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063681862 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063966646 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071464766 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065685479 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068216623 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067591148 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069907582 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07442329 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063298508 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06705589 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074102854 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064224903 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.185959017 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072128672 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064914739 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064399952 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065582933 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064192117 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069677415 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074860565 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07249199 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060214355 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068625976 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064611451 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065111253 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061560343 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070437054 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069637706 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066673595 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072953852 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066544297 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066158958 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069463757 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065804598 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066466141 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067204158 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069143355 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066844528 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068286948 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066041038 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069409045 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065524519 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063326056 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067722714 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065790393 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065882768 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071513317 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065732754 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065854886 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068429317 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066227279 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066767623 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066324918 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064901627 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068180882 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066782758 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065594867 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068509551 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06173597 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072704188 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065648768 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073203668 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066478966 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062905868 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073085705 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068785851 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071800038 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066753849 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066966147 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067071929 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065117857 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069038206 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072578495 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064074866 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076697929 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073531283 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066546557 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069260954 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066245489 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068341205 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065254089 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06637337 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066190676 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065924817 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065582934 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069702626 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068114031 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065747316 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066912241 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065944952 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065642656 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066253219 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060226436 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.0646089 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064754122 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065222068 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075158864 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06636455 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065323723 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064635847 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066254779 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064894398 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062276476 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073454561 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074609011 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06599209 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072473361 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064500751 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06688454 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075788364 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059827635 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06339058 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063395178 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063389258 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072741257 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066133225 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074263741 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065201553 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064816809 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06291218 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065832914 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06399832 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05983717 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062457146 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067995376 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064035892 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062754293 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064356719 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066441967 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064759372 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073357674 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063178093 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064928732 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064052633 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061297544 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063383494 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063765774 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.198354337 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067035493 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064064362 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063065961 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06507852 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06648892 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066726524 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065336393 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067241433 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074523561 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065760837 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069330435 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069632054 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060467253 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069062595 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065375236 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0654594 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065550964 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069899041 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069264698 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067114584 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074267385 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065789594 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06663034 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065945065 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063872029 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066253372 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065904049 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066056363 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065210758 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067432593 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074055106 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063591199 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068994268 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066202265 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066228535 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072813829 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067338177 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068459728 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071935277 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065740415 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068643794 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073570377 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070145471 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069441411 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066822131 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0679101 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071428686 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065468018 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072957038 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066317616 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066292907 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067620397 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063854512 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065216055 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065831895 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0648505 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071276302 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066813179 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065769491 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064665788 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063924739 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066485202 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069661627 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072979844 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068185275 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068996162 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060908632 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062374061 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066567357 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064227884 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06676102 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068092497 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07078364 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067667098 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065740978 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064091899 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074381201 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070918288 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069162174 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063226525 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068782064 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065951394 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067368014 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066740251 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065540215 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066494533 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069502117 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066845152 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06493242 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072013405 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068506554 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066821367 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066862038 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066808728 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066135535 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061060699 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06632767 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067625376 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070543717 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067962989 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06571303 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075757369 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063572962 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066055872 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068399921 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064849439 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069990001 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060622495 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067014557 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066241822 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065844124 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060122954 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064629948 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062794192 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066807628 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063447795 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059272714 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073828267 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072691204 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067510552 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063093416 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062996501 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059353042 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059288752 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063715568 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.197403154 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068787642 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075827993 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065304655 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064955815 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061112689 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065653857 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069312788 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068956659 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062801105 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061221341 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065055746 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069280975 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071238078 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064834235 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065290543 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068633667 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068087294 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064116201 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069364579 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062520442 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069667001 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078375802 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067336081 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066394539 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072147895 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074059732 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06697779 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061547251 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067179157 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06938367 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065971671 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066909321 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06679843 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080623474 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069304697 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064775556 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065003252 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068554409 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065230483 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073362471 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067210108 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066532246 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070978403 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067849505 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074082837 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069464868 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072977913 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068523952 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069142792 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065375455 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066524546 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063907623 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065506681 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066608475 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067353204 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071182044 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073986366 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065712478 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076543306 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074355673 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067340904 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062626276 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065311387 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064795184 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061630015 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066492478 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064161519 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064404404 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063717266 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064750869 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066344571 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070684461 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066352618 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066102989 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065256648 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059916959 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067568846 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067823745 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066373615 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062622396 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065520669 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066196932 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069256364 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068493575 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063240853 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06696953 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066948834 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066144587 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060737758 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071943945 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064294588 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067332488 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065104831 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065604137 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065986745 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068794964 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069951 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066382901 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068119907 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068915094 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067490335 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063490358 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062909053 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070974382 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06402921 seconds)
  done (took 42.041311612 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099111577 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062051076 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062046196 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061356052 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072500085 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062372324 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061572205 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062132382 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062214716 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064428769 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06109223 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061093251 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070003717 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076710272 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072644963 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065461184 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061129389 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061951488 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060950817 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06235236 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069736843 seconds)
  done (took 2.739235377 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073293903 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.068277119 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072120875 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074373529 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066410207 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069666746 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07154651 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069431167 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075089848 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066080968 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074869024 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069521795 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06606923 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065941086 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074626376 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069696668 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074691277 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066367666 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.0696467 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07130229 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069609605 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071558398 seconds)
  done (took 2.87522355 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066611878 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064841257 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067294817 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060307503 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06516028 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060657448 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068662651 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062814864 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068604426 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065058573 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064441749 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06433165 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066927266 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060299856 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065070182 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063141754 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106254526 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068088706 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065099308 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065731995 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060578845 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066770767 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061232319 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060875802 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063917648 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067995025 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065378318 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06350364 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064474131 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064346277 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064516661 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062633407 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066594293 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065357405 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064233532 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063934787 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064386055 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064720445 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060638397 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063363412 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065428292 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060762062 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06496802 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066089449 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063118602 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062769507 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066155698 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064563785 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060020151 seconds)
  done (took 4.520129044 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080464298 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106978215 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066871819 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087089504 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078714706 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074156287 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068473387 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088283526 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062436117 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063372856 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080153001 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078055008 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064747197 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.0692944 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071633666 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064985864 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065554185 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064059298 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068222986 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063881025 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068833777 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071037664 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078644071 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077387144 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068156394 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063879811 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064327695 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069156764 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07703912 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068642891 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069034402 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070042224 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.0791606 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070227521 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063832848 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066503525 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080013138 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064809104 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06699217 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062486668 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066509078 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068827238 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070941345 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08065985 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065286161 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069569741 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064488702 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061817724 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076668924 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066914452 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071865218 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078319355 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068365899 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064863933 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068726024 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079541419 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064641908 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062861757 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067254015 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076365436 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062148795 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067825246 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077852368 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06636104 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071313432 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077897346 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069704391 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067984683 seconds)
  done (took 6.280949279 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075395919 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071137727 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079503702 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078749071 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071166897 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071432123 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071148928 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070944192 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070957133 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07570512 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071151208 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091947584 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066831676 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07405454 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071169343 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071090866 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071757449 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071038136 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071276893 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070997522 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071831727 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07838628 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071078236 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079233846 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097285079 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06652302 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07069415 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071052912 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078724032 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071187253 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078434912 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071139719 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071406522 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079110701 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078265323 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071037454 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064104917 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0707823 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071005509 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070943171 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066803999 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079107802 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070654371 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066697671 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071335358 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070812603 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078668266 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078568769 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073436433 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075537073 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071025315 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078701756 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070447526 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070883473 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078322405 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103131732 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078607796 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078573075 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070809099 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078403058 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078521536 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084898059 seconds)
  done (took 5.970243061 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083843769 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073197151 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074924686 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06065137 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063176175 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068634167 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063235851 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063233025 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073521333 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073623115 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075555637 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068572131 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071620205 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075472082 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068834316 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071654211 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0687145 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068715558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07316914 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068620744 seconds)
  done (took 2.755716032 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075318347 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082368183 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065990312 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071004556 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067680379 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070394949 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067397247 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068519712 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065763814 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067989604 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074898585 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074770748 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06594721 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070546399 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074513793 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070537365 seconds)
  done (took 2.472413779 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075685034 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072775015 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07819929 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06544268 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063303421 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061971276 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065310044 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060639673 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061567204 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076739936 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064851275 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06725613 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064911357 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064358662 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061873752 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067859163 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061499195 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062976136 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064935033 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076925682 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075933026 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063483307 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065355763 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06528312 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065163764 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069872228 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064645371 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063212366 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062752391 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065450804 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06551187 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068778284 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06272909 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063044233 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063822054 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062805631 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064588428 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065296116 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067493739 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064705409 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063309673 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064978278 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064808971 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065568981 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061277468 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064883172 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061260169 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.0666408 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062903787 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064889698 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064827966 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066951021 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065254307 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071488751 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067459617 seconds)
  done (took 4.965635847 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078821785 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068138882 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061054224 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063230155 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067868327 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066840704 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068565096 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066659387 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066788744 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063349304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06665286 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067552518 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067373273 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068327195 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067315145 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068936107 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060900958 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066731158 seconds)
  done (took 2.558884063 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071579116 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065624284 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071713702 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064797116 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065887532 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06714408 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061383982 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063721438 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063747139 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064882836 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065351784 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067298707 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063816487 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067414782 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064949523 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064844891 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067551215 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063882478 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065030395 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061057827 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067701171 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063605236 seconds)
  done (took 2.788303968 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072786543 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090886591 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136470984 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082615483 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080489117 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077498148 seconds)
  done (took 1.886146914 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089408201 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077660968 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066233403 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086703197 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072238854 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066207789 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066359741 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067012232 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075243294 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075136588 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066455879 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075019901 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074547314 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074151519 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071917484 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071795626 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066330985 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066711474 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06583046 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08280251 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06647316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074433161 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066370187 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066219159 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066697662 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074176723 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075029258 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074846558 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06606767 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074704664 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072128983 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066309251 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074757811 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074880282 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067763944 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074925958 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066609894 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082766629 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071687821 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073954747 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068247038 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072672624 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075062262 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071108866 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075168759 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066698276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071238659 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066543058 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067045094 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084655866 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072403723 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074027233 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07217203 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074933022 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075099991 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084490137 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075053297 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074088057 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072089954 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077320482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074137366 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072478349 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073754093 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074858752 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072408735 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073943132 seconds)
  done (took 6.151923506 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081201892 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085053745 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066930911 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075462941 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074170548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066654102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066496159 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066989536 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066647485 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066656564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106062018 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067151964 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074229879 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07446849 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066974271 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066902679 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066745711 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074276552 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066297767 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084941469 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066619232 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07428052 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074123082 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074027855 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075089904 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072208664 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066488393 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066890672 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066683955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066525342 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071446147 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066901249 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074537165 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066034321 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074326285 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066670089 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066491204 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071171038 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06691206 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07228803 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074401224 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082363836 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066984022 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066351921 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07520212 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066639761 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066455457 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066808899 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066697965 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066347842 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07570732 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074765466 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075394102 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074151883 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066679882 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066415055 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066276214 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066331613 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066823186 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072148508 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074188491 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066585342 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084868159 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066353051 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066776532 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074240075 seconds)
  done (took 6.068002493 seconds)
done (took 127.662331186 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183683829 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169296346 seconds)
  done (took 1.696743112 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067726341 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095643393 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076390174 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127475218 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065816715 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098313497 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098036265 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077008053 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065304338 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065303648 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065433571 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066974577 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129839167 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065978267 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06515097 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06724846 seconds)
  done (took 2.653227834 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095846707 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15576481 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098858291 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064546147 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095527264 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071980437 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063742485 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074204538 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070292012 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064450033 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071879189 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069782351 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064335653 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069736801 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070038473 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071913803 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064591988 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072137134 seconds)
  done (took 2.769305134 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100929589 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089960498 seconds)
  done (took 1.551997708 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155998632 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104236043 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148384688 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341108712 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165333927 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.233662253 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125854804 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126458057 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114947282 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122921851 seconds)
  done (took 2.995276045 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100512577 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15010445 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.252696188 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114193263 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071648984 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093489327 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116551877 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07680135 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079890709 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079556041 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079644652 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075119181 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097943837 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072630208 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073485585 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075124991 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101528078 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071738015 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073435534 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07603654 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098512649 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065337329 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072918262 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072115644 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077285702 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076962288 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065093128 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064998895 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076573873 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073182765 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076687731 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092202198 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076519857 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105309706 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069304176 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106481142 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075497501 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073623123 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072719744 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073266428 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078121748 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077783638 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071092714 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075007385 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064664522 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075582861 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064541063 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064997182 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077111869 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066195884 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076927739 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076025363 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105219815 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065658134 seconds)
  done (took 5.92445788 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101986774 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103751378 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071490885 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107826516 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096155647 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071064525 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099183958 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09038198 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.100744893 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091511716 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087944591 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070217398 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080970997 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082588476 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108606391 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100884114 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094426599 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070494553 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100423513 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102176629 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067854443 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093942698 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089738682 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099932992 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066670492 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069854317 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067536281 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070184091 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076015051 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07712222 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06950731 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.100271736 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08345417 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077149125 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066295341 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067778157 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067612945 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077595067 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095795448 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077683612 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076306518 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06698153 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06777111 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068680682 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089632203 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066384994 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07733544 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078752747 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077351151 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069019831 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069955048 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067209536 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069149278 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078777637 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076013439 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079071171 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078641484 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067579677 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067895492 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070988127 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079335286 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077681186 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077866838 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091400044 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077919229 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068100472 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079255734 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084219194 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068030999 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069539648 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068263802 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069901096 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06964873 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07683976 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077238944 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069545147 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069325333 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068057142 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079202848 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077829189 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067906853 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076249271 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066843404 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068159136 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069834903 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069597849 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07633902 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078533777 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069501922 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067467123 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06895772 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067675582 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066389006 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074431596 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077732688 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076152914 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075783528 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067880519 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076242252 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076260608 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068991441 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076473282 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067144578 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19721914 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069965916 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078344317 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07754925 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078617495 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0702486 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068024132 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077093099 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07996249 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069265548 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077487833 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080215577 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078592095 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067467528 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080793561 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068565528 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079095097 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070418179 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07952807 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068865274 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07810949 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068850443 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067597664 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06842421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078200075 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069847726 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069074839 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069444313 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069347507 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078905787 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081760188 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070618766 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08093063 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077883489 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069981085 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077785827 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068484672 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078180919 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069811835 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070159565 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067142964 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081586228 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068003278 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068647542 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069714197 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080302127 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068423134 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078660987 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07710654 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066770572 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080217683 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079027272 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076176668 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078948472 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070292138 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068640953 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068605116 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07038389 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077581843 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079053114 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070662852 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068636339 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077024385 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079214434 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066962979 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077589321 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076874005 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07730916 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067926647 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069288829 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079078513 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079708971 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077406562 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076669144 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077212827 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067708108 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076255781 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077036677 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067526865 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082694156 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067445016 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081409291 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078121905 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075411988 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077540937 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07933041 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079153357 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078518045 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081348318 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066920432 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067981608 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078185633 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068024554 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068775426 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076613316 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069463886 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068746111 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08048766 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066775978 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076500494 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065483536 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075978096 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065468119 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068237906 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080257639 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066958162 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.199222503 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07918763 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069854839 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077420234 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080786245 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077790919 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06876215 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070344737 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079056361 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078393166 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068508193 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068263829 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07079249 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077355645 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076982496 seconds)
  done (took 18.594861734 seconds)
done (took 37.55790421 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207446623 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149163669 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202414233 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116742937 seconds)
  done (took 2.136641258 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121293501 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099668172 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093681769 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064014425 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10007411 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064223027 seconds)
  done (took 1.947374559 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312330392 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215643168 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179865119 seconds)
  done (took 2.108047456 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195186121 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18535786 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.390202751 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250069124 seconds)
  done (took 2.529243813 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140710037 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087909337 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066299951 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082112153 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132352618 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158499235 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099665027 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124243717 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076974289 seconds)
  done (took 2.425098301 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142914611 seconds)
done (took 12.687257635 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.243749636 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.198050547 seconds)
    (3/309) benchmarking ("sort", Float64, false)...
    done (took 0.1434867 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072910876 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.217877756 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070258002 seconds)
    (7/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.1811147 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.228863378 seconds)
    (9/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099294434 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076342873 seconds)
    (11/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.171756758 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.184622423 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.134387662 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072968217 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.145567816 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097484442 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.158943777 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073041723 seconds)
    (19/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.205830531 seconds)
    (20/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075753801 seconds)
    (21/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067734794 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.18370427 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.108489586 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072181559 seconds)
    (25/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.147097215 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.215453911 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.2282782 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121294291 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128429481 seconds)
    (30/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182963775 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.087742483 seconds)
    (32/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.181788473 seconds)
    (33/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068832604 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133879923 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070981417 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087883129 seconds)
    (37/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.110340677 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094629749 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.176067102 seconds)
    (40/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.137960535 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088739033 seconds)
    (42/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.205352594 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073441096 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064230671 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.137754983 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076662128 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095770585 seconds)
    (48/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108777698 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080097699 seconds)
    (50/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070910103 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073895637 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071877327 seconds)
    (53/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074143177 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090359725 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115658169 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090736977 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.18380894 seconds)
    (58/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.149360818 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086430664 seconds)
    (60/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.186323996 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074896835 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070888245 seconds)
    (63/309) benchmarking ("sort", Int8, false)...
    done (took 0.138696704 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066203564 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070712715 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092824446 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120810792 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.074577196 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087695569 seconds)
    (70/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.061894648 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071458408 seconds)
    (72/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077579674 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078627936 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069646418 seconds)
    (75/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105393347 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.136719429 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068686627 seconds)
    (78/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076236813 seconds)
    (79/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051636881 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.208096216 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.156560491 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.09810033 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.066744169 seconds)
    (84/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099746042 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071622115 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.175127587 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15263824 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065113507 seconds)
    (89/309) benchmarking ("sort", BigInt, false)...
    done (took 0.18417478 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065543166 seconds)
    (91/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061919332 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133436017 seconds)
    (93/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051357711 seconds)
    (94/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075168304 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100541037 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091121933 seconds)
    (97/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073486149 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114931879 seconds)
    (99/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050886106 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169782077 seconds)
    (101/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068871665 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05088485 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169258726 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.187956568 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086507696 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.180076754 seconds)
    (107/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07408654 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120570475 seconds)
    (109/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065284865 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065099799 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.309654786 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150686018 seconds)
    (113/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.09858614 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.158731764 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088020596 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052097843 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08213421 seconds)
    (118/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051004718 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135126775 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052399996 seconds)
    (121/309) benchmarking ("sort", Float32, false)...
    done (took 0.126018308 seconds)
    (122/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.09832413 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052483595 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085245009 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174179162 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065608728 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.168212407 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05116548 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050565921 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148223805 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.132259603 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07223054 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.150042288 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064214836 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051696467 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088024812 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070881053 seconds)
    (138/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071706878 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069714665 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070856907 seconds)
    (141/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051743017 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067094393 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089771213 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078289369 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064521431 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.075034691 seconds)
    (147/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085812139 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087838933 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071305839 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07122468 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146804088 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07031208 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065119383 seconds)
    (154/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053133458 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064714274 seconds)
    (156/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061560921 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064327961 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071833387 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076390664 seconds)
    (160/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069068565 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051357469 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073486407 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065079727 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072923172 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077973192 seconds)
    (166/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079618471 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071588733 seconds)
    (168/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107213341 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064666026 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107156804 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066880195 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051644427 seconds)
    (173/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051582846 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.151023526 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050611149 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052389692 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093863383 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072982329 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064508233 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129377652 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.103015296 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133407148 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.059860091 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171891204 seconds)
    (185/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07788469 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070614811 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063968456 seconds)
    (188/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199322432 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066711676 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075811767 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074330416 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138626991 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073002166 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070781332 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.176896854 seconds)
    (196/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113602302 seconds)
    (197/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053577753 seconds)
    (198/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108242766 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067239883 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067310193 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065304143 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088728864 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063690324 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051330888 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066248181 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05122269 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051169851 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071888529 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151512478 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051160949 seconds)
    (211/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070525045 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051103419 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075157819 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138191904 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155650632 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072243746 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07396333 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08765371 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064013954 seconds)
    (220/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051874367 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098524642 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054351231 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087573132 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052477881 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095407199 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072983921 seconds)
    (227/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052312592 seconds)
    (228/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062074514 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051808463 seconds)
    (230/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05112808 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164859103 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070754073 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064684266 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133725956 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065739169 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051009362 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06654573 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063939422 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051981544 seconds)
    (240/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052380706 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050463424 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050577977 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085412921 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131315015 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098954985 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093328566 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089171489 seconds)
    (248/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072371547 seconds)
    (249/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087728688 seconds)
    (250/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071681104 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071478005 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074428543 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051945403 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064143656 seconds)
    (255/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066180357 seconds)
    (256/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061627798 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050749566 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078152593 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074246975 seconds)
    (260/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070904256 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066706596 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065319717 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06415081 seconds)
    (264/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050850778 seconds)
    (265/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065961815 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065732284 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149056769 seconds)
    (268/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061050272 seconds)
    (269/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051205704 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065428832 seconds)
    (271/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066056265 seconds)
    (272/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117631836 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071197819 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088277218 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072587438 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067209149 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051089877 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050993636 seconds)
    (279/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067644293 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066376564 seconds)
    (281/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071195339 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064738474 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077107836 seconds)
    (284/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074468522 seconds)
    (285/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051187398 seconds)
    (286/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051839853 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087323444 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06637908 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071675529 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050715251 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063061339 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052422595 seconds)
    (293/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065664335 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063600301 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063285782 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071970245 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052234622 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051672992 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070256118 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105401016 seconds)
    (301/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050914744 seconds)
    (302/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05071798 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064971379 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067620108 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.0701622 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067145631 seconds)
    (307/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051413805 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069752957 seconds)
    (309/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051230503 seconds)
  done (took 30.249444425 seconds)
done (took 31.665286897 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08950175 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093436831 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075920674 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093955338 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081339911 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077007345 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072794858 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07865559 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080537435 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082066257 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079165635 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055474763 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074068407 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074359109 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074421882 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091313314 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077844992 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072885025 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072665926 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064588699 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072627613 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065366839 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06707712 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054626539 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077134801 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071597648 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071671387 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073581754 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065344664 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065510889 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068480127 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07280368 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065129542 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077519125 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072259092 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07240292 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074132403 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076041825 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067197191 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065798272 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074142249 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065974045 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072471796 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073199241 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071194475 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071063855 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072928417 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077287231 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090436881 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067822155 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074075943 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075299206 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07552508 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072345287 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069146593 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072719947 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07030777 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090520646 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072890982 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067625282 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073531989 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073293906 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07096486 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07291088 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072600578 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074680153 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074815875 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070731947 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074140959 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070787009 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065479674 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072962548 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068528583 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065623701 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075109008 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076212484 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064291199 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070819353 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072017566 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070954252 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064681725 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067101289 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066927881 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070753388 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066936723 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054328542 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068503306 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070958648 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06442891 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072494388 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071086191 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071799122 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066524249 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074683949 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06424185 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069806772 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06496381 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065009746 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066755968 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068526757 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064765116 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067222742 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073407227 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066285874 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070823831 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078430094 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064709481 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071125931 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06398318 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063992141 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078763826 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073781115 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065012938 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067421436 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064187358 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071825766 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063814549 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064578867 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06448294 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064568155 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070247384 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064387613 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06613843 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070588621 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075630817 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06390493 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067209669 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065893294 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063321666 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068736602 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06349791 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06356333 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199496403 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062048768 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068585666 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065991643 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073592469 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067323853 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072594021 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067457871 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074036641 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070001164 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070590309 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071099822 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064356594 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058693831 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06834708 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068199852 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067751874 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066446759 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066964481 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065923139 seconds)
done (took 12.422699911 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069623508 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142360742 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097879755 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094531353 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085113218 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066184718 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075705116 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101467468 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067332729 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10136326 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086607081 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084326902 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111198987 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064294266 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065247785 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069286461 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067067684 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081273606 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100500798 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085969501 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108653184 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065372102 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09376433 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089627579 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086404018 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100654835 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066903068 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069615103 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069548259 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090138983 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085919748 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069656609 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.0662502 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099545362 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091540813 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08255156 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066086033 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081712074 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066262563 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065374121 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080379023 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097242082 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079176157 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079444029 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069542691 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068708451 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066536665 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082478397 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088038042 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077803746 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086095265 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102281595 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06846712 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065081415 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064015897 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.0845986 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064860121 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068199941 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065647402 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067827196 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065702383 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068660793 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080455096 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085783561 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069251368 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079671907 seconds)
  done (took 6.778109616 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085537891 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089734429 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083421401 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083510619 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06548635 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065740442 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066379995 seconds)
  done (took 2.041964097 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068865552 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087404824 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088746848 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089080032 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083689228 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086491086 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075342878 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066124506 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080079811 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067440505 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08643793 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100813839 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066640161 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072547617 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09007237 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066418247 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090171876 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066245028 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069024428 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089436275 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067810573 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081559693 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069469943 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066735293 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080000465 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066360813 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111600132 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070433387 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067912499 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069503304 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064242684 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105311661 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079765448 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075356949 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066172071 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080795833 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080082046 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06410372 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081694626 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070583065 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079187886 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066126312 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066629054 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063791729 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069994147 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075813015 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066481281 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06662391 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068501653 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085509559 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066411453 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079015791 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070323147 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068223477 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066995184 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069238291 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075370092 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066708818 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085240172 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067015922 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081963645 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081577116 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079326875 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081586349 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068070671 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079135566 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079633981 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068480511 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067932747 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06954456 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081909097 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064588837 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06803077 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076561892 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068302734 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088380051 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088036113 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066986832 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074769775 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066675485 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065906514 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066272512 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087908993 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067975363 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065235269 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06993128 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068797957 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063894606 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064718493 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069135415 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063956852 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067137999 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0682816 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068774547 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068149345 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081710188 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068444073 seconds)
  done (took 8.703324465 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070722691 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067726636 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069094659 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066840505 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067437381 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067344396 seconds)
  done (took 1.932326889 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094581382 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068871983 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079681314 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072382235 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103708713 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085895261 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08658813 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077744133 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083283087 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078160793 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085923699 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087427501 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091521457 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07205763 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085357758 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071522698 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086363103 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074834606 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077561687 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072368014 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086378142 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072159127 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072259159 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080627902 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074867858 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071777125 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066839555 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078226104 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077622487 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078259364 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071756284 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074705824 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070088809 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077705815 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086243122 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069797991 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071283295 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076657562 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071730311 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074920929 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087403729 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072353218 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073950708 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076429528 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077910923 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069943934 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076708222 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075329075 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085833031 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076661696 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076451908 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070652814 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074132746 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075965112 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070038078 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077062168 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07623315 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085756216 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071835389 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069479836 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068293631 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074520303 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077165338 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074195437 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077512729 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075888383 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069590865 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071545719 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071934007 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070642942 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076404118 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06832372 seconds)
  done (took 7.036958081 seconds)
done (took 27.986791512 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546438572 seconds)
  done (took 2.034398284 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619305212 seconds)
  done (took 2.132661156 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.674570705 seconds)
  done (took 8.185894872 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.382904735 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.465560277 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.706808682 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130050528 seconds)
  done (took 3.229215081 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.674918331 seconds)
  done (took 2.196138663 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21002447 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195387683 seconds)
  done (took 1.934391036 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37817239 seconds)
  done (took 1.890306159 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.104656436 seconds)
  done (took 2.617632014 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262419359 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161406913 seconds)
  done (took 1.944718218 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460092866 seconds)
  done (took 1.977940633 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.892490377 seconds)
  done (took 6.411478843 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205644665 seconds)
  done (took 1.771191803 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242619981 seconds)
  done (took 1.764417973 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.720378983 seconds)
  done (took 3.239837001 seconds)
done (took 42.852159648 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082035182 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080385742 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080186796 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077232875 seconds)
  done (took 1.825130358 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078619154 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072397436 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07629131 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072442972 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076553286 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071800202 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073706728 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076347874 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07197471 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07250096 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07201357 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072136008 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074433703 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073469679 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071007003 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074446499 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075400295 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072253291 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074851855 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072184147 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070467119 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074191933 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074252193 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071753555 seconds)
  done (took 3.288731682 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079325814 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073274751 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073938428 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071623717 seconds)
  done (took 1.829473266 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07862487 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091725321 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089368219 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077251918 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091692414 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08588434 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068698528 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068636022 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073220054 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.0769901 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067745669 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095259987 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087147206 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076569633 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079255371 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06591571 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068101271 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086074194 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076769996 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076969006 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069371955 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076844251 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067771478 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087594577 seconds)
  done (took 3.409665899 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078794524 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102237646 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076481111 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087627011 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08921273 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065126518 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074348329 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08895029 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122595943 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065128833 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070273445 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065273063 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07184176 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065077489 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075734877 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104504263 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107947941 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068332305 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095508096 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065591688 seconds)
  done (took 3.178441152 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07454082 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069597523 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066299501 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068643797 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077553799 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072803007 seconds)
  done (took 1.970220617 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069484733 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067999037 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066570795 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066863561 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071696097 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066967395 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065658558 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066715751 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066897715 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066448399 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066332617 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065509635 seconds)
  done (took 2.34161911 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.415929496 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068295639 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069848912 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065663998 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070272389 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066134677 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079303822 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067723867 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090413865 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066547614 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066432617 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067984352 seconds)
  done (took 2.729973526 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206544608 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07589561 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234557552 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136145173 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11044627 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114990583 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103251069 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112144773 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142161813 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100959948 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166695857 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164240766 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106447645 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136636467 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088540444 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097401292 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154231596 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160569997 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102554872 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16442587 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142423853 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123369461 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146301622 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101181657 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105720971 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121042908 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070861224 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079952533 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168152798 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130509458 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144896752 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110046848 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093561681 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174905612 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168985481 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141915218 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133478203 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083113581 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101248755 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133954885 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196077914 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087032207 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159632462 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244567104 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081627466 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133648712 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120137928 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119042853 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106169825 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089344248 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14519843 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179837159 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137345534 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087354901 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112401337 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113940708 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115471496 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103189369 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180307268 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160871878 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126587185 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071036339 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09829736 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152106247 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130775011 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108843919 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126766343 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0929119 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132872164 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153964365 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117952271 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142717492 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128373999 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088290637 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118663963 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13898903 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127550515 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168676225 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123577277 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072963798 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12397093 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103146308 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081197102 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142284747 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075360768 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173573154 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097429597 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105572189 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11206258 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108096256 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107775915 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158122349 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140538795 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242545365 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067165049 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103378544 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120123708 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147183424 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087488139 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108028272 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11630337 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077929485 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138415233 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075359932 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123161713 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076018916 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125909696 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131754786 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075459908 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121997689 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100889903 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100797133 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13208182 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158436758 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088151215 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081366223 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165720912 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121739311 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10444551 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142679359 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154674664 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098857403 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102763025 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147928626 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17785563 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089180838 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161321865 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106740891 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083351986 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086968493 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123240787 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111593434 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121324481 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082211599 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117788998 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168027089 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074943769 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094625249 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132607225 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07882087 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080448832 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102055019 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099065486 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093872961 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099171907 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102922196 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135260753 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121457377 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103475125 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267760795 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098569522 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168770322 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089559825 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099950914 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103276331 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069581996 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135609676 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156396841 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079602593 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162387935 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123423236 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104317718 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11855728 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08326792 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138515614 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078336162 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069586095 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142967232 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111666472 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110977602 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15058937 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104271154 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126659911 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11874028 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133799652 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132100246 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128935165 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105000851 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088654827 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111215255 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125351547 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072775207 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091424153 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079728683 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103429752 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094988537 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08285049 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141235422 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123511341 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099913431 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111160954 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096100862 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146564008 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076014939 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127549318 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118666886 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093353093 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149990338 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150511321 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130133947 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098194817 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142277281 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069404195 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0730651 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087844524 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266254412 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08397427 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08464172 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117839837 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147262066 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129435539 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139330288 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111666204 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120740185 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154440816 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068973216 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116553082 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146814498 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120609922 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103366507 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090307437 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098830958 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142190611 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107492042 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181845106 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11383852 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125666292 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152333679 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104543609 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079837454 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102690969 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135117048 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103655134 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144453446 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099055073 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088556244 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109056839 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074343712 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099544176 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125949964 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118699997 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134344601 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114442169 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131488471 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077206357 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115902424 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119760488 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121537474 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064127346 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11905714 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158795449 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093199351 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117250188 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15068738 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078365674 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123009636 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318863662 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146632194 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085170588 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109568584 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11863585 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128019636 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121258511 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139007268 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108378664 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135617941 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108048483 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08681073 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088034766 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09696541 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104371229 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094100765 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10695419 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113881661 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094744822 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131049414 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102864464 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109772364 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117126194 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096492745 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090003972 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096519712 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173458994 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119235926 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169548082 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098346181 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143324529 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162432813 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07438405 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079090312 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078047986 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1386784 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083344601 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130127835 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097365512 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104767245 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123282629 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141191974 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094522182 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068331798 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10770785 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132939462 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111377183 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097750507 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103926063 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160562072 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09944632 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078620139 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112431577 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103456112 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101281413 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16735835 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060527669 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241439773 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07648753 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082301916 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12816399 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152565667 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080260547 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102579553 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118368056 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109312802 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127510245 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101263337 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098854136 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11383481 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148608511 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128436909 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089756741 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111800321 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129367836 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155538366 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121809497 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095398623 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170665065 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150736117 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159122182 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088319724 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113581923 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112955038 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107585998 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138279746 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083284774 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162675063 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081244145 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134854828 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103264814 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089344287 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128757722 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09843419 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087767305 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146879673 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116570419 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081983455 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077370975 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116715296 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119420059 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105724347 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074674905 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136616773 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072186235 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130457749 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166111891 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080175087 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102804575 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239889787 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080268726 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109086624 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102831209 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089666435 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098599603 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172103951 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08765241 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149436013 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140549893 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112717275 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136178711 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099644494 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635132081 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077986924 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152748662 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115950369 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170258065 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096880334 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11662151 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109671992 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122843316 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143548497 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104723003 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180334522 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131307511 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115699622 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079602516 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101789924 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102312235 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088179018 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10419091 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112690932 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114879513 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092952483 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114817355 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122502329 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081484706 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09442117 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154886648 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116042081 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143106499 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139090519 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084622626 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117195293 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136455239 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079160077 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119899453 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149581261 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104585688 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096522812 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079073541 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.245340608 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170320422 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073685109 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16078182 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11988564 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110046824 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113432971 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113776903 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13093636 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108047596 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121391135 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093334722 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110130459 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11196841 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081723719 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076616338 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103659399 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112633935 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097001982 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09810199 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097087932 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150316151 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070884394 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095271278 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102653477 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144532225 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172260726 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088157616 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082445035 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118397159 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112366271 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112359084 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120771807 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079198201 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082254149 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081747971 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076850372 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108070568 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111904396 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103729219 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110473244 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163637755 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082657251 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226264437 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09451187 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104290026 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069668309 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077981857 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09513494 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096390481 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107806142 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100042512 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168653257 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093592545 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088615194 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09066489 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072554706 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081415538 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124854926 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25605147 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118867265 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098346204 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063394727 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108797226 seconds)
  done (took 58.565179291 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109581921 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082581393 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096413628 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149744421 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121714531 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211505538 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156642741 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198918051 seconds)
  done (took 2.772731872 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07056815 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094132173 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100195879 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082310647 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066794278 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070118775 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224118843 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081772122 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066389501 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088190064 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082807325 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069853287 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422099137 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065709184 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068718092 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063888545 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067078151 seconds)
  done (took 3.422718638 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379352978 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.36063748 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371767408 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073270413 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.890135196 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088893424 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.078685459 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096315285 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071757506 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.279391008 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701901286 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.095396932 seconds)
  done (took 14.136834114 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078672627 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070301197 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083446649 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083774917 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072388952 seconds)
  done (took 2.032771666 seconds)
done (took 103.086286801 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082663703 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390824979 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053624335 seconds)
  done (took 2.117510089 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085575418 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084882657 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084735931 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082750863 seconds)
  done (took 1.991529254 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076909888 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076736583 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083823783 seconds)
  done (took 1.884458992 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222270645 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139274871 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087130554 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083753254 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078058944 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077530988 seconds)
  done (took 1.893396075 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074160254 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074234789 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073112278 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076592354 seconds)
  done (took 1.947174522 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078599289 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053024729 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05530005 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055902222 seconds)
  done (took 1.892384275 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08851719 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079581395 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078283696 seconds)
  done (took 1.895764499 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109904771 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085367426 seconds)
  done (took 1.844428631 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0834521 seconds)
  done (took 1.735442552 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101630658 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112824669 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128500681 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108726478 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135929119 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108106008 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085177962 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08594777 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076639464 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086690932 seconds)
  done (took 2.68127998 seconds)
done (took 22.05955251 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080604789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378785524 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360335326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091073916 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667154227 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356023368 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.022538534 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091753996 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112868301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067384399 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08364068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649578945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975690103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317748381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959078213 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323179812 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.665404201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06830636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067521679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067500054 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007808688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067723422 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067917072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068362503 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652386719 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370396512 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068167921 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324095016 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067847042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069451273 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354795882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06763956 seconds)
  done (took 16.227135327 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072029574 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117631692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073345055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083556062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070351608 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06949084 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071327884 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069164753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119235417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067800599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084481795 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067687 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071693256 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068474654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087448166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067828205 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068580595 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068401334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067966624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068394568 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086454552 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067761259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067841504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06868286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068000486 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078981669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068053293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067854181 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068080006 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069723429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070818666 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068624015 seconds)
  done (took 4.050860729 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116997742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124798554 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074624982 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102610349 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112558872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070078295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143758226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092639665 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127744955 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067683865 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084326948 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068418498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100622146 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068464321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087388467 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068700956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069242089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069150067 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068378269 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068732196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087130407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067834842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068776789 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068967791 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068432001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081153309 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068602439 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068545521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06870538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070341614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071549192 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068691268 seconds)
  done (took 4.312789395 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074691163 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075133242 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082316972 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083834449 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069071932 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072390634 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072800004 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06949076 seconds)
  done (took 2.26940336 seconds)
done (took 28.51958129 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081523744 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069126666 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072685369 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081241205 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072785687 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078160869 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06719152 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074454249 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072154986 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072817699 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074801491 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067749285 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071000806 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067464457 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073908135 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067718208 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079351324 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07170197 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079010095 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079398479 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069795727 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072846125 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074145994 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079466962 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079120729 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079064998 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077405921 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07267131 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069246029 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070876299 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076795647 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083788877 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068456085 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079107088 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068049487 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068097076 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07132949 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068210694 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079223861 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076629804 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069383521 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075889351 seconds)
  done (took 4.749635934 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090216299 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090938541 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08399985 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061823593 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066818879 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064674113 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088327209 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.05950569 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059955135 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087458322 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055970789 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059195554 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062273282 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053999471 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059241477 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057248184 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061771988 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056189562 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058849787 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059258713 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057941721 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054095679 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060407437 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065493782 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056647389 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062158199 seconds)
  done (took 3.369964391 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.088125785 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084475923 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088074789 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126560022 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103993975 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076907317 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077814315 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091744768 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08512343 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066844673 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07079986 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093965191 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08831437 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073519504 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067716743 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084082499 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081436686 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069118285 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073342558 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090857265 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084050287 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083590347 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092728941 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080580348 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066863963 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069358347 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071003426 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081288305 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072713609 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076713821 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071313238 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071316041 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069321262 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078914533 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071494918 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069496746 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090311624 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07715365 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077761587 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067936027 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070787372 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068764836 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089566586 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122557292 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066815624 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074225204 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074879368 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076828411 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067334555 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085848279 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078172102 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067146226 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070002001 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066295876 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067560344 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080260993 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069371036 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069666087 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076650796 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070396906 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085792777 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071343597 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082568628 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06694796 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075073713 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066881941 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067993186 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.0668224 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092281296 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068635996 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108238814 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068436497 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068387076 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075844832 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075312936 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073274071 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067992794 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082128672 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077367191 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07083843 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075435391 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.0707663 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070197771 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087213818 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069470974 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06865568 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06848966 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073198536 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070182026 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068633447 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080434536 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067291598 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070313952 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083978259 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067338504 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068518919 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07325499 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071974748 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066912757 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078237742 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071934324 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068143147 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076476914 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067317619 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070550161 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077496082 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073786306 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066492877 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072370391 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073472125 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06843923 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06896905 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069915287 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06862856 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076377313 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07390393 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07156693 seconds)
  done (took 10.576178777 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163146854 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153962187 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070366988 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144425306 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076754608 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078537644 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149167801 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093870316 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067460079 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068365912 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068780106 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11554502 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105251376 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121792745 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07837226 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067928631 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082984222 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117217344 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148445866 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142456086 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083290866 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076423091 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069841003 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068916469 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074628162 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082656725 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090999324 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077124079 seconds)
  done (took 4.446351593 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084393381 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101160155 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074084024 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088588532 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090253178 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067870892 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069879082 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069355726 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080670374 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078263889 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067642366 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073339383 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074626796 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074041334 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068631479 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074613286 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075042024 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069627122 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070804357 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072746124 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.0774482 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080584882 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072140315 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.0672392 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074017934 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067083498 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06441146 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083861914 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068057417 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089927259 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065615432 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074684884 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081193402 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068525771 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067804726 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067785176 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067737009 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067179263 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069114243 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066021309 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066074432 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057529379 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066435495 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078826419 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073946282 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056937638 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072317005 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072538839 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072821465 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065567143 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07025 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07008438 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070993062 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074646887 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072360853 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072613217 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068572217 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065549574 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075529543 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067384427 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065064929 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065899435 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071792843 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065759911 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075325835 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07168892 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066119834 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067032607 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069397632 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073298952 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.0671527 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070244585 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065048223 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069293594 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071899046 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068893365 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068514361 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065712753 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067379541 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067617946 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055497346 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067133476 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053634577 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070566073 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065349421 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065828409 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067226369 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072220812 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079166598 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068704307 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073012809 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068385819 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06639345 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070696046 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060358639 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070142024 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082301697 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082302442 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067183282 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06534624 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081932312 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072001227 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066611572 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056103387 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07456629 seconds)
  done (took 9.151833552 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096470917 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089635103 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070006998 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08263848 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091181812 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085942535 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075315524 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076617387 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069446388 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081989134 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073393977 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076098404 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06783773 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077451712 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093407041 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07664951 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06981194 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07660954 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072039364 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099863765 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082494719 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082012522 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074759764 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068146817 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076017134 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079816111 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089063998 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079976439 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078810031 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075718104 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079464239 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089163168 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.07420141 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072306971 seconds)
  done (took 4.419549107 seconds)
done (took 38.377510991 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.751297639 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.91663346 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.741923178 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.100232834 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.828024216 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.030750364 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.838066509 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.740400365 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.975956449 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.777738382 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.977749847 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.777901513 seconds)
done (took 65.140573531 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.773856996 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.883886337 seconds)
    (2/2) benchmarking "String"...
    done (took 2.018933102 seconds)
  done (took 5.583865559 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.117684328 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.27475076 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.988787791 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.741499649 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.748292687 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.049516333 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.547326051 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.263502994 seconds)
  done (took 30.295381078 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.918687324 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.944483339 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.403055386 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.437189415 seconds)
  done (took 15.429688912 seconds)
done (took 62.96388436 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.761135383 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.749567678 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.746919116 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.727622209 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.80155262 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.766090837 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.908223526 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.978481036 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.740999306 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.735988956 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.744706098 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.184506058 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.746165119 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.072789855 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.743159019 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.748723551 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.763891716 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.207805627 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.902140204 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.750473925 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.763402015 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.797319104 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.743619213 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.745009175 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.761180675 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.745091492 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.173575419 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.750482417 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.370434976 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.745762326 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.773618922 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.157657193 seconds)
  done (took 203.988037963 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.744752431 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.955322915 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.952904495 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.783385809 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.245887433 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.939728888 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.883081739 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.29790974 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.749301661 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.77252942 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.071492841 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.743123098 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.028231825 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.729670613 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.752348755 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.750543468 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.018414345 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.031142988 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.72147508 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.02421221 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.765339475 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.928313802 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.905254052 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.030558467 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.787436686 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.764824395 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.886347634 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.753405067 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.934544068 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.009044968 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.76689232 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.747825617 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.963964331 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.614956063 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.76597792 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.762281567 seconds)
  done (took 170.264651533 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.155210854 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.744866336 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.745279981 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.745766863 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.75744672 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.744747489 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.868544209 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876527341 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.209636079 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.258199959 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.797791186 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.581918503 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.744762207 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812870243 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.757348774 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.74712109 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.745639947 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.760737639 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.77387677 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.749390306 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.747403028 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.871520892 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.755558037 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.959032656 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.751212282 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.74939115 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.752763067 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.115959198 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745711268 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.751652363 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.006831157 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.745547988 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.747506313 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.644240563 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.084215302 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.750408887 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83071763 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.746357696 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752916385 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.749084689 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.967235747 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.746083922 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.747471562 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.751149545 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922644558 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.744102989 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.872432306 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.745226349 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.24944344 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.74443087 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.746695181 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.398816106 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.432450865 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.749916423 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.746951262 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.749330867 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.74715996 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.747404284 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.754255201 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.35219473 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.821692306 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.751796248 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.75174255 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.754030019 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.748666096 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.775666554 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.751117016 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.859843654 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.804490197 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.973490093 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.87165347 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.750167048 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.817452671 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841822435 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.746333159 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.748299849 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.748983138 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.748230151 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.830130817 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.748362015 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.875089021 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754363742 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.750518853 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.799398108 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.816368633 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.747636849 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639765689 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.75110976 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.748671526 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.063343549 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814610803 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.747928209 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.749701296 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.750122474 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.749172531 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.876504586 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.874350043 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.529581041 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.750684748 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.409868655 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.75202284 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.886765658 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.748183173 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.938739531 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.750430403 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.749549248 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831329942 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.752096387 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.750812049 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.748790449 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.782072971 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.750112514 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.808716642 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.752522406 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.120655759 seconds)
  done (took 399.457645114 seconds)
done (took 777.600653138 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.412821277 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.378666308 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.490423591 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.403798347 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.383748026 seconds)
  done (took 13.754565069 seconds)
done (took 15.440611395 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.835753019 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.839846526 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.774202412 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.841348594 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769444191 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.838654165 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.819086855 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.775014754 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.806648796 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.77440065 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.806339109 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774366895 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.761620472 seconds)
  done (took 25.102536126 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987733383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.983397327 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.819183367 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.981422732 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.795582061 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989150849 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.913469851 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.899946139 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.90625836 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.763634847 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762249566 seconds)
  done (took 22.490582356 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.985115905 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.982066925 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.822157364 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.994601776 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79596374 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.988895062 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.911866015 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.904622334 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.900538127 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766201599 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762906107 seconds)
  done (took 22.502202821 seconds)
done (took 71.785177401 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.761027018 seconds)
  done (took 3.447364284 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.778678327 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.918791788 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.762496533 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.761993003 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.761018255 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.761088377 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.762216312 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.759281821 seconds)
  done (took 15.956015348 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.755037952 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.755973092 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.758847356 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.757539415 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.755468228 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.758972965 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.756955235 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.759493754 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.756927433 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.755452665 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.758657286 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.758155505 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.756201316 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.759217228 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.760381728 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.761086163 seconds)
  done (took 29.814270136 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.758733946 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.756548559 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.757865522 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.757344733 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.756195076 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.757904078 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.758508226 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.755990807 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.756728271 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.756513985 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.756946518 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.7563503 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.756955556 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.75727701 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.755309091 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.757385803 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.755919147 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.75708798 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.761305448 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.755815201 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.75625109 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.756754376 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.758383848 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.757665176 seconds)
  done (took 43.865383827 seconds)
done (took 94.771970331 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.427205184 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.17895504 seconds)
  done (took 8.295585099 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.761559632 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.759845032 seconds)
  done (took 5.24394024 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.759673383 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.759585555 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.759455831 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.760166158 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.759598983 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.759835386 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.760159226 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.759987123 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.760099581 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.759799994 seconds)
  done (took 19.289132024 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.76065616 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.760652968 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.758161514 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.761009637 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.76122943 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.758290985 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.760483502 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.760913178 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.761668019 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.758135328 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.760651928 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.758843113 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.761145435 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.758147288 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.760221169 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.759264813 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.758711328 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.758479009 seconds)
  done (took 33.368612509 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.761569782 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.76116084 seconds)
  done (took 5.215306775 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.759289102 seconds)
    (2/7) benchmarking "second"...
    done (took 1.75809918 seconds)
    (3/7) benchmarking "month"...
    done (took 1.759661402 seconds)
    (4/7) benchmarking "year"...
    done (took 1.758699896 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.759523487 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.759152153 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.758936898 seconds)
  done (took 14.005759679 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.762760397 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.923234241 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.996876402 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.464832465 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.763806833 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.765343461 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.660483909 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.765734078 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.7672275 seconds)
  done (took 19.56313914 seconds)
done (took 106.67224744 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.577856464 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.756475087 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.120166666 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.874065206 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.773520736 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.055423432 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.776880427 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.983851315 seconds)
done (took 42.611880217 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.827164895 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.230768532 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.236518097 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.469980406 seconds)
  done (took 11.630185296 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.746893591 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.293469059 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.793783394 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.357048423 seconds)
  done (took 19.899454219 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.13114902 seconds)
    (2/2) benchmarking "read"...
    done (took 2.1106232 seconds)
  done (took 5.943083507 seconds)
done (took 45.996244338 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.766395767 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.765517478 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.763365522 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.763093147 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.765846769 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.762941547 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.763152231 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.765670815 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.766174739 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.762710492 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.765336703 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.765521698 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764595738 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.765321316 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763582149 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763743068 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.765929798 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765744783 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.763367423 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763421415 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763390708 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766064858 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.764663603 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.763146042 seconds)
  done (took 44.043800679 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.766661842 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.76452816 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.768003537 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.767412274 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.764593335 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.766310672 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.766858991 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.764808531 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.766043291 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.766487929 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764881162 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.764156261 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.76645438 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.765207554 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766726569 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.765175403 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.766226043 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765440907 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767182944 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.76432691 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.767288492 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76493729 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.764051192 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767073385 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.765362766 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76534546 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.768134126 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.765849334 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768496387 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.76476099 seconds)
  done (took 54.676682387 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.772433163 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.776339328 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.767860609 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.767548566 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.768830759 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.769395366 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.768166925 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.767500737 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.768431194 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.768056799 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.767984824 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.769996762 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.768438153 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.767922744 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.768492883 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.768483461 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.769144045 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.768394469 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.768680479 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.768315052 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.769664239 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.769198622 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.769889236 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.768333143 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.768820757 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.769136907 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.769829863 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.770470708 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.770111113 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.769857748 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.769673638 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.769741331 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.769228274 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.769047331 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.769877912 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.770493949 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.775943294 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.778227463 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.770117226 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.769653817 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.768794421 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.771306512 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.769869875 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.771696103 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.770524327 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.770808974 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.771987876 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.77113548 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.770989202 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.770161313 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.770343126 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.771677976 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.771649965 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.771398637 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.771218294 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.771394183 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.770997916 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.769854219 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.771343762 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.771649795 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.772740419 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.772435778 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.771581206 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.771711929 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.772654361 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.77229018 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.77050354 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.771834105 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.772048801 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.772458508 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.771041886 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.772189982 seconds)
  done (took 129.171544312 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.771603645 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.769923365 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.76927995 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.770323759 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769225577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.771284005 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.770030278 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772562535 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770072238 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.772023641 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77219329 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.770246796 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770197153 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773184677 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773061401 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.7703128 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.773569817 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770802603 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.7730245 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.774663415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.772954534 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.771934285 seconds)
  done (took 40.675652926 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773750976 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.774050101 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.770956025 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.772316654 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.7702801 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773375095 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.774210443 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773789071 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773453491 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771371144 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771081073 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775402858 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.771959283 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772039549 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770860307 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.771050295 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774807299 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.772192971 seconds)
  done (took 33.611808263 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.771888751 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.771623811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.773650363 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.771073489 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.772656621 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774338356 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772308221 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.775376277 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.774552371 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.773156004 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.775854602 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775532643 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.775063697 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772775381 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775847658 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.772846758 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.774619203 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772210998 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776183015 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773382508 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.773402169 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776596761 seconds)
  done (took 40.730390901 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775973967 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.775678501 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.77420242 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.772889057 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.77391628 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.776229731 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.776936803 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.774683445 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.775593511 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.775989395 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774108387 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.775727673 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.774024189 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.774724374 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.773854136 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774867311 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.775419077 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.774073503 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77506578 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.773147348 seconds)
  done (took 37.20398411 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.779985288 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779158371 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.779243823 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778654101 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778703492 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.779637398 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78071192 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.778816061 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.779928957 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.779037103 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.779708539 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780757387 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779449693 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.778946514 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779590563 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.780648703 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779775098 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.779170172 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.779348928 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78007017 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.780640839 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.779534288 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.779064777 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781401818 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.780010445 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.779317037 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.779755296 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.780224019 seconds)
  done (took 51.539426007 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777710824 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.778045898 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.775042021 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.77670294 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.775803192 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.775608503 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.775604675 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.776436428 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77714777 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.776934155 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.778155064 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.778494592 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.778136427 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.778302457 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.779099979 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.778897774 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778862088 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.776041958 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776157627 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776340936 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.779645252 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779475118 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.780232804 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.77666283 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776403382 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.779553199 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777932825 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776502321 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779226499 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.776586668 seconds)
  done (took 55.036071256 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.797593072 seconds)
    (2/2) benchmarking "in"...
    done (took 1.797296279 seconds)
  done (took 5.304431095 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.776127093 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779202008 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.779442212 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.777943412 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.777370032 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.779106913 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780735406 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776345128 seconds)
  done (took 15.936733851 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.781998402 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.780552736 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.779920589 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.779723783 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.78326657 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.784839584 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790816001 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.781130853 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.784718953 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.784260479 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.790643511 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.794271518 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.788971681 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.783422076 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.783029988 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.785795222 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.780219237 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.783384924 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.783694654 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.780978036 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783470376 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786989074 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785189686 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.778939402 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.78719722 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.797446728 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.790754386 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.782357213 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786314127 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.790842863 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.784189933 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.779621019 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.785213552 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.784279843 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.781258504 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.784666 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794066889 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786188188 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.792647097 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78380056 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.782908472 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.779438731 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.787229956 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.788057151 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786951136 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.784860527 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.782148209 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.779552718 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.784117794 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.78814027 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.78945307 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.784840204 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.78153976 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.79407345 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.787118844 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792916957 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.78666815 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.789085928 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.796813534 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.798048388 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.801253922 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.792645676 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788265131 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.785285188 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796944135 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.814190062 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793349917 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.77894789 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.780925487 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.783468815 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.795257607 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801135733 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.797179455 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.786266416 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786503142 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.784394413 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788093852 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784670354 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.795602922 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.789999138 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.78638154 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786882195 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798371605 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.812427715 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.787446005 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.786806796 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.788014817 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.787073878 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.788485282 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.799812577 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.78775139 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.784857989 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.788257374 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.788779335 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.791606463 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.78906209 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.787554713 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790134695 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.783369573 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.786206424 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.788709067 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792313068 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.798808805 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787819501 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.789086767 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.796416721 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.784022437 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788180254 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.79827264 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.785292683 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.788766999 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.790505854 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.79876532 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.784457162 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792837738 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.800464156 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.789710496 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.791145848 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.790111931 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.786995163 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800263404 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.819197447 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.785630301 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.786762212 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.79516529 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.802183018 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789201141 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.792359545 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.786791008 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.784991797 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.784235673 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.791732433 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.786697373 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.792548178 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790109023 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791684926 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.785596922 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.788374744 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.790648475 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.792573454 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.793823436 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.793283441 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.793120925 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.794251174 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.791128179 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.793302041 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.797770772 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.790385073 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.792486809 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.79158702 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.786257627 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78977236 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.794784592 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.790931616 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.792241267 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.791371854 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.790333834 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.791273684 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788510184 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.790702879 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789861929 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.792735134 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796962325 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.792932 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.796243342 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.790012543 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.786597074 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.789456253 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.789967001 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.79302914 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.790466132 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.791328634 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.796216342 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.801716012 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.789944555 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.792835877 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.796121745 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.79269518 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.792391891 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791535121 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.795674677 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.802026587 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.792561932 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.800712209 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.791561325 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.791950589 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.789332204 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.793834119 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.794035626 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793736314 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.797109862 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.799634353 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809788462 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.803608596 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.793711594 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.795101902 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.795155052 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.798058903 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.799009338 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.792378986 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.791060508 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.793646608 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794884006 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793821913 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.797514664 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.792810003 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.794556044 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.792240654 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.790490989 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.794070131 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792189514 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.796776233 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796464589 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.789121067 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792593559 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794171984 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.793789699 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.789437937 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.794493566 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.794325816 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.793132893 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.795629193 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.803908239 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.78837346 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79662632 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796041254 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.795058809 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.79450701 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.793483585 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798712826 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.79416246 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803653676 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.79542786 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.795051659 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802385363 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.795916973 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.795670058 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.799401643 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.792989464 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.791324138 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.799387908 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.802423014 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.792642402 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.79597535 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.796161463 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796555273 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794019007 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.803654 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.788862116 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.795873459 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.793578927 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.799449213 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.791019286 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.797577744 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.79835918 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.797971561 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800247839 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.793557182 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.795012484 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.799210171 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.798407423 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.796478672 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.79743612 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801439387 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.806316143 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.803714959 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.7975258 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.802067659 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.799162201 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.799244115 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.798459719 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.798276242 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.796822136 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.814418138 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.806277902 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.805616428 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.800040029 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.794991275 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804321944 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.798405565 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.803857132 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798886335 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799342328 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.799392438 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.800167242 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.794035654 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800684791 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.795226804 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79957707 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.798282978 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.801047198 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.796062344 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.799072014 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.798185175 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.798627271 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.796237206 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.799823919 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.795559828 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.803646479 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802114115 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.799296296 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.800347617 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806321672 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800795647 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.802090977 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.798582022 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.799716016 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.799641691 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.801400461 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.799546752 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.803426646 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.809110102 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.801730447 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.81213083 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.801819288 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810645924 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.79973591 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.80463651 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.810331775 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.794503902 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.800962601 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.802155789 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.801778735 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808387975 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.800104727 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.800823515 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.804731216 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.800402019 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.800319246 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.797186465 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.800688845 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797039252 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.801456166 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810766153 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.801379176 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.806206347 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.802417487 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.79488213 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.801532552 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.798274293 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.801479211 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809216366 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.800596181 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.803607002 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.800643529 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.802621326 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.799320348 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.802009421 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.799004994 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.797071745 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.800018131 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809574578 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.800939059 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807316536 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.799697597 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.814796079 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80267513 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809172395 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.802497907 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.804835037 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.802695641 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.799706156 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.806214099 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.802747226 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.805343063 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.802378142 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.803769342 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.803977344 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.802944116 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.806259406 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.802729866 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.803245834 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.804054942 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.813149692 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829754461 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.804270715 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80541383 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.797842703 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.805879822 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.808374665 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.803804739 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.802351421 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.806380516 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815940431 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.809932155 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.806288316 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.804502092 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805677356 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805398722 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.801747226 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.801320358 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.804048812 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.802242984 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.806390741 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.80521117 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.810591547 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.802412732 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.806179295 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807876578 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.806178264 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.818392539 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.803998088 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.807196131 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805627121 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.802808574 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.806954156 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.806261078 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.805271979 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808235017 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.804181552 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.806471513 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812688737 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.812938851 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.808742486 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.803594703 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.804923387 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.807194613 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.807808563 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807384711 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.805902329 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807066186 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.809228453 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.806722481 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.808376111 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.805406952 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.803891156 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.807581656 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.805064149 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811686567 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.816124313 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808208355 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.802451437 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.803500148 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.8049816 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.807150236 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.80876635 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.819335848 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809548468 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.819724016 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.817684334 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.813488821 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.807604281 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811585621 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.817597722 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.806496087 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.80946895 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.808058575 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.810673761 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.80878515 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.813029211 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809930415 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.815933191 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.808684447 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.809326106 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818223161 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.809037386 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.806273533 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.811022 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.813211832 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.808863336 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.802673144 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.805167107 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.80735653 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.819740762 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.809885058 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807383501 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.808710131 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.804578069 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.80819175 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.812956473 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.803902832 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.808905141 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.800461888 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.808243247 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80595753 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804912403 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.801584901 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.808264715 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.806956611 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.811466314 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.815995 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.801421152 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810272953 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.807383923 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.808892127 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807655414 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804848402 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.802750593 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.80265963 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.807738895 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807331522 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.808181581 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.808495877 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.804366189 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.805580206 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.802948772 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806418515 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807419238 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.816015197 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.810816316 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.79958632 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.805663507 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.806685534 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.809031361 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.804412556 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.804934956 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805929827 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.810534617 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.801225459 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804266298 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.801225223 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.807630861 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.823349104 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.801998552 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805740193 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.806459912 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.811031187 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.800492098 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.801072788 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.801714022 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.806527265 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.807454976 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.812959985 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.803854408 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812307419 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803856671 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.804992909 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.804317816 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.806127338 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.814245527 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.80551469 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80169637 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.802090282 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.808276901 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.823326887 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802578962 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.81353908 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83548147 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.802826265 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.803942842 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.807063682 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798542114 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.798710199 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.803388123 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.798838562 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.79661957 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.796985913 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.799649474 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.802185064 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806054948 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.800320209 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.79736248 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.798286666 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.800299018 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.802685726 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.79415476 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.798237224 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.79696606 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.799662365 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.799571602 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.798784463 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.801640203 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816050973 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.812520975 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.797939226 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.800888241 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.795114506 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.805862054 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.803355399 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.812900509 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.806957991 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.801336934 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.800542837 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.803225433 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800931207 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.796766692 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.803778968 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.802294842 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.800438954 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.798597493 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.817301105 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809010309 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.807246851 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.802569504 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.802368852 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.801468001 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805644836 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801880232 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.802686558 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.805433943 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.80587151 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805204345 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.800225672 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.799215961 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.80659956 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.806787458 seconds)
  done (took 1073.957255577 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.797581542 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797429158 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.796819884 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.797062331 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795985439 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797545385 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796916379 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79668093 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.796610591 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796611795 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.79728429 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796398016 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79738121 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.797443278 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796600055 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796692051 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798207829 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796864405 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.796575618 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797283863 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.796823692 seconds)
  done (took 39.469351608 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.799806942 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.796552796 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.797890363 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.799774556 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797795796 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.800549954 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.7959922 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799536273 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.798475227 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79758329 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.802715243 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798404967 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.796901831 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.796013452 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795726293 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797980277 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.80093179 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792856925 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.794851985 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.794281758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795909852 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.793712045 seconds)
  done (took 41.27439647 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.798108665 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.798179251 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.797324056 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.792129939 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.795481122 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.790791712 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.796645012 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.794637887 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.794367011 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.800152481 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.797931048 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.796777724 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.803904221 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.800417131 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.799438256 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.79433633 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.936816791 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.797001228 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.797154416 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.796978507 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.790687479 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.806427215 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.79111734 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.792487468 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.796123148 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.796686295 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.795666206 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.793529128 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.797327692 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.797817861 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.800957473 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.795587398 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.796969944 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.79959287 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.796856309 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.798904532 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.799527922 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.799541106 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.792550539 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.795508521 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.808672979 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.818492266 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.797524839 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.806389225 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.794317463 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.79391549 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.80112096 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.80660883 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.792234398 seconds)
  done (took 89.95845906 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.794885774 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.795393092 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.792415748 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.794469162 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.795478336 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.79437064 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.795076474 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.794979626 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.793708054 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.794464113 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.797736724 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.791791199 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791814175 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.794927549 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.794782052 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.79397414 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.791431307 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.792414376 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.792212338 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.791896263 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.792029034 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.795362312 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.7933205 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.791443672 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.793546818 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.790290018 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.793757602 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.791779304 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.791195163 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.790474766 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.792642389 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.793249215 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.794999601 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.790970781 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.791762604 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.793216095 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.794032089 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.792176408 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.793203907 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.790220977 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.791718161 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.792211384 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.792372252 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.797098139 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.790376352 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.790711047 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.790799486 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.790346977 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.791820669 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.793287092 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.791750258 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.790804746 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.792511252 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.790631151 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.794615944 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.792173985 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.789744914 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.789242927 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.791780344 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.78776278 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.792138211 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.791973217 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.789910687 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.789847904 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.790702804 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.788436201 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.788936443 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.789822393 seconds)
  done (took 123.60730693 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.791370629 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.792258858 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795507825 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791408808 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79113093 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.790620981 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.791759802 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.791458257 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.792619067 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.791331544 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.791353929 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.787015296 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.790364536 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.787860913 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.7902835 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.789860727 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.79005222 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.791162811 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.790943751 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792011183 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.789835097 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.78997065 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.78949273 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.789920305 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.790460598 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.791211343 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.790059519 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.789518744 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789949709 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.788253909 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.790371126 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.787596075 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.789582963 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.789222583 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.789959897 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.789964146 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.791470948 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789887842 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.789321374 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.788889925 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.790418947 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.791601573 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.788200262 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.789362572 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.789597665 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.789055255 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.788962261 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.789888118 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.786003286 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.788656575 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.788106213 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788947832 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792175861 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787868495 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.788438705 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.786189405 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788154294 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.78937689 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788861461 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.788432633 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787656246 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.787520666 seconds)
  done (took 112.689252382 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785764678 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786972291 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.783824213 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.784603659 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785723319 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.784453277 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786139678 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.78644841 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78589057 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.786122294 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787644645 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784267411 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784855744 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787264725 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.784559552 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784154013 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784646961 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.785769975 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785203131 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.783534294 seconds)
  done (took 37.423856878 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.782644471 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.785913492 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.785105275 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782921192 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.78582803 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.783034162 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.785248996 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785679568 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784967197 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784494879 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786182765 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785327166 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782296592 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.784007988 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.786162534 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.783649886 seconds)
  done (took 30.268242339 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.782373546 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.786698396 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.79086798 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.788382002 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.782338868 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.783142187 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.785266216 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.783662615 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.785332889 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.785827359 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.783762716 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.786152681 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.786016894 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.792287255 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.78239792 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.785044872 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.783601913 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.783282657 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.785165104 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.790803828 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.781779631 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.782361659 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.785066907 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.784381237 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.78341739 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.782279623 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.782569792 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.781665275 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.783663352 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.784675051 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.78385956 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.782448481 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.78252957 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.782556848 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.787779178 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.782528985 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.785398896 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.784056214 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.784694012 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.784290265 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.784492062 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.785664012 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.7841172 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.783541147 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.782322573 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.7840372 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.781739404 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.783350706 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.781818682 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.781850595 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.784677723 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.786592188 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.787270471 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.784817162 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.783281164 seconds)
  done (took 99.860564049 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784642817 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.783424348 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.783128184 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.78353202 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.783781524 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.781357494 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.784175048 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.780736531 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784599484 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.783779173 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.783893495 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.783806474 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781954559 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785623182 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782682286 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783906385 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.781947182 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.780951833 seconds)
  done (took 33.811162436 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.783635286 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.781958408 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.783701987 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.781669433 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.782758205 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.783875143 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.782635585 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.783466327 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783007152 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.782245009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782904358 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.787740794 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783630903 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.784617776 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.78216168 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7810607 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.784464598 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785954457 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.781886961 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781379802 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.784335095 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785096075 seconds)
  done (took 40.948731214 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.785112501 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.786345797 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.802197029 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.827589124 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.817514109 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.78935162 seconds)
  done (took 12.523620049 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782310522 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783074179 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781823837 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785289189 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785357317 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782786906 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782175306 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783069724 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785103475 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785761323 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781862423 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784869705 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785421974 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783082161 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785959844 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785969396 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782847535 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782214174 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783496543 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785898812 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784859946 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784822414 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783681526 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782888042 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782387516 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783443803 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787001585 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782386411 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782445058 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784119504 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785367468 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782147762 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785640236 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783517527 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786389159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784858923 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783021414 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786806045 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785953126 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782450055 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.785988444 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786801233 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785189222 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785996034 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785815307 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783736673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784140939 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784640845 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787824066 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785845496 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785906437 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78438789 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786628489 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786336441 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788583738 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786406381 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784339597 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783322095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786772964 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785483758 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784972982 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786408806 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785149151 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785325115 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786884981 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786817202 seconds)
  done (took 119.507610088 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784821026 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.78480166 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784813811 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786117522 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784993547 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784600068 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785334491 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786251145 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786912201 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786894499 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787951881 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785360822 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784747689 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785200227 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784417161 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786464039 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784865835 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784757569 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784644343 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789472835 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785431974 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78784133 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785885935 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78498169 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786711189 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788400734 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787039884 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786391769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785866075 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785804944 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785826934 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785773128 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788661731 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.786533663 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786554802 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786008144 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786817236 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788508052 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785889252 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789135005 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786608522 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789481105 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78720021 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788454535 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786447613 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787403808 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7866613 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788236904 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786245604 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788269643 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788793829 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788993466 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788129622 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786507586 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788370359 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787435834 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788610523 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787663846 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788499352 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789687015 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788748483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787956852 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790496075 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787496316 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788918368 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792247527 seconds)
  done (took 119.660189478 seconds)
done (took 2484.587454902 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.81947288 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.047126516 seconds)
  done (took 15.585453348 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.963526023 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.915198966 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.800595198 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.849770636 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.799314309 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.823341886 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.813593161 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.798754209 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.80138862 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.801593684 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.801187671 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.98899141 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.803265004 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.797880033 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.801030509 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.89360429 seconds)
  done (took 51.185316417 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.803724874 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.808008335 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.81590941 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.80604287 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.805993837 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.823235633 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.842630164 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.808078403 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.864766944 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.825120955 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.931968368 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.813877048 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.804476552 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.863494437 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.815984493 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.819151166 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.909811783 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.879025487 seconds)
  done (took 34.770378924 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.882811925 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.808261454 seconds)
  done (took 10.428863916 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.81858191 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.819964368 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.81345278 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.824319906 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.810350716 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.842763705 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.825999256 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.841084118 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.839132881 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.855561234 seconds)
  done (took 70.024063715 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.811110599 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.805988312 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.808932067 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.8037708 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.797918112 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.80291644 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.804853631 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.80363142 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.497753713 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.839509677 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.813243727 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.810340935 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.805291548 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.806843791 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.799745448 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.833465729 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.918076079 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.798667669 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.800178728 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.809970709 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.805415563 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.900474381 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.818247338 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.803887011 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.835163069 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.494923415 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.815980716 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.810969523 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.941808183 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.800258954 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.804878939 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.809286222 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.807844425 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.196137478 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.070453096 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.803919691 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.813218084 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.812163687 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.802901462 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.977393197 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.806564819 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.811837021 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.798765516 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.04798407 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.889520368 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.849097908 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.139350094 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.809471401 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.807866172 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.838725891 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.808403767 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.808068432 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.824788479 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.330263214 seconds)
  done (took 129.204645495 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.801072031 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.386847468 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965674575 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.802534114 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083115715 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044256902 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.801189135 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850600415 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.80265324 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052000865 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.97839314 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.921549931 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.805857523 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.802072969 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.801980377 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.798090384 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.957929168 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872106772 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.804091278 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.800564021 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83830627 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071458695 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.929511386 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.801826314 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.825582858 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.032239487 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.928520565 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.920426436 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.326735804 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.801613694 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87037766 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.802405194 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.805554906 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.7996415 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.969017196 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.910687106 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900444484 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.802653386 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.801221534 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.800068806 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.466074493 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026758491 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.914113896 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.941029324 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.051174147 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030782725 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.44923131 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.802232817 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.441192821 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.000004071 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.01286874 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.0621547 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.931420541 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.803825455 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.050612815 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.801943613 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.801892807 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065284569 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033429619 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.915566382 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803900642 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.803065446 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801721478 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.122256387 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.804238738 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.913099679 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805392646 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.802893309 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.919600493 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.921319827 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.034571065 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047649086 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.834625757 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.711888786 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.309641455 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.09013937 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.877795349 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067198982 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.804984707 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802129004 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899025627 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.562056214 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.977619391 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.120456964 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072647782 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846359494 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.406834017 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.803968556 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.053954545 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.057048238 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.035270891 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.050665917 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.971384005 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.116867191 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.805151371 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.804332808 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.003136775 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.938371882 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807090728 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.168658596 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054954738 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.529452163 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.836654758 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.112469142 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945204013 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.807235992 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.433919977 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.80748052 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008033254 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.849986822 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.806221579 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.804475899 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.054402393 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.678572814 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.808713717 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.596843369 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.872573229 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.80969283 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076285604 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.809714241 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049295597 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.809343092 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.1212565 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.328346166 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.850608854 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.001548699 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.052386382 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.595710212 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.076133898 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.123716798 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.933350722 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068616341 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.634086875 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.806751147 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091277788 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.811223511 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.805573103 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.976730216 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.806582412 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963934723 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.809226291 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071443742 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835091695 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979196855 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.810301326 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.083804804 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.853909739 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.861176575 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.809279384 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.926845369 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.810229916 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.850128105 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.993512026 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809705456 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.809363454 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.385756342 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.809622018 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957810043 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.110572639 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83338485 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8809795 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.334825769 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.809134598 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905511113 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.837583658 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.410641347 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.811044896 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.981069212 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.810681455 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.784135555 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.811257987 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.123597103 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.033748553 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.813797145 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807823214 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.60338148 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.51745743 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.810383594 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.987219469 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.047929632 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.455015344 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030718833 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.812238802 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.943739723 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.812410801 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.888078777 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.160318024 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.808075101 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.81002541 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.811272778 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.810165983 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.809645471 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.041062024 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.840582951 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.495515024 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.949303167 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057427226 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.123727881 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.080543395 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.86115598 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.813991468 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.080648614 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.814460758 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.878265555 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.813158365 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.836801795 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06168639 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814039698 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.042330066 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.103540102 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.859585938 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.861965383 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.812847086 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.811220989 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.810162059 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.957166964 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911694008 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.81353494 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.811346698 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.931489821 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.939168774 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000189493 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.400426665 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.987115048 seconds)
  done (took 890.106661227 seconds)
done (took 1203.025047784 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.810749967 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.811695664 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.801121973 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.808481643 seconds)
  done (took 28.975072504 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.816533028 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.8151216 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.81616465 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.813640253 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.81537229 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.815507036 seconds)
  done (took 12.633981429 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.867793352 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.807711035 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.810535589 seconds)
  done (took 21.227941201 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.88324328 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.224036794 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.928422417 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.260801513 seconds)
  done (took 10.03923967 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.818826872 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.816231588 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.815749293 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.816625242 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.816449398 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.819543037 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.816106704 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.816783229 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.818047919 seconds)
  done (took 18.098807858 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.986171535 seconds)
done (took 96.704817382 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.328896481 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.253236906 seconds)
    (3/309) benchmarking ("sort", Float64, false)...
    done (took 5.631782615 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.933782316 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.993833868 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.944969026 seconds)
    (7/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.113167785 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.798450961 seconds)
    (9/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.865077844 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.861773441 seconds)
    (11/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.798711073 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.912069994 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.797274887 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.111053893 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.195538658 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.813056355 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.267948925 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.926180457 seconds)
    (19/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.099093102 seconds)
    (20/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.898194743 seconds)
    (21/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.872854202 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.811099817 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.041581895 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.837083688 seconds)
    (25/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.953384283 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.678819815 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.798941699 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.896432934 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.838139067 seconds)
    (30/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.309777304 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.913597422 seconds)
    (32/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.918689451 seconds)
    (33/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.893537443 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.812577631 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.941205937 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.820071615 seconds)
    (37/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.958621075 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.195324368 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.800742472 seconds)
    (40/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.994475385 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.96236369 seconds)
    (42/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.166824742 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.804122513 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.209122577 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.222755545 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.837921745 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.864819255 seconds)
    (48/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.837879048 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.815220689 seconds)
    (50/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.938100513 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.937664343 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.921486244 seconds)
    (53/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.814698399 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.094168517 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.816173634 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.499692951 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.12470015 seconds)
    (58/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.95635877 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.705865738 seconds)
    (60/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.175293296 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.813348909 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.976866976 seconds)
    (63/309) benchmarking ("sort", Int8, false)...
    done (took 4.771986483 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.865725192 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.136988485 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.115485307 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.805666448 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.069601108 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.411961666 seconds)
    (70/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.362457539 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.930739829 seconds)
    (72/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.964454402 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.403319154 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.980501728 seconds)
    (75/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.31293501 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.812146386 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.830656831 seconds)
    (78/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.919713507 seconds)
    (79/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.231010653 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.803876083 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.602452542 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.407891861 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.501749576 seconds)
    (84/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.957626445 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.216265077 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.114943604 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.031764178 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.111533718 seconds)
    (89/309) benchmarking ("sort", BigInt, false)...
    done (took 6.815633832 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.062204551 seconds)
    (91/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.020342391 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.819932407 seconds)
    (93/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.013904885 seconds)
    (94/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.818961138 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.889267815 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.865087501 seconds)
    (97/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.274333248 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.998370216 seconds)
    (99/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.908718351 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.816188226 seconds)
    (101/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.877327598 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.885725217 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.815902292 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.802386129 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.797437264 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.198580325 seconds)
    (107/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.8388364 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.230322119 seconds)
    (109/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.909717739 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.248266646 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.022665784 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.05349429 seconds)
    (113/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.957464674 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.021548025 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.731314599 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.806558074 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.699473263 seconds)
    (118/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.708907513 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.814677709 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.083920496 seconds)
    (121/309) benchmarking ("sort", Float32, false)...
    done (took 5.594447242 seconds)
    (122/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.162721829 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.96610786 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.913548104 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.814452621 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.816776366 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.842839646 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.985277728 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.426497362 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.015209482 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.271293484 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.837568467 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.922980584 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.96223671 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.340551474 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.192010723 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.092179736 seconds)
    (138/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.822688593 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.031243699 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.074866651 seconds)
    (141/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.41246075 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.803820828 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.626715086 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.503193979 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.111740995 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.096162208 seconds)
    (147/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.834140588 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.070234531 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.935369657 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.943912296 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.885635883 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.037196734 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.145081024 seconds)
    (154/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.805707524 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.376907178 seconds)
    (156/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.073989617 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.043271643 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.844369784 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.815676188 seconds)
    (160/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.957707556 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.120053352 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.039239877 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.250545243 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.841554179 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.499093756 seconds)
    (166/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.644594623 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.095907805 seconds)
    (168/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.025406381 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.040288224 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.752254532 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.250179096 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.711445742 seconds)
    (173/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.975203859 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.916843519 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.991989746 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.805756756 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.862238059 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.878725736 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.14377513 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.925026114 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.992796615 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.923464253 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.331241285 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.818413132 seconds)
    (185/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.333446152 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.853737534 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.482073281 seconds)
    (188/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.169298362 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.153676873 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.064858889 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.957804488 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.818848899 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.846261925 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.843877694 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.198208504 seconds)
    (196/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.348119939 seconds)
    (197/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.023922036 seconds)
    (198/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.215633744 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.381698672 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.987588247 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.476692422 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.465724134 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.882233909 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.007829252 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.821527363 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.194916302 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.121186607 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.851922818 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.11144826 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.012775444 seconds)
    (211/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.837719506 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.115576701 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.949487098 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.846691726 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.425498437 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.036813263 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.507873157 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.827925184 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.911754366 seconds)
    (220/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.953087504 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.897672501 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.809445859 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.834004328 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.833511456 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.064989694 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 4.087435977 seconds)
    (227/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.346543752 seconds)
    (228/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.121252724 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.809042147 seconds)
    (230/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.198625786 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.775550789 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.846190506 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.183458271 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.823263792 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.113361159 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.986861917 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.911715469 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.861641517 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.809684783 seconds)
    (240/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.262540659 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.909384499 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.928200438 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.752136125 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.776688793 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.826178158 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.817859624 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.488360321 seconds)
    (248/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.838813614 seconds)
    (249/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.907106608 seconds)
    (250/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.846815055 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.847484993 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.910884532 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.709446355 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.919809288 seconds)
    (255/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.934025804 seconds)
    (256/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.159526478 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.205393721 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.757121715 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.921726734 seconds)
    (260/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.847998866 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.947770208 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.823679562 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.926818117 seconds)
    (264/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.102836513 seconds)
    (265/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.879702458 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.90701864 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.451333764 seconds)
    (268/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.120714511 seconds)
    (269/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.165507251 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.826230943 seconds)
    (271/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.468146561 seconds)
    (272/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.825143401 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.847941236 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.632210391 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.222055589 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.823874895 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.396398503 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.836208247 seconds)
    (279/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.888266262 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.824268004 seconds)
    (281/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.849749627 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.070617875 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.339264167 seconds)
    (284/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.855151086 seconds)
    (285/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.094131444 seconds)
    (286/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.409729043 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.872801325 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.824904302 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.908169556 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.014419029 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.912555019 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.19484322 seconds)
    (293/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.432417476 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.989654621 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.953843152 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.996088167 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.245422441 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.056624517 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.868257513 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.004246912 seconds)
    (301/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.02139405 seconds)
    (302/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.039864164 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.211054884 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.833331127 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 4.599546597 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.907566805 seconds)
    (307/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.964076998 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.852484385 seconds)
    (309/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.007204335 seconds)
  done (took 1009.989917966 seconds)
done (took 1011.749453433 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.862598378 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858379872 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.839398192 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.860962741 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.95357019 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.876322235 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.850333952 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.842615428 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.8878364 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.889614809 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.839303802 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.872985453 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.842612007 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.840860342 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.840815582 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856326401 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.148741076 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.86727257 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.857136274 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.851130552 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.858503585 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.840343953 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.890376088 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.872560643 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.844669888 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.844387262 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.846057957 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.86021512 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.954393746 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.845142538 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.843263429 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.852858892 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.149200073 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.86576103 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.836375648 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.860419747 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.853280492 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.848644368 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.845414121 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.874598969 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.2954561 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.847154355 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.843721534 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.843010229 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.843048436 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.847514276 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.843964711 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.84866299 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856209075 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.857984591 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.289862827 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.861825499 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.845558999 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.842811534 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.853667577 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.843115111 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.845653472 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860023741 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.861982128 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860092692 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.140726339 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.873991732 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.843024763 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.860295587 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.850562046 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.328089969 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.843272385 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.847832457 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.29401477 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.853684909 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.330411424 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.857710588 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.845374732 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.857832475 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.875507087 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.150570165 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.863720909 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.842706431 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.852168755 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.842554876 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.855656867 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85795599 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.848011072 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.843875137 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859367183 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.876548091 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.854337076 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.84495026 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.853195207 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.864959229 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.853315709 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.855343058 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.846303318 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.839383073 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.854107034 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.848400593 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.847930893 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.848830497 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.848959032 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.855852198 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.296901558 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86618874 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.840977372 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.841243243 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.843221928 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.858163416 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.294694293 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.849946017 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.865774506 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.892903314 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.84775606 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.143116122 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.875346276 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.861254289 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.853854636 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.847115339 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.839996482 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.143212669 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.319573198 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.865432412 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.845934986 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.843720012 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862902933 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.846857458 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.84239926 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.153795081 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.872560311 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860687541 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.968035482 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.857348752 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.878448912 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.84634842 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.849267975 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.874673149 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863508508 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.879190717 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.850142761 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.862817235 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.863482579 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.844919419 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.858970852 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.858146017 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.848352268 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.852151953 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.840877442 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.874421745 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859459898 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.861061637 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.869103335 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.969749431 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.845039482 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.146594613 seconds)
done (took 290.099605649 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.919819897 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.839512614 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.951169388 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.844278168 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.931863348 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.933128079 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.840896428 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.842115687 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.843232409 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.227742166 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.841751171 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.849920802 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.838137398 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.83944973 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.930454853 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.844486337 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.84179727 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.18816764 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.848638207 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.916868862 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.838686852 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.843134489 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.845165574 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.230134532 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.844222212 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.841522075 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.918974374 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.845170656 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.19571606 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.841562601 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.848106623 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.195182008 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.937639157 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.863883117 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.856345895 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.854209392 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.933015239 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.849153319 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.929734321 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.929504558 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.950892327 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.886034128 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.844306111 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.842780633 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.847533581 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.849516907 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.843261275 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.871766128 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.843708317 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.843370405 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.189429971 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.854453089 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.853065474 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.843126115 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.84317402 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.868118409 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.84285952 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.84959194 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.940252011 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.851276316 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.911122987 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.233117542 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.226911168 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.84476902 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.840514797 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.844419111 seconds)
  done (took 182.7843419 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.915751566 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.924574725 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.915189532 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.851638363 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.899547548 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.920989984 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.853060866 seconds)
  done (took 15.051652295 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.855367837 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.847606509 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.899179449 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.900250442 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.849784093 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.999625017 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.849352968 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.862739976 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.84696096 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.904005907 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.849332704 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.846954388 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.857198732 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.848551223 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.896594673 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.861314794 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.96654281 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.851657861 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.85070828 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.008327471 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.847487566 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.855924641 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.906133455 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.863521621 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.849068092 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.855305309 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.434629819 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.851742819 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.845881861 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.849372223 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846025201 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.890936601 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.849545456 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.84285447 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846934582 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.967481197 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.853204125 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846552973 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.849040954 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.848745645 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.84854269 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.84947375 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.850697936 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.846593922 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.849524153 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.877007943 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.851138295 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.850026884 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.849352125 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.851520497 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.903160274 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.851175811 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.847385536 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.848138556 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.908790209 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8574711 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.853296043 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.847143817 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.851821208 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.8479547 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.00845467 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.901236664 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.850548771 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.901826155 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.851088068 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.850540267 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.850462915 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.849857667 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.907630842 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.851564818 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.90098017 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.84698552 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.010426657 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.877410078 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.851189452 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.85655543 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.855175982 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854187493 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.848825492 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.860388467 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.849574019 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.854539605 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.861438265 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.850533173 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.848243464 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.959050652 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.963270025 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.849903847 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.867399503 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.861872009 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.848742989 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.90647014 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.852251445 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.849689018 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.905281625 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.968906804 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.910180059 seconds)
  done (took 203.96062909 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.859004397 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.862861431 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.29223725 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.869960904 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.855403841 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.854413219 seconds)
  done (took 13.371239353 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.85617315 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.853678324 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.853870739 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.854571444 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.85576623 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.856016432 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.855270683 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.857250087 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.85871064 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.853205873 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.853806756 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.855076775 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.855246178 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.854872247 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.857267727 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.852729768 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.856568654 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.850636653 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.854222406 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856864135 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.008003193 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.856243378 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856194599 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.857263721 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.859810021 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.854261635 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.863222104 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.856094634 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.853474402 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.865005798 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.859641536 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.854642494 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.857148099 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.863439373 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.862769802 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.857840277 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859284064 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.857152058 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.851462053 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.855897868 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.857833929 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.858172557 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.855991097 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.856776229 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.859285254 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.863343226 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.861194949 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.866186231 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.859063498 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.857104752 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.858365069 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.854400471 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.857698291 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.857335793 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.862947024 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863520787 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.86245682 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.860271106 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.859513695 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.85873565 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.85804522 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.855269092 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.859923579 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.86315846 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.853663433 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.858792851 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.860311634 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.86416825 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859627971 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.855992313 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.858367814 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.854487774 seconds)
  done (took 136.685083754 seconds)
done (took 553.640580126 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.078901135 seconds)
  done (took 8.86027661 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.893439266 seconds)
  done (took 8.754802326 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.508596585 seconds)
  done (took 10.289418144 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.8621548 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.874379766 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.857793291 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.854431135 seconds)
  done (took 29.239709699 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.235475036 seconds)
  done (took 9.017673199 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.863108893 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.845294067 seconds)
  done (took 15.553177512 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.98306281 seconds)
  done (took 8.765017185 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.933501643 seconds)
  done (took 8.72187272 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.865296714 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.856456238 seconds)
  done (took 15.516605158 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.839090117 seconds)
  done (took 8.620908831 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.505260793 seconds)
  done (took 11.296842347 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.86027692 seconds)
  done (took 8.654858383 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.895791183 seconds)
  done (took 8.677715837 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.032417712 seconds)
  done (took 9.81426349 seconds)
done (took 163.565897722 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.854229333 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.848664427 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.84905599 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.850624787 seconds)
  done (took 29.182147477 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.88820572 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.889521405 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.889920826 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.899875103 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.892528741 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.890855422 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.881606947 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.880995252 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.899525694 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.892524532 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.890810509 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.892261377 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.889193949 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.881369314 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.891709002 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.890873723 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.900897085 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.892390269 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.883014044 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.89221858 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.857545944 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.900372314 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.894464204 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.857155094 seconds)
  done (took 47.102597174 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.053348395 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.930195238 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.014432081 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.911967867 seconds)
  done (took 9.692285531 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.908391635 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.909916863 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.922116901 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.961732505 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.991932227 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.919725145 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.88266777 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.879532958 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.864900434 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.911492044 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.989714944 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.926806359 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.993107175 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.857957073 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.043595324 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.857894413 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.857106399 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.909792932 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.96071657 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.974751051 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.859113767 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.909259984 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.913194335 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.927299709 seconds)
  done (took 47.916856347 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.855340805 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.865025642 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.863448266 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.856299996 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.857050547 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.858103875 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.863516834 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.85901555 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.879032981 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.859259444 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.857261276 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.858121885 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.856763346 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.857862731 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.857632656 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.8701303 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.870703256 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.857317584 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.860686329 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.864443129 seconds)
  done (took 39.011032853 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.854316333 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.796175243 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.20548989 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.111150495 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.854417778 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.855323263 seconds)
  done (took 32.462439758 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.874492081 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.924278594 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.866613028 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.918339101 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.997742467 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.867723959 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.860837946 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.930399957 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.973032404 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.934842429 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.878018865 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.886681513 seconds)
  done (took 24.69897204 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.856121104 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.856045184 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.856428376 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.873022255 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.873086885 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.868905452 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.869089376 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.855195258 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.873491496 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.879009729 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.868685962 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.873650901 seconds)
  done (took 44.192189198 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941763433 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.899136184 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.863584256 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540862275 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.234414265 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066845163 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.517568635 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.188062947 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.860276008 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128989356 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.815262376 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957004906 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.112409131 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385869861 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.890184002 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.311230147 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149670653 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060924902 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882669774 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505083349 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91934033 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.0821562 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.579511007 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.912927563 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06811371 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.988008559 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.214307729 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.855699835 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989358669 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892856475 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866249736 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857238605 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131280862 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228367232 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963241452 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866563782 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.481068537 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.568861253 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.954678954 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.509107433 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.526670084 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.971839185 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867543614 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857143933 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791026819 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048276693 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234598185 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.863493836 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.567912918 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.858109858 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868824764 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952165598 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.86155363 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.674059849 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808495197 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.858230363 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.855955115 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867932343 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432223373 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942559616 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.089258391 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.834342521 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.952423665 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.606538553 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238539738 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.004072847 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.862156651 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862826094 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794876588 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.564794245 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913875093 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187119272 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.878848183 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50913232 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145655468 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.880856044 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801651373 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121376235 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.428596576 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.833041744 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089100985 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860094676 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795607073 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.804131075 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794600988 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114891673 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896762975 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.621035547 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902366014 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.188382222 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871481389 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877484372 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885901496 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084463836 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.750926113 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860729292 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.584310238 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012768812 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880169765 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192426117 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795176379 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.863421211 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117109141 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.071796502 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.9764347 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.35675907 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015078292 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.471761725 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.916305967 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.048161376 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.910039997 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.123024365 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917247595 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.949946415 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913790958 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862008244 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149876562 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.489942682 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.001105979 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.833597391 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988858631 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.176349547 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887967422 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94476976 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.870974223 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.863084732 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.599362238 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412902984 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.86186049 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.868940206 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.977715846 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911554038 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.867442929 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811285069 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.486241343 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8251646 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.87786283 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088201176 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.469068738 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17752017 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797380992 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192059351 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916313334 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.085384162 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.501287648 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.926828835 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124966207 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.975138143 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.01513336 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912791453 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882657589 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96284327 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885628437 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.053241578 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.163792539 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.868094491 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.867220655 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609118941 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.898733693 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865001798 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.869154869 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.619012191 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131663922 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.886056429 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870354454 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.755074953 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.878023846 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929455128 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870969089 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874788962 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.405909852 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.580714215 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.871327349 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.450522497 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09000993 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87738399 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.576735661 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981293825 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.949528907 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133946026 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923616354 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.800264729 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.577435278 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.559699031 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867506709 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801824751 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.866460815 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875976054 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878580147 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.065874096 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131006261 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906628336 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.513448338 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.907736872 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878049646 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.870928229 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865331893 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.379594554 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.9531216 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.096292743 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915655628 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01152019 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.881927306 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801353007 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.871388353 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871488638 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.867468149 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.868778631 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902072745 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.523674701 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248973575 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128088557 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.481200717 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88119608 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.548028129 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.927251057 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.874731026 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.599204439 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.09216886 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.902318127 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897380464 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.877191479 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.598578147 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.575911973 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438347067 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171616046 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159305945 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289198337 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.121634436 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.897933182 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20493235 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804645818 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.434454789 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928713467 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218761308 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816446616 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954543336 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.510950369 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20212716 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882942264 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098197659 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24221484 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.539174002 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004511248 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082289462 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905325947 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.055724153 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832635897 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.396895341 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012779414 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.543687884 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070266103 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203251835 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.480639818 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.986824336 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.871053636 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.535901478 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953330055 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.580301688 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.04190525 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.10482724 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.74491443 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33718888 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.877267109 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.096801975 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210700956 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.074987525 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.996937547 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808647814 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882619653 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881359251 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.878182136 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.870844089 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.749994052 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.124223015 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882167275 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806210742 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.036987065 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153861317 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.768757239 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.876557555 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872222779 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158742336 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.451905431 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040041225 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.015162727 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.398180109 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879004077 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.806352964 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80730993 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.565198912 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.879428348 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.848736597 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074698169 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.976063695 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786148873 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.991884926 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954443083 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129193732 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.886853107 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134104139 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14627179 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.574011653 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897666314 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.973365508 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.470856865 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.977652573 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.87416982 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.108691423 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.63232701 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098127464 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.883105082 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.835389201 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.873927343 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088008656 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.873728184 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.733004237 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096099614 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.596916811 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.887736533 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177087822 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946403643 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.728676281 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91164718 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.967432029 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885900934 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954503278 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885311202 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.886113846 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885195749 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920904326 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.735092239 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.990466505 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.888667355 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968865368 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.971567232 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.403095396 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.881585393 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140569324 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218849928 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189631039 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932667609 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875653752 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881811078 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810418745 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02426089 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.101720687 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149750474 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.00742552 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.992892696 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899611329 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.483594558 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.122094251 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120295227 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151868354 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.772640479 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422617176 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91969317 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.876174403 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888100338 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.090303494 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082658172 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170997752 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025081897 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.000741008 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237540216 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151641381 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.878467183 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877300205 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467277616 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.88894772 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.549635262 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.918942419 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.713625306 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146048257 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88830129 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251840551 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901132675 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.035171886 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.650969578 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.566197595 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.169898773 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.860988243 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.931174026 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140685018 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.248929071 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189598096 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946127059 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889222002 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.989918321 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025904623 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.766253116 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.877339176 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880482197 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92908009 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.588988431 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.888992301 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147850234 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187228812 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.876179084 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.763789425 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901582871 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.890086682 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102894375 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13523734 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134819304 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888815103 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.886731773 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.697005872 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144860738 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936983385 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813013789 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.884316185 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978944493 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.128761194 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901267597 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.333059699 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.592631713 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145861821 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.882001314 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902573282 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.077868354 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236690953 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192426369 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.418292782 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084313651 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.466570943 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.499764079 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184333008 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.885930206 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.079283666 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186571319 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.885784721 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.009673067 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921054718 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.143310649 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191611315 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.8927752 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535564078 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.851659344 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.223855034 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443368603 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821474321 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890614454 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.946719029 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.883753208 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.01194912 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893688088 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.759638735 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.082467419 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.663292211 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166801531 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.886396321 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.875506583 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.553822493 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.203052699 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921494261 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026969362 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88431542 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.557206242 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.234538727 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140121989 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.011211643 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.897702021 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.888249994 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883601294 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872111139 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081354017 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.08144447 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150856605 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.035829451 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.922436826 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886843241 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.101435 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096688179 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.723444518 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013337771 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.002777032 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926634229 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.793520234 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.387533093 seconds)
  done (took 1673.590814307 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.88795181 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.904614482 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.929403741 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.900884762 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93372573 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.005214547 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.943771306 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.943594523 seconds)
  done (took 57.265969653 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.887398328 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.107398926 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.896729576 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.887920426 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.897709903 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.88829837 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.058040139 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.895930855 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.895180132 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.897279992 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.887953081 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.885745219 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.215100785 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.910459942 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.886905963 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.885459666 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.894992922 seconds)
  done (took 74.713791409 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.886506749 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.915958134 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.910048932 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.897854072 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.905557192 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.897488919 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.706718149 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.89888427 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.88880191 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.014420609 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.518605704 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.895001818 seconds)
  done (took 87.153031418 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.897240117 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.895457236 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.895695999 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.896179824 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.896485006 seconds)
  done (took 11.301235778 seconds)
done (took 2180.092377423 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.139955333 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.10868969 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.133881387 seconds)
  done (took 6.05966839 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.044082566 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.0921924 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.210899107 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.192566976 seconds)
  done (took 10.3666124 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.176760218 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.284339054 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.09831003 seconds)
  done (took 8.382864348 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.298296175 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.895049798 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.003358 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.893696289 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.891658051 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.894374008 seconds)
  done (took 22.503563768 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.897003572 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.899403763 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.896077592 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.89927661 seconds)
  done (took 9.415012146 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.88197971 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.631229939 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.883574265 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.893837117 seconds)
  done (took 21.112344138 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.647655054 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.655770609 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.639477574 seconds)
  done (took 9.766723094 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.467334057 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.807137233 seconds)
  done (took 9.097300365 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.150304029 seconds)
  done (took 3.97413762 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.028685671 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.162534833 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.356665481 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.387961776 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.447233537 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.782957644 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.212863406 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.147629578 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.286025792 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.339834272 seconds)
  done (took 24.977112812 seconds)
done (took 140.810251218 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.278663781 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.140318784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.0992495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.234748317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.17774971 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.101938763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.31456334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.218873989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.740844866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.737445404 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.23216452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.127171752 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.04237664 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.135549833 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.044501798 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.136797236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.193012637 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.29545482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.969428793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.128698102 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.307599396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.872264343 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.073772114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.885341838 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.169254304 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.05591481 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.451608317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.142700907 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.119388986 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.460089237 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.059296401 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.278758797 seconds)
  done (took 174.050080338 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.818386599 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.896896042 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.897256467 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.897275093 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.379542969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.903304419 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.896740475 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.897109241 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.195886949 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.171612514 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.917749067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.414360389 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.915515171 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.898265445 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.909170038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.906204763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.295150533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.917291243 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.916310046 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.916993889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.919794045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.322628629 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.914258998 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.391779863 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.334214918 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.915700664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.899393638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.920663266 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.905008466 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.906373378 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.909719717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.900313325 seconds)
  done (took 210.029870064 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.899280937 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.899853986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.901772244 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.900433836 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.903217329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.90855552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.900772664 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.899697002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.447941808 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.472175867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.925978437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.908142855 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.905208762 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.900135541 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.906186279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.898418383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.918660987 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.910970111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.907160677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.907628333 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.911701925 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.588169877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.341177838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.714920185 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.905712334 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.905700418 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.90992589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.917949828 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.918530074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.921697125 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.921646221 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.905019333 seconds)
  done (took 221.92888384 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.103638661 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.908707975 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.910438487 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.864280199 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.90994141 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.908405739 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.901376382 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.106723781 seconds)
  done (took 19.466505866 seconds)
done (took 627.316220583 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.434107876 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.211988379 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.087612102 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.927528729 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.186383354 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.969065342 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.924574117 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.993784 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.127181095 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.003343343 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.575146169 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.94577082 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.655875816 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.952142162 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.056561132 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.983413255 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.487863719 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.573211953 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.109758909 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.004549392 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.099380309 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.901257594 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.000880232 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.164472591 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.690397463 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.913408665 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.116045854 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.497021323 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.937344428 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.091617124 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.65738075 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.337194192 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.938798754 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.926137179 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.97689621 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.958344928 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.291098287 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.93673532 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.050603416 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.671704975 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.002282633 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.003189387 seconds)
  done (took 106.205107742 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.901028341 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.89833609 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.897474646 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.898516052 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.898733606 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.898828019 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.897323567 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.898181123 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.899170158 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.897529137 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.899295394 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.899721511 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.89852009 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.89970247 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.898765129 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.898831063 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.901078044 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.900162915 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.898496102 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.898894917 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.901369345 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.899663167 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.900092925 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.898764472 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.900895532 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.900611666 seconds)
  done (took 51.227061592 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.91958706 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.051238599 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.136913567 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.929564589 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.909927758 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.913103284 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.928913277 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.917073591 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.913765357 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.912528957 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.00446089 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.915634515 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.929090723 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.133733876 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.927372725 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.909514627 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.910644884 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.911003631 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.059233354 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.92747842 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.930862631 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.915167868 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.931791245 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.927041434 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.913223975 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.911406013 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.914908959 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.375847799 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.920225163 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.00762618 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.98738928 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.932677657 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.344877293 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.14405529 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.971787435 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.915217118 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.912277906 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.011802407 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.919854603 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.913373669 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.929960101 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.918977585 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.136466921 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.416094804 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.925953468 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.911751888 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.387341095 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.018318498 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.954415115 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.92388783 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.1397299 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.928728841 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.911974538 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.915931685 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.950801236 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.923208805 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.912998386 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.27464342 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.927041708 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.932923813 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.9164084 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.916833742 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.066090673 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.921563877 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.056788467 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.922574425 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.921953956 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.914990066 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.134932688 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.928838783 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.415890586 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.926483069 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.911317377 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.00979197 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.059656412 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.413508206 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.926350377 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.069061411 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.360360054 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.940123108 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.921325287 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.366875907 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.943295156 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.921128661 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.914072623 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.913595242 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.9126498 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.957185816 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.930832481 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.35272907 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.427091851 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.287831374 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.942376749 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.930918381 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.916407671 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.276917828 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.921909877 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.914493246 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.1305668 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.436811612 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.929441115 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.923611866 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.406220597 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.930246009 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.937202356 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.928412687 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.141007317 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.930884709 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.958372403 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.915028543 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.92449864 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.920020424 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.935889608 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.925108457 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.914906144 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.395592551 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.027905732 seconds)
  done (took 237.237119826 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.91351275 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.912047204 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.910977686 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.910725522 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.911099996 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.916047892 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.909517947 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.909850065 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.916531549 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.910358644 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.913582188 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.914789425 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.91348098 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.916309728 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.935479745 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.917609315 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.518200623 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.914880335 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.910774813 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.912129596 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.559835166 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.915949742 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.913585698 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.915352548 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.916654307 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.912284486 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.916584822 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.933010824 seconds)
  done (took 168.714518421 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.917846369 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.036616152 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.935721009 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.945305526 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.922922114 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.916770749 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.944114036 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.933486355 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.925818474 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.914850566 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.91616165 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.981739961 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.928674754 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.017389684 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.950736572 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.947244395 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.023033136 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.924753451 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.915595109 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.914119238 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.947666938 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.917295851 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.981160013 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.045887846 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.932753789 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.035828522 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.927333548 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.917049347 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.921128092 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.037584609 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.931050023 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.977415429 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.946289908 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.938210441 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.040803479 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.035380187 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.024162914 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.947988945 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.924251861 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.915967008 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.916653736 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.911008895 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.037856035 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.935374491 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.92247547 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.029470035 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.935061548 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.920603063 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.927375481 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.916778248 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.934315375 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.937963768 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.987717892 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.050139471 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.949192732 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.945456275 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.946578176 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.213330335 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.930738997 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.020109389 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.918676391 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.0382518 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.937901746 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.911624112 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.919329653 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.926526213 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.948593773 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.953558191 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.027972956 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.928915203 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.023214337 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.954659892 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.926734979 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.917719832 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.921145147 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.037362864 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.03969735 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.956309631 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.96007989 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.953525822 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.918807361 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.922992546 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.91324008 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.940590922 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.923000366 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.035241759 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.038052052 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.927803069 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.921892279 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.923107393 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.921624952 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.9476645 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.048329314 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.9547817 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.022093451 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.990992317 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.995790549 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.934172291 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.93291803 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.923586151 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.986094367 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.932916092 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.931761852 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.26339114 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.994353031 seconds)
  done (took 207.917934441 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.01870663 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.390766038 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.973388858 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.977153076 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.213249317 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.353896465 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.718819072 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.967827184 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.97201117 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.997152523 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.133675305 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.02673531 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.98396984 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.961391103 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.39992536 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.964147266 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.971055545 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.991799104 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.973037177 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.504860256 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.28067044 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.095377385 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.969875175 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.080301149 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.952372321 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.247983005 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.464438135 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.359432342 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.005644841 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.320422502 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.307168316 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.653688426 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.189318024 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.215121614 seconds)
  done (took 76.489262952 seconds)
done (took 849.623556071 seconds)
SAVING RESULT...
DONE!
