cset: moving following pidspec: 9905
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.36409159 seconds)
loading group "string"... done (took 0.543284321 seconds)
loading group "linalg"... done (took 7.007450732 seconds)
loading group "parallel"... done (took 0.152940845 seconds)
loading group "find"... done (took 1.082876435 seconds)
loading group "tuple"... done (took 1.692043869 seconds)
loading group "dates"... done (took 1.163427748 seconds)
loading group "micro"... done (took 0.211103421 seconds)
loading group "io"... done (took 0.978492859 seconds)
loading group "scalar"... done (took 36.075855169 seconds)
loading group "sparse"... done (took 11.173787893 seconds)
loading group "broadcast"... done (took 0.905106273 seconds)
loading group "union"... done (took 11.639741379 seconds)
loading group "simd"... done (took 4.111463719 seconds)
loading group "random"... done (took 8.661193103 seconds)
loading group "problem"... done (took 1.926121006 seconds)
loading group "array"... done (took 19.786533857 seconds)
loading group "misc"... done (took 1.630159346 seconds)
loading group "sort"... done (took 3.246804506 seconds)
loading group "collection"... done (took 16.220564072 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479374108 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122673518 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113109954 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118051625 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145859708 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113972218 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121884499 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083759145 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.841883512 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146159232 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119217502 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411860259 seconds)
done (took 5.165471716 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173852258 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082476022 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081554521 seconds)
  done (took 1.327176047 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065299908 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121521277 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066150197 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066609252 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06689175 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066124601 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065746846 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066012258 seconds)
  done (took 1.682433585 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073255891 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068752923 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068235309 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068308635 seconds)
  done (took 1.443492574 seconds)
done (took 5.866331674 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.762426379 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204229168 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182412559 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395635751 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129024671 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15327971 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642723501 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.305658332 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18235493 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080940091 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103934334 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.31542418 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107355003 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64506473 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073576006 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089874555 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138130209 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.414761042 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067206482 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082123674 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088451638 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128126599 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085040214 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074158917 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144266289 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067606791 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129576235 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080129475 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066332558 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206452691 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172429964 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660642229 seconds)
  done (took 10.181728752 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095301951 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097084888 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068374178 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136275785 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095741584 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06963519 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070920632 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067183752 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086694116 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12729739 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088394191 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100587588 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065628024 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069057341 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084073998 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20336092 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08180848 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080959552 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070442077 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075216509 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118653563 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07846657 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077679923 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077491928 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128229393 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179520539 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096598503 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097111072 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066639435 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07971408 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114800205 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125481591 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065060407 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065671577 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123872906 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094362282 seconds)
  done (took 4.621573612 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.28277475 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139788569 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09019455 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132105676 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064852314 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106031037 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065077464 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080315102 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.19937961 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.289848015 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.573140511 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110440351 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103556792 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067845788 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067810333 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066754223 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348284972 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108471726 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104110887 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081197775 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070323156 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068648317 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109611241 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067837286 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063920591 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068144016 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.101368571 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064490687 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.297001255 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12387506 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068264566 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.918057514 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124696065 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066019095 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100329848 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161836117 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.219838272 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141361997 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067871767 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064138797 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149799788 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07036116 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065605135 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082776293 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102886318 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1125755 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065841476 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066447248 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161028185 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064346663 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078133647 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.981842274 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152414867 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075711449 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064423242 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245881123 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086111171 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068980684 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064747745 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.194747671 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133823691 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067611153 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066333827 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067922925 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069391772 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348912132 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065772987 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.990209686 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067279115 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076314905 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069180324 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069573543 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072340837 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074723817 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085524774 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066064446 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064208097 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074919785 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065677377 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065898478 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066869832 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084365237 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35776173 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066372394 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067676591 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064427661 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089817411 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096725036 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067387918 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064715937 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099921154 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.171300287 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066599781 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105070497 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066565372 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064488018 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084153561 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069526147 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113401353 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065986491 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.119107688 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067174742 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097419873 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069540845 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099345514 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080978171 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067966344 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.399716035 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065711466 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065192405 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069039686 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065349154 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067846217 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065824138 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079014889 seconds)
  done (took 21.132081255 seconds)
done (took 38.382713053 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268822487 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075120526 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074919096 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.0748415 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07533138 seconds)
  done (took 1.819620434 seconds)
done (took 3.053464483 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120572783 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098387352 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064221758 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095724206 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063894044 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099150468 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098613527 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080707702 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09880029 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063949238 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095311506 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063965135 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064081059 seconds)
  done (took 2.359278672 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082113664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082416409 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070020374 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082720958 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06433553 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082348177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080186449 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088394159 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080498119 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071737303 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063569114 seconds)
  done (took 2.074271201 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081070398 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083512417 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069403471 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081205296 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06601563 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080704439 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080601966 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085342564 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080785373 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072863758 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063608182 seconds)
  done (took 2.06634429 seconds)
done (took 7.721096164 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076968792 seconds)
  done (took 1.291012012 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.584987466 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.056103647 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081101934 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111447921 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182817025 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118674241 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275479537 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086490096 seconds)
  done (took 8.890262473 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101388302 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068172608 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072438663 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072148274 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068300911 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.0683584 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068625639 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070556406 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069711275 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071349878 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06945368 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070193394 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070740651 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07181907 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069079686 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068716525 seconds)
  done (took 2.434260512 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091455772 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090104762 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073669678 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074181992 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071559088 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071975223 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074083123 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073610428 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070732088 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072345749 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074592442 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073212917 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071054119 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064522428 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073818186 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075184741 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070883548 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074052846 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074348578 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074396587 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074104531 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064239255 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070848527 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073811902 seconds)
  done (took 3.091828581 seconds)
done (took 16.929699628 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113546861 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071086146 seconds)
  done (took 1.405003409 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081974351 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083107536 seconds)
  done (took 1.392931866 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08354414 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06629797 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091935868 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078880018 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066221655 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066284634 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089603864 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065869272 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066087466 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066356658 seconds)
  done (took 1.969576009 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068499749 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078926127 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070898744 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081434133 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073704276 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063826023 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072347997 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068369199 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078096075 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063161184 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071406762 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081999777 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071595353 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083992083 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072580441 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068432851 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070911171 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067580218 seconds)
  done (took 2.539819983 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065877184 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067469839 seconds)
  done (took 1.367853273 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067691027 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063902737 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06702671 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067331138 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063612071 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062520012 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063646698 seconds)
  done (took 1.686800387 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388410791 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110009882 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297911983 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07033224 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08119405 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24771316 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065385383 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070340761 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070145539 seconds)
  done (took 2.676040906 seconds)
done (took 14.272847851 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078041924 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084822367 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095267132 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.360884236 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091847221 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065426843 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11405382 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188352363 seconds)
done (took 2.326178062 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213022413 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611515166 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.38497386 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196042327 seconds)
  done (took 2.430853799 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328953481 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086425784 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058547381 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066728497 seconds)
  done (took 1.788288447 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065469258 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068608066 seconds)
  done (took 1.37752933 seconds)
done (took 7.055040884 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066562107 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082589661 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065887557 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063783984 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065888467 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063659832 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063428514 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065639091 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065565754 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065552053 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065933577 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065725289 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066040084 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065489685 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067799572 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063256301 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063289093 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065438568 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066165008 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063370744 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063117244 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065139432 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063047854 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063324 seconds)
  done (took 2.85426208 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082866313 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066441571 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072074405 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071528019 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069697535 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070913123 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071093554 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065860818 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071189514 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067993976 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069492993 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069606605 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067714369 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069517304 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067912218 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069957181 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071212823 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066035238 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067828005 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070015774 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070291747 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066027785 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069569944 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070491909 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069398413 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069483559 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068174543 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066288366 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07091867 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069484193 seconds)
  done (took 3.340488576 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069106694 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063863997 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06404701 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.0697088 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064136273 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065291864 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062896175 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063690745 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063964735 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062687415 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064479502 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063074721 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063264162 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064218473 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063897722 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066893565 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078382367 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063770805 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063355478 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064255532 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06643571 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063823752 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06394668 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.175523771 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063428871 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062780618 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063400371 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063061199 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064210318 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063494963 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066396647 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06684556 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063596936 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06991122 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067416516 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063328714 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067032439 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063219547 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064094192 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06267633 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06279832 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063537526 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063184897 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069862735 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063383058 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065022814 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062867311 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064507115 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063158123 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065728407 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06259868 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062967927 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064987171 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064179222 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067140918 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062893645 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063973402 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062951659 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063974324 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062878437 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06261791 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062683541 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06557283 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063476174 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077045952 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06990221 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062861116 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064273642 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064130254 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065528772 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065017843 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075917686 seconds)
  done (took 6.044831062 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091173332 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086899011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06531452 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065009504 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06165763 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064177908 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067637665 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063816458 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064940047 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069728115 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064178694 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065012044 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065256052 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076402574 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06399054 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065189745 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069479015 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061855818 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063974008 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067009488 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063991539 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067137062 seconds)
  done (took 2.760750908 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154675715 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070151529 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105054538 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073060849 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067241397 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072736565 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069727268 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069640578 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070141926 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067967428 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067663653 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06988373 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067486411 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067750006 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068267943 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067921164 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06947091 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068130054 seconds)
  done (took 2.62742806 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076833005 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065906236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086218095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066182565 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066351459 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068350568 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070645385 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073900994 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068305367 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065463181 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074253731 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06840789 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067921008 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065352089 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068385382 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065760233 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067860508 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06578005 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073618385 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070099974 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07053217 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073397655 seconds)
  done (took 2.802015868 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079080075 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068482115 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08191151 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068087122 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062079634 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064348235 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070419255 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065722893 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069687575 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066911987 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066093804 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064280047 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069061301 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065435367 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068990227 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065895048 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067375768 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065430943 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06709722 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06141275 seconds)
  done (took 2.62193529 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085925348 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068033986 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066949176 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074984158 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067608405 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066795981 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075234302 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067136443 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067008619 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088373968 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067022269 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06668901 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074435368 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071751956 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066709679 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074847714 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074612123 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074739069 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06684001 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066831124 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08656692 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067075577 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074745665 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066993414 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067329798 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066622412 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067080482 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071920313 seconds)
  done (took 3.266643244 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066767174 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065891553 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063242471 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063359697 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063018296 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063344787 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06301692 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063399427 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065614187 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063306515 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065541303 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06545729 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06602067 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065631138 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065797307 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066019782 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065691385 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063207486 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063224822 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063140312 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065645322 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065597208 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065473626 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063231582 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063176839 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065590256 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06335938 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063613697 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065366334 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063412362 seconds)
  done (took 3.203807971 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074809201 seconds)
    (2/2) benchmarking "in"...
    done (took 0.0727518 seconds)
  done (took 1.417023299 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062666024 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079882605 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063343899 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069367038 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069845668 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066285499 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073319086 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069763483 seconds)
  done (took 1.819010974 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081458888 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077118849 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067554601 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080151323 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07615617 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082250965 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131429597 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06686648 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072666491 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064022804 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079714058 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065137559 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072296757 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06678143 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071333028 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072188363 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063636749 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072313643 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068046096 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06436701 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067113857 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074580386 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06829733 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061517844 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067109242 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087781613 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076801117 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065884688 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068876098 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073752886 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072303711 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060143668 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06633966 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066291532 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064082359 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074831904 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080413668 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068581602 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074515243 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066552132 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076636373 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060998429 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070560561 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072096268 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075875375 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066116321 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066391008 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060957212 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063600257 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068085377 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06127142 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065911293 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060748638 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075146851 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069113053 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076188833 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064591929 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067571896 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068423334 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069158962 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072471906 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067730045 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068836765 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065731072 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07584346 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070259358 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074953473 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061193992 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060525082 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064336937 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075604949 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08846236 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07245875 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066789914 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06689041 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063611845 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068833263 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066989905 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071592082 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071990181 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066274184 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071515686 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073062014 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065915566 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06832904 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074227294 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063772 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068873022 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063529781 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082275929 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064681669 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063713314 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063689927 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076765708 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069472643 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065972177 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06419393 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073386859 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060341957 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066586803 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067187045 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066758496 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076608321 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07080604 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071075227 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074729732 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072627529 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065880128 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067460025 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061383793 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065551488 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063777944 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071729954 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059020909 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067751636 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066024442 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065236042 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073231533 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063448474 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064865856 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071780818 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070196306 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063496742 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06168018 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067022193 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064378484 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067371372 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.072536399 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063389861 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06010444 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060052411 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068077479 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064693147 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068469906 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069232913 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068275974 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059548378 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062893598 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.06950347 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.073180721 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065488861 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066035168 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071085134 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066401043 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063872526 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070687313 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066853214 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064096832 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070045359 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065462023 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060034016 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067457099 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067305934 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06320646 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068103479 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067175765 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066807526 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065703038 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063187815 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071681147 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065460947 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063817865 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064405808 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063519664 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.074528894 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066274015 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.0600374 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061576588 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07280332 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062739592 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064315998 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064140593 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06551237 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065242377 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061882836 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063277436 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065580235 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072407194 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067459082 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064083029 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068812671 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07370518 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063201976 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06611325 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063155397 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064361281 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063995756 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071686385 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068833823 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067380974 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066783893 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060297087 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069079787 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071625 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063581922 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061582839 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063121425 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067309411 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070004824 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066922604 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064762587 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062240009 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064576838 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067083222 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066461748 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063565418 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063295495 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069548883 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062273959 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070211292 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064822187 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.073319947 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067307226 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060159158 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066551337 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062065748 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069816127 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059683553 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062480239 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063135109 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064479705 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063362651 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067129715 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058678656 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070190692 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071358324 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064393943 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063570296 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063562496 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07089853 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06614126 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068087532 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06688854 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069779596 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073349807 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063523718 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067429695 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.308700294 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068086944 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062271053 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073964768 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06746204 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067840451 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068224845 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066525173 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071851394 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078020244 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075134977 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062305415 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07107585 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067278608 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067582793 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063376856 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073598365 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07157042 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069150585 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075379088 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068899314 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068730245 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07194608 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067192301 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068877388 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068200838 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070906224 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068614196 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069620098 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066771277 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069879517 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066721239 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065083362 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069118594 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06738572 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067842002 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072879616 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066697439 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067883997 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070170132 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067892367 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068189796 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068113007 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067075877 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070633902 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067750839 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068513634 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069592608 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062911507 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074762189 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067036239 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075143302 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068099439 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064141652 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075187223 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069251866 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073171798 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068157036 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067895174 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068981516 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066412313 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069985944 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074398613 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06541408 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077511315 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074479564 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067916176 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069616378 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067460889 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068967891 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066379002 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068428243 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068454697 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067563723 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066676404 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071719701 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069940043 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06765568 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068965795 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067519248 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06774329 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067695686 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061154125 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066754918 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066562427 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066840621 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076651695 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067257952 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066542017 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06528779 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067585524 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065991286 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063461944 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074996348 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07578917 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067182214 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073670649 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066524278 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068349795 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07736401 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060901891 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064979342 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064332491 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064456235 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074029549 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067100681 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075916331 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066946296 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065968052 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064651021 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067829634 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065343726 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061135944 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064752601 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070309165 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065949106 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065817124 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066993959 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068988246 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066960738 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075388639 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065624729 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067102264 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066241128 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.198923435 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066300319 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066268629 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069824554 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068120588 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065102802 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064159086 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066642352 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067552319 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068077691 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066815221 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068657532 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076608615 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066377712 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069281003 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070365002 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06193382 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070050599 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066766235 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066452445 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065994918 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070553479 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07091944 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067843874 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076020046 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066290141 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067826282 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067401856 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064979212 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066358211 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066634301 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066923899 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065804475 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06829682 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075347861 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064805725 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070042255 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066519333 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067656677 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07345616 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067837633 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069873014 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074213312 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06706207 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.0686702 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074950361 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071212474 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070084561 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067819855 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068774986 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073140091 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066771614 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073458744 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066819181 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067301086 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068691927 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065118049 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066654465 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066642637 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065864545 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072626664 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067478929 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065433182 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065459683 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065207111 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067391885 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069895082 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074367374 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069278597 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070073702 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062102254 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064301793 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067691357 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064775727 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068242471 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06926957 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072693559 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068940878 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066876865 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065278991 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07540438 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072292202 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070423711 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064776023 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06961776 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067183869 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069141802 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067662104 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066849395 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067927639 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070562452 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068131896 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065779755 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0730548 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06992521 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067308188 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067957162 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067258684 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066550322 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06137296 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066861177 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068037209 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071952008 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068414501 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066410116 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076414752 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064167958 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066477057 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069198918 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065367468 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070513699 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061332502 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067948829 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067033792 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067456721 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061817837 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065435318 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064746281 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068481638 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065436905 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061466015 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076498646 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074762245 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068197384 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.199506071 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065160046 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062474518 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061585478 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066375196 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06770808 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068457437 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076544629 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06532131 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065577193 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061891945 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067016813 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070616701 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070038764 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064363211 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06235982 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066070816 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070236944 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0724791 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06572513 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06729841 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070594698 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06953132 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065660971 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070242646 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063449447 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070559226 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079166508 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068027602 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068319215 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073838604 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074445477 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067816638 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062669904 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067653864 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070062492 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066944914 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067289842 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068041887 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08258193 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069879081 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066222054 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065297735 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069199363 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06598175 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075361527 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067810085 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067707648 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071155361 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068650141 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075973319 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070183397 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074390315 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069934779 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069124977 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066120381 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067175079 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064394544 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065787964 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067585048 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067594264 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071511067 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074322513 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065898717 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076983705 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075306651 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068352357 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063339817 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066072285 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066172923 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061759878 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066987909 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064641568 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064756847 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064390087 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06512545 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067313163 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071229867 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067058389 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066862682 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065888671 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060784487 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068335756 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068160223 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067187769 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062846846 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066317976 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066631153 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070198571 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069229984 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064180225 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06774674 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068073549 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067247259 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061909105 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07290117 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065247667 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068035604 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064965031 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066382919 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066815819 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069509554 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070817564 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067457777 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068796437 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06991738 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068238122 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063721823 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063281428 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071050628 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063932104 seconds)
  done (took 42.412714163 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10003688 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063649294 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062904758 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062089037 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074900373 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063514726 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062314449 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06343863 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064038544 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066246132 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062708556 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062590338 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071526566 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078640082 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074351077 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067164082 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062695116 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063826411 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062950894 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063491898 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071860022 seconds)
  done (took 2.829397375 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074456263 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071448729 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073619487 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076270926 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067627132 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070913344 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073352604 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071144118 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076422141 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067818383 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085473007 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071593769 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067727157 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067684963 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067387739 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071661835 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076695534 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068058823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071210388 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073788234 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071210711 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073122492 seconds)
  done (took 2.961437469 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067125966 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066813195 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068530802 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062654459 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06683555 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062149463 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069928065 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064639802 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069851677 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065606545 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065660636 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065931793 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06822097 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061935395 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065997222 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064484083 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109123386 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06973013 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066031215 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067226417 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061885106 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068118148 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061989161 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062472333 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065262208 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070066526 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06703644 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064427482 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066159333 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065855165 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066182262 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063956522 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067995852 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066862739 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065805347 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065240342 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066100591 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065840145 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061771699 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064402121 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066829703 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062500786 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066676508 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067645561 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064378765 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064145988 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068176893 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065838274 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061387858 seconds)
  done (took 4.639724794 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080585805 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109767018 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068346276 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089100629 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080614704 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076360686 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069866419 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089898357 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063722798 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065173088 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081988466 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079753042 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066115512 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.0709346 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073045894 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066125406 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067258 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065259968 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069851913 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065962575 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069796022 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072617136 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08020067 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079077804 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069941483 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06524298 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065316997 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070855675 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078874662 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070774404 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071266307 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071345757 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080712383 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068250318 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065041747 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067824098 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081170447 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066067202 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068323903 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063670825 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067694679 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069748164 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072022519 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081356697 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065688813 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070860595 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065422544 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062523301 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077883942 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068076994 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073488602 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080082629 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069153904 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065934086 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07000665 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08021372 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06562822 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064028125 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06903458 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078103555 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06351141 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069635768 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079558802 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067580275 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072844748 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079332026 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070608644 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069317886 seconds)
  done (took 6.427697597 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07491926 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072642423 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081529079 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080926832 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072580877 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073089554 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072455448 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072847517 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07251488 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077753157 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072953416 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094312712 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067699829 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075392235 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072976022 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072384535 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072410967 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072521063 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072388763 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072232406 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072661271 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07996872 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072230026 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080398716 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098270189 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067817287 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072624912 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072156989 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08054039 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072497671 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079830076 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072166196 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072303694 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080603992 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079645651 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072516528 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065115258 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071957005 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072237734 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072285819 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067742224 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080348385 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072109368 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067219045 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072290092 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071895911 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079694843 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07910985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074833845 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076779781 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07255654 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080283065 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072027231 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072827638 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080203755 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105351274 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080106924 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080495325 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072179692 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079650659 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079728936 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086033856 seconds)
  done (took 6.107650829 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082949083 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074981267 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076877717 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061345192 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064403673 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070835921 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064191293 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064702452 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074676368 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074714934 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077406703 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069928839 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072725601 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076740577 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070295061 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073240201 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069820927 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069850877 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074762528 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070328556 seconds)
  done (took 2.835411301 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074141269 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083607926 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067205036 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072163638 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068846689 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07185457 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068542131 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069903615 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067315758 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068968059 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075711426 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075939069 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067038392 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072100548 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075790271 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071952564 seconds)
  done (took 2.543517907 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07585588 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073645188 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080200286 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066330902 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064400408 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062611766 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065993381 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061570364 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062400164 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077970082 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066008473 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068793867 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066171344 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064721667 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063314183 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069285975 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062340735 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063794815 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0665003 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07861851 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076725083 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064658906 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066852119 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065975775 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065893787 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070985958 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065122106 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063935507 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063017695 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065976166 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066602404 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069320763 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063399313 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063475702 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064131624 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06315127 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065813479 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066018484 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068585037 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065556724 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063805128 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065660574 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066043756 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067138431 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062383772 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066938902 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062546112 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06824064 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064070176 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065951453 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065959161 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068587043 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065944761 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073089731 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06889403 seconds)
  done (took 5.074310798 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07918774 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069850181 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06196221 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063915941 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068437355 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067442225 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069924103 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067728395 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067723207 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064158267 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067785583 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069278127 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067842705 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06977903 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06829439 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069420151 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061972491 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067600382 seconds)
  done (took 2.627126342 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071801378 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066089095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07349783 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06679403 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066340877 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068315923 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062533211 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064507425 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064590475 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0660684 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065633526 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068623414 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064807344 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068322292 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065865897 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065911981 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068038812 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06484716 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066119447 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062153299 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068074606 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064544092 seconds)
  done (took 2.862802494 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092503147 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081442664 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137759015 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079030264 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083321606 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071774282 seconds)
  done (took 1.94677515 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089967822 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079257099 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066735673 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087726676 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07332532 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067490693 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067315135 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067766956 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076223492 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076577572 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067626002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076173011 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076090558 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075205582 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073029558 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072899297 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067422042 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067165026 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066862929 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083916109 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067766113 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075782711 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067559763 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067239999 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067644192 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07559625 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076378253 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076224215 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067695817 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076179726 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07318091 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067780623 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076439688 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076288589 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06945969 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076768809 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067669363 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084411455 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073194613 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075676785 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068726015 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07370011 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075896769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072103108 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075530157 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067873279 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072535042 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067800022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067535318 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085673472 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0731429 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075049249 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073295821 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075814124 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07604401 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086109536 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076136745 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075837199 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073424182 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079086079 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076062512 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073289275 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075332915 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076646821 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074115062 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075791375 seconds)
  done (took 6.28540918 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081688344 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086025023 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068500651 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076154965 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075688004 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068158523 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067855564 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067577532 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067813582 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067924595 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108148863 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068451542 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075636678 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076102351 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068413517 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067692191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067965611 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075833516 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06729264 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085992925 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068061746 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075491904 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075714686 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07560094 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076259897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073783375 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067942779 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068050596 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067843752 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067751385 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072734651 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067984462 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076073209 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067389291 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075822245 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067791359 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067507914 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072955619 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067547064 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072961725 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075731807 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084399807 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067917499 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067470988 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076241766 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067363443 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067669413 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067248531 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067546199 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06761521 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075872923 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076199734 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075915297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075226069 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067731603 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067725867 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067153953 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067535599 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067300337 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072872722 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075470559 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067745819 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08637249 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067769184 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06769218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0755022 seconds)
  done (took 6.198128823 seconds)
done (took 129.75247819 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185789936 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166384736 seconds)
  done (took 1.75053657 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068666952 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097854255 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077088287 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128395054 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06716465 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099898825 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099208721 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077892808 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066387389 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066823373 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.0663515 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068897546 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132035194 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066965822 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066372781 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069082493 seconds)
  done (took 2.730700504 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097168482 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.1574678 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10051233 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065941094 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097867416 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07311773 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065178357 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074994318 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071084846 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065171582 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073561607 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070506326 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06528087 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071040354 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.0713121 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072818064 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064874564 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072921382 seconds)
  done (took 2.844601669 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10117428 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091410502 seconds)
  done (took 1.606581746 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160627173 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106768791 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151370878 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345069019 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167978347 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230486323 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129096163 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.13077302 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119714949 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124012684 seconds)
  done (took 3.076086014 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09957659 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152576948 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255680881 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1156386 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072473495 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095009904 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116006939 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078323069 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081009495 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08077565 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080375096 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076749023 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099099011 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073715022 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073507049 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07621254 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102628878 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072222188 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073951262 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077350848 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099352896 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066143249 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07397542 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073058907 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077376031 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077674354 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065450899 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065629768 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07721719 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074245419 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076798082 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093995095 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077858222 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10720625 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070706341 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108150992 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077314783 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073919507 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074204692 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073963173 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079127979 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078648699 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072290471 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076744245 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065588994 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077177752 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065452085 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065825919 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078003125 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067089723 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078243774 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077011444 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10748651 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067125287 seconds)
  done (took 6.035414539 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101725381 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104745465 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072293082 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111079629 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100195549 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071435992 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101462934 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093707811 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103426419 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070573622 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068766559 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070979323 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082965212 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083454 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112925962 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104535066 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074063148 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070901382 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103961294 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103198208 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069023313 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095509849 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090322401 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10226304 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067865553 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070381772 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068180907 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070852449 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077392294 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078442798 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070368874 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081012817 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084968878 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078915143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067593447 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068398635 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068723491 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08062372 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080194785 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079085528 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078468256 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067729519 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068175923 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069882297 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070527119 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067529701 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079190541 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080278486 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079116408 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069819136 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070406381 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068124854 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069732921 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080928472 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07819589 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.0811123 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080173966 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068829885 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068566164 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072109705 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081385021 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080208385 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079681322 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070005976 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079868885 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068814487 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080693862 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084477568 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068259714 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069738432 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069033823 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069621567 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069688375 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078175335 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078190808 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070136001 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069972674 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068728782 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080368728 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078867993 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068616761 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07737403 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067422196 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068713924 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070178778 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069869126 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078137735 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080072611 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070707918 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068402626 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069447398 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068919612 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067419382 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077298844 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080840817 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.08009487 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079747909 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070338224 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080270933 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079912281 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070462531 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081241086 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068379586 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199398298 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071123172 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079591826 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078670396 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080408642 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070351034 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069623595 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079432297 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081881143 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069571154 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079692045 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082458873 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080759753 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068580951 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083280183 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069880673 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081050674 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071656284 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082084199 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069525202 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080897663 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069837523 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069022503 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070062094 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080120501 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070692746 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0694323 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070703482 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069996386 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080604122 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083521834 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071417906 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08215533 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079319855 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070387099 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079609592 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069661295 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079847821 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070164308 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070827429 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068168104 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083795755 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069340606 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069000525 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070415279 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081704257 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069742732 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080607945 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079415383 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068802636 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083269941 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081673272 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077730674 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081906789 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070446996 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069269286 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068889735 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069739819 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078715714 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080737993 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071520956 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069477402 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07918068 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080182504 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067655958 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078652332 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079291304 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079017562 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068863277 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069611573 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080924183 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081523606 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078893002 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078581097 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078686073 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068977315 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077918961 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078719758 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06855943 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085482721 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068491783 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083355639 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079636 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077991996 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079551101 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081083003 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080899141 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080870435 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083257287 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068554747 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068609178 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080874443 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068948468 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06974555 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078700426 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070324873 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069796006 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083680582 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069161021 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080211239 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067761738 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079127755 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067193595 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069780894 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082947452 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.199391151 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071282349 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081497245 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071025161 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078355447 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082208459 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079600123 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069253879 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070731876 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081163573 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080371653 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069786546 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069247056 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071402774 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080105184 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07872796 seconds)
  done (took 18.843310921 seconds)
done (took 38.30950082 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209670853 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150846649 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198999546 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118533747 seconds)
  done (took 2.193040839 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121870058 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101342576 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095645055 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064965904 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102422818 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065074966 seconds)
  done (took 2.002863202 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314520462 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211761127 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18327109 seconds)
  done (took 2.156334263 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199550788 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187776016 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394750859 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255019425 seconds)
  done (took 2.594446111 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143087278 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089489817 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067351634 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082943263 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134861915 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160462714 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101736686 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126048556 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078041169 seconds)
  done (took 2.48596266 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147488574 seconds)
done (took 13.030647708 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.234716695 seconds)
    (2/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.171060289 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.1184981 seconds)
    (4/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.187864824 seconds)
    (5/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.177928755 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.220485018 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.141119159 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.109200556 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.219329398 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101030496 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151928164 seconds)
    (12/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189532136 seconds)
    (13/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.062830157 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07748361 seconds)
    (15/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.154905184 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072672668 seconds)
    (17/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.173085849 seconds)
    (18/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.126907714 seconds)
    (19/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086711597 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077085821 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.173618044 seconds)
    (22/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069028278 seconds)
    (23/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.194658076 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089719676 seconds)
    (25/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074423781 seconds)
    (26/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.181552988 seconds)
    (27/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.107907478 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100448364 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075317094 seconds)
    (30/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.11310257 seconds)
    (31/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078984214 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.183329822 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096379529 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.158413463 seconds)
    (35/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.163662525 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069676172 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.1698866 seconds)
    (38/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078301558 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072206019 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126557344 seconds)
    (41/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097966237 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071948911 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.194985493 seconds)
    (44/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077313568 seconds)
    (45/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.198046098 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175958065 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075247748 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106694909 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067875973 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066600813 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08988849 seconds)
    (52/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07756294 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072384676 seconds)
    (54/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073266755 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089733094 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071897881 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111523274 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05133999 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074640653 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051983214 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050675334 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066577056 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.101673399 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078844148 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090194368 seconds)
    (66/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.09058432 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066580523 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075848211 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08858558 seconds)
    (70/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075011477 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05207988 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076103622 seconds)
    (73/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.172477127 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065362668 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110724414 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050966291 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088165111 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093869403 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.1819671 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.109420066 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086118041 seconds)
    (82/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072080604 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.183841045 seconds)
    (84/309) benchmarking ("sort", Float32, false)...
    done (took 0.276838397 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.066541647 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072088027 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061706328 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.371729124 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.220732914 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093976176 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093058607 seconds)
    (92/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108388989 seconds)
    (93/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06247829 seconds)
    (94/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.150579527 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07222237 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09314168 seconds)
    (97/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.109376244 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072265453 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068729883 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068842154 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073934389 seconds)
    (102/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073248848 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091128301 seconds)
    (104/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072544941 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17716784 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.166331436 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07651188 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072866328 seconds)
    (109/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074954699 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065078329 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052946977 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089801043 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136365111 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088376952 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128711036 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09510314 seconds)
    (117/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186133024 seconds)
    (118/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.149229228 seconds)
    (119/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.139567659 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.134393901 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073813638 seconds)
    (122/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066026293 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072365137 seconds)
    (124/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070968963 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066191844 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071526543 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.176463113 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096346627 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072010271 seconds)
    (130/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069633446 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070637998 seconds)
    (132/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051843873 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053502959 seconds)
    (134/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073484915 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072458733 seconds)
    (136/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.11018911 seconds)
    (137/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109255738 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06533595 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087692218 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065097867 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072761669 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.195384819 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123254621 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050934348 seconds)
    (145/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051342616 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06616519 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087447414 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165687211 seconds)
    (149/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052892724 seconds)
    (150/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072151926 seconds)
    (151/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072351669 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073320982 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.18817226 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080854702 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07525941 seconds)
    (156/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080209428 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159465753 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080410824 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066821375 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051484177 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093342651 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074680341 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065659171 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151035351 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073817046 seconds)
    (166/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06311852 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072109065 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065018317 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052298484 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071471484 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06543665 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072596922 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113850304 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068063329 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070843289 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15089496 seconds)
    (177/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052262336 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135412587 seconds)
    (179/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05183331 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052807775 seconds)
    (181/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.0985989 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067435391 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072124638 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063587717 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086028086 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065165995 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107893997 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051141986 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073139644 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05238686 seconds)
    (191/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061781846 seconds)
    (192/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145656919 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066999283 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.218451912 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135252574 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066491235 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120467577 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066276535 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064669987 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092696236 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072922774 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065224375 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.0518388 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073602519 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.085570783 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066425303 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12790866 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051805415 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053010166 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051593909 seconds)
    (211/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061139562 seconds)
    (212/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088231665 seconds)
    (213/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052119036 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077296026 seconds)
    (215/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052765522 seconds)
    (216/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074443684 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052324805 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070986793 seconds)
    (219/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051710772 seconds)
    (220/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062417275 seconds)
    (221/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061356404 seconds)
    (222/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117836947 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136656367 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166707397 seconds)
    (225/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067748753 seconds)
    (226/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072457888 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064569321 seconds)
    (228/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069807546 seconds)
    (229/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05220232 seconds)
    (230/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070594102 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052896109 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051273179 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051511231 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066652432 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138972431 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065619046 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133270186 seconds)
    (238/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051530991 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110328428 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140590982 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065914393 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072821245 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.076493197 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066526144 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06668883 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051674783 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066771554 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067180308 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071083766 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105942381 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052735422 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06574163 seconds)
    (253/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06750518 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090316468 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065312023 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150120765 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053508169 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051389117 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.150174658 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071405494 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052305402 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071908048 seconds)
    (263/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051933234 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065549107 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073429949 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051784129 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078579235 seconds)
    (268/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090212891 seconds)
    (269/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052378508 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052047059 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173674596 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052930432 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107033499 seconds)
    (274/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051987881 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08665646 seconds)
    (276/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052240802 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089454306 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053812862 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089643935 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072492817 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062904676 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051120653 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063939941 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051325709 seconds)
    (285/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068589297 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064374336 seconds)
    (287/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052357905 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072280228 seconds)
    (289/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051576116 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.1737211 seconds)
    (291/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068358084 seconds)
    (292/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072028289 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070666563 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16748175 seconds)
    (295/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052220611 seconds)
    (296/309) benchmarking ("sort", Float64, false)...
    done (took 0.124880397 seconds)
    (297/309) benchmarking ("sort", Int8, false)...
    done (took 0.138904723 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065144231 seconds)
    (299/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065996877 seconds)
    (300/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051368762 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07079213 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065641284 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053692747 seconds)
    (304/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052534794 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051387433 seconds)
    (306/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052524888 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065615763 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081027981 seconds)
    (309/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085169089 seconds)
  done (took 30.507167442 seconds)
done (took 31.970533888 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08337696 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091291772 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07459661 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091526806 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080386323 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076076092 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071550604 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077864043 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079667507 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080920803 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078347035 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054673828 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.0736782 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074384902 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074085532 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091134015 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077910072 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072394007 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072151747 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06461665 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073089185 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06531581 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066857698 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05493223 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077382013 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071786791 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072930505 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073845108 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066043593 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06600144 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069206682 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073419092 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065598149 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078304168 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072158912 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073488502 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074666165 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075988343 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067875509 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065726342 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074072756 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06599011 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072560048 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073476854 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07166072 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070988983 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072903845 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077536292 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091061294 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067776542 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074159848 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075979905 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076292606 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072400862 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069459514 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072948331 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070361307 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091201269 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073419211 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068458748 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07384327 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073351414 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070536975 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072505791 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073240142 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074844458 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075502614 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070878313 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074250621 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070569859 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065455799 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07313077 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068990693 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065670774 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075153024 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076665044 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064521155 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070945845 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071959451 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071067692 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064732015 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067696818 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067017187 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071250725 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067207563 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054392467 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068748269 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071169703 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064122871 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072763778 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071384324 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071820974 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066926116 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075057008 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06428739 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070287363 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065449463 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065447564 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066751401 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068908545 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065095733 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067448039 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073820694 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067013474 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071065633 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078575927 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065201001 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071502926 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064345165 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065297208 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079490634 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074912677 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065729517 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067810459 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065013191 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072581328 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065117611 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06513509 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065669331 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065726113 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070556741 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065186005 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066814098 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072080721 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076857781 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064984513 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067938782 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066983976 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065114814 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070002591 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06501872 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198913335 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067263083 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061863181 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068307381 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065879035 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073396242 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067790211 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072968595 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06701264 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07342226 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070507618 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071384733 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071091546 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065229828 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059326344 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068427134 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068011482 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06819611 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065693535 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066832086 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066186067 seconds)
done (took 12.479294693 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066887386 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142177923 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099358536 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09466586 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086524279 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066334609 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076058906 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102121938 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068233423 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10323556 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087512652 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085469374 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112486103 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065021079 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066039051 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069800299 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067985347 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081864361 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101224393 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086395027 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116223056 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065689601 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094496825 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089824692 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08730183 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092186574 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066794095 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069538566 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06970399 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100712139 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086245483 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070140908 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066999668 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100675758 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092189667 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082982003 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066472531 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082216288 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066442441 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065659795 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06753228 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097966673 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079936023 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080183284 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069540484 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069010745 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066890727 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083563424 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089049232 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078369264 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086399692 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102530724 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068652798 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065936642 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064625006 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085642943 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065358827 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068741453 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066683062 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068365217 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065847479 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06915333 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080913539 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08207003 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070182042 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080107262 seconds)
  done (took 6.856531652 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08359147 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089561841 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082813954 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082957092 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066019245 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066124964 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066168566 seconds)
  done (took 2.087865517 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066637231 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087732594 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089032617 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088755593 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08493346 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087705033 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075884138 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067345808 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080372758 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06751093 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087668013 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102210809 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067283726 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073019458 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09123571 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066671039 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090166484 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0670136 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069252495 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089777112 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068803199 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082239295 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069860533 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066959698 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081094711 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066982899 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113632786 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070447494 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068058687 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069305966 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064716089 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106820245 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080361069 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075377505 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066665157 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080699866 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080505106 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064884976 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082400092 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071025854 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079933944 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066864287 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067516439 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064934765 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070848428 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076771829 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067345327 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067291572 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068675642 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085758765 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067151518 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080267911 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069834931 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068806122 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067612871 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070272993 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076207844 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067250169 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086290008 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068059127 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083445247 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083103341 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080305692 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082448715 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068636733 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080179989 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079957618 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068943701 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068179237 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06979141 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082316285 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064752109 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067909274 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077252056 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06814315 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088745896 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089037797 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067521401 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07588024 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066757715 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066595665 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066588944 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088904964 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068432203 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066472243 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070697874 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069581568 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064670383 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065366622 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070310867 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064516248 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068079879 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06958278 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069732134 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06953109 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082673858 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069276761 seconds)
  done (took 8.814734302 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069517108 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067882794 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070268212 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068204252 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06744127 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068039281 seconds)
  done (took 1.98788909 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093703689 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069431744 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081181521 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072503536 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10488081 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087029124 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087350729 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078574038 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084275433 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079070837 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087209705 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088418382 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093109464 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073020543 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086819115 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072043871 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087260405 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076175847 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078580673 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073549049 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086972078 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072792208 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073116099 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081794927 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076116152 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072067162 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067117262 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079007936 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078130222 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079247563 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072379626 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076086668 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070743745 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078688915 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086987972 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071288726 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071962342 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076969627 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072837184 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075764106 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087685907 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072654498 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074426382 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077221508 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078863524 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070488057 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077326592 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076238137 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086041996 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076838195 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076738462 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071876302 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075022226 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076828298 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070688611 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078390025 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076708086 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086008408 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072160056 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070529619 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068655281 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07499073 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078080347 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075369242 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078975072 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076679377 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070972132 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072728396 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073177918 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072100043 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077116631 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069485599 seconds)
  done (took 7.150183078 seconds)
done (took 28.43815257 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538572996 seconds)
  done (took 2.08175659 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.5974473 seconds)
  done (took 2.164627539 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.599602467 seconds)
  done (took 8.162689687 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39259386 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475936475 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.692427031 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13078631 seconds)
  done (took 3.303294037 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.66953648 seconds)
  done (took 2.246851113 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210313806 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196324501 seconds)
  done (took 1.9922289 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375965907 seconds)
  done (took 1.942584834 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.105638022 seconds)
  done (took 2.674815593 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263183125 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163656715 seconds)
  done (took 2.00359022 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460936347 seconds)
  done (took 2.034172627 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.843799882 seconds)
  done (took 6.417750587 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204436067 seconds)
  done (took 1.829371339 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241413368 seconds)
  done (took 1.816940922 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.701408695 seconds)
  done (took 3.276129187 seconds)
done (took 43.519260688 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080412739 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080707885 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080881729 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077744733 seconds)
  done (took 1.88377188 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07608338 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072002435 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076708744 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072851917 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076386054 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072328357 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073811279 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076196742 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071900205 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07280413 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072358793 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072123147 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074480504 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074038241 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070686242 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074410786 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075772032 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071756358 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075495442 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07234399 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070951603 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074545044 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074527382 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071473079 seconds)
  done (took 3.345198725 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077867817 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072690486 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074911393 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071827288 seconds)
  done (took 1.882706299 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077610953 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091228882 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089491105 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076961192 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092356021 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086272316 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069058159 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068924011 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073270063 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077154687 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06797453 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09597932 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087737906 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076614 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078721476 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065706801 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068048836 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085966289 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076578712 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077180341 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069411344 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07676222 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068165122 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088165608 seconds)
  done (took 3.467240165 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077561328 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103064636 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078095089 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087177712 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089796071 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064843813 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074425309 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088833259 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122533202 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065372746 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06986683 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065157057 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072164775 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064819594 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076065861 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104110553 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107552431 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068226079 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09551704 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065150043 seconds)
  done (took 3.231132922 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072708863 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069747619 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065980811 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068583052 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076854465 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07292481 seconds)
  done (took 2.01505791 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068114702 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067312262 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067591119 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066699805 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071387252 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066430283 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066490717 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066951674 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067136966 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067058609 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066647621 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065533588 seconds)
  done (took 2.392430411 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.170099922 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069027264 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06970099 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066426547 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070802413 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065903446 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079814532 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067892002 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090502532 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066258287 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066358556 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068610385 seconds)
  done (took 2.53804647 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207397759 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076032497 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236333897 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13678932 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111091002 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114955453 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103854757 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113043193 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143477105 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101898521 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167071627 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16530258 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107098959 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13751598 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088798942 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097575354 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155238919 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161705498 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103281672 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16511033 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143722197 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124355015 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145782488 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101351875 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105679749 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121704365 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070929052 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07960593 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170082687 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130549754 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146220052 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110339099 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093175703 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175665586 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170235216 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142185409 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134015943 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08401022 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102654356 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132571744 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198673911 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088082678 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163985774 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246137565 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081488116 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133305225 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120371 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119791909 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107293962 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090215656 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146229157 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184459807 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13920194 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086203415 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111683094 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115328252 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117174244 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103632279 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181488465 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161050092 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127435599 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070781889 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099441924 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153407869 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131881668 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107795991 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126854577 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093431262 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133765611 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153207918 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118245129 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142813789 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128214094 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088298937 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118205466 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139454521 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12833795 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169701972 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124375277 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072204342 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124569446 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103339503 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080749389 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141204816 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075255585 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174914392 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09842751 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105935155 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112944133 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108256296 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108436077 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161166746 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284790336 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104097673 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066152533 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10402115 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120134423 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148308793 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086663392 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10798039 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117241966 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078474835 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140046016 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07498241 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124135364 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075082875 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125103782 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132444521 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075828151 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121953936 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100799993 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100387554 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133691303 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160067042 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089288427 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082095976 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16627047 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122078508 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104817931 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144219552 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157144657 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098996246 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102528567 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150494121 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179681195 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089057707 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163274015 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106659465 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083132127 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08743852 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123135026 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111893232 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122077127 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081575257 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118232687 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167535237 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074237786 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094792484 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133431097 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078969409 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081046092 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103598898 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100858016 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094373276 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099864553 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104002899 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136962886 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122533597 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24769878 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12624622 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098170915 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171486811 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089669085 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099918524 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104335904 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069559234 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13807603 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1572664 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080128067 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164696195 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123572816 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105164094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119628184 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083112802 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140190406 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078475588 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070076967 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14502612 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111041279 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11088598 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149244172 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104778654 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127153575 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.12016776 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13474646 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133498652 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127603696 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104577447 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088088316 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111222707 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125608493 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072371101 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09135189 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080505281 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103974932 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095509298 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083120464 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142664193 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124776524 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100505578 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111464902 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096783956 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146595658 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076317235 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128771752 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118855083 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094691773 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151907463 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151108366 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130337362 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099064464 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143808167 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069679349 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215270727 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090473371 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124614337 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082542318 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082881847 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116819143 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146963031 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128741758 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138687467 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112023399 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121066752 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154727061 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069553315 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114980862 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148298708 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121291993 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104293617 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090310201 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098520721 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14170373 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107123156 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181678566 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113697189 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126026311 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152866593 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098927403 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079259325 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108390288 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135597456 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104438659 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144176541 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09922412 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087743864 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109826591 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074137703 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100201545 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127439495 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119966368 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13521062 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11430206 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132960712 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076864667 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116472624 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120166108 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122546425 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063807122 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120043418 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161087103 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093632745 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11809442 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152314388 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078600835 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.1235471 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.31929775 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147403168 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085313633 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111159155 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11920607 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127990015 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119383625 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140651975 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108522667 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134635319 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10918673 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085155403 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087079551 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096677866 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10523608 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094788524 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107978039 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114077 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095520394 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130637542 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103303269 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108894113 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117816796 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097388048 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089455449 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097013736 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174661215 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119832955 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17228906 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098266088 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144393288 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164624887 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074158398 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078560226 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077908315 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140176936 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08409935 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13046266 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097618894 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10554892 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124197268 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141813317 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095147653 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068262419 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108278018 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136819631 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112133246 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097942259 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104667579 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162170878 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099829352 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07923069 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112787331 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104409971 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101661287 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315684327 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061588525 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097362093 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076016417 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080762904 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127842331 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153980788 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081016767 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102595921 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119799801 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109804432 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12751447 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100986341 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099668404 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114629275 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150130171 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129005601 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089783006 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112918147 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13010333 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15688519 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104981584 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095061463 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171140764 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168920274 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159470986 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08863066 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113833004 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113648523 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108234809 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139110883 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082998978 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163534249 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081649883 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136035181 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103736932 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089867346 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130421556 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098422117 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087910371 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147902372 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117536496 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082148039 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077749565 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117717799 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119831862 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106529807 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074776786 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138186668 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072221612 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131100087 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168068773 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224933035 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10407698 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096834366 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080055383 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108854465 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102671913 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090904093 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098915216 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173024148 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087799061 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14992355 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141585128 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112990454 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137144709 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099032897 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63598579 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077569844 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152537578 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11733545 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172705738 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097363498 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117549305 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108971568 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123071265 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144710815 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105350189 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175335095 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131396048 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115798226 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079940609 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102707249 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102700442 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088555615 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104822176 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113117874 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116149974 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093605742 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115510579 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122924225 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081676061 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094853477 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155723318 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11678338 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143849589 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140122983 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084953232 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117508332 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138354125 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079866556 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12141215 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151221749 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105726151 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241520286 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080455218 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103206428 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170079129 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072887017 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1641434 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119747153 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109690197 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113378832 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114270165 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131349749 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10681354 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12192336 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093799066 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110477383 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113589528 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082385944 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077189243 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103418563 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112933478 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09699561 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09825401 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098237982 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151934821 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070519175 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096348292 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103322466 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145250452 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1745227 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087539924 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082794035 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11861827 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112243183 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112358015 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120282498 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079076414 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082204179 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081595225 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077216912 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107908046 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112065232 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104271852 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11156091 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163908394 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082470327 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223533157 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09492669 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104412474 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069675513 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078654886 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095688117 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09704637 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108007012 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100780016 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169545175 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094382685 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089526756 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09224263 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.216390298 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08356725 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127052355 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111909965 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120056162 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096976845 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062200202 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108646381 seconds)
  done (took 58.858473467 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109562038 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082288684 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095935836 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150131771 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121937876 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21162726 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157251677 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199339945 seconds)
  done (took 2.816834884 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068398607 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093901882 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100261537 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082864434 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067240374 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068772243 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225023367 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080430236 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066197512 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088504873 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079089374 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069031796 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.420029081 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065884131 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068053409 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062893386 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067031475 seconds)
  done (took 3.454466068 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.364549162 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598832818 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372175753 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073154247 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.857451991 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090336509 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.042514804 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128554027 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072941824 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538431741 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700765368 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124306053 seconds)
  done (took 18.654383329 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075555251 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070510019 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083930436 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08324232 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072799746 seconds)
  done (took 2.073841335 seconds)
done (took 108.228836041 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080359946 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391661541 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053851414 seconds)
  done (took 2.161873043 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08314304 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084397922 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083825018 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082577836 seconds)
  done (took 2.032744375 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074631326 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076197196 seconds)
  done (took 1.843595983 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222353248 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138459608 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086683196 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081498911 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077434075 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078283548 seconds)
  done (took 1.936101024 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072436391 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074955957 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072664505 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075628889 seconds)
  done (took 1.990302058 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076678859 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052877789 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054844917 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055698209 seconds)
  done (took 1.93599694 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086336968 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078878277 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.0789399 seconds)
  done (took 1.940439017 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099900212 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084399868 seconds)
  done (took 1.88115095 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080997119 seconds)
  done (took 1.777718393 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098210087 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112413442 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129716258 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108924951 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136650702 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108818024 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085319247 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086533079 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076774826 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087201846 seconds)
  done (took 2.72676238 seconds)
done (took 22.442168274 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078209631 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.360651643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360518017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089412571 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666957842 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356096051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986807163 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092116807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113313194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067374402 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083579764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649547164 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977265138 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321848353 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963621799 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32376498 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649874238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068516006 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067684382 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068104951 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973096245 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067891082 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067874638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068094823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64786579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370784079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067811139 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324025451 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06775765 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069693543 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355210193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068238427 seconds)
  done (took 16.174255481 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070332927 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117980698 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073984845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083371032 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070297805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069379845 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.0713897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068854722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119321906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067644881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084345106 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068146372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07163226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06884563 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086922288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068230137 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069346265 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068579489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068034085 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068568056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086196396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068344038 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068975248 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068360746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06793297 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079377617 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06810207 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067995822 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068328377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070241083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071282121 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068490066 seconds)
  done (took 4.096090975 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115510108 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125188538 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074390926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103289613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113204189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069982643 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143028147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092798648 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127002943 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06821812 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084197817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068004471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100546788 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069086218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087692427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069048759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069193696 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068709613 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068230677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068480933 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08686525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067974022 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068248506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068318882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068569695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080964374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068752594 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068551995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068487088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069835079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071502622 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069141213 seconds)
  done (took 4.352242946 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072293358 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07445815 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082439748 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08351657 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069120748 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071990485 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072197384 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069404581 seconds)
  done (took 2.306878455 seconds)
done (took 28.627912093 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079336319 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06851794 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072401978 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080447934 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073868362 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078517481 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067394961 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074420047 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071747942 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072876268 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074529316 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067172692 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07138825 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066779861 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073552687 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067529503 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078856758 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07184726 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079130609 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079396766 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069681924 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072715223 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074285613 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079254791 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078725819 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079268406 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077747521 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072681376 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069521494 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070771218 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076286868 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083864731 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068832588 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07962744 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06839822 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068099465 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071848625 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068040072 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079588175 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076398525 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069812869 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076149491 seconds)
  done (took 4.791439144 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087171544 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090938124 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083927361 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06185255 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066569701 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064805085 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088280062 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059687345 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059624825 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087522452 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056071641 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059342968 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062332882 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054363885 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059103824 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056537449 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061750111 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055951331 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059593156 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059589337 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058199453 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054303488 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060264972 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062406514 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059286951 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061749239 seconds)
  done (took 3.409887489 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073873059 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083379776 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088447522 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126727654 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102864642 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077015835 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077538533 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092397751 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085452206 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066967107 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071163804 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093410854 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088130893 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074040982 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067854629 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084287667 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082123181 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069159128 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073564159 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090415694 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083580998 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082902057 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091733272 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080384244 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066441634 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069261923 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07099907 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080565596 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071976824 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076440834 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070946155 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070517445 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069307568 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078327873 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070578533 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068908404 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089867538 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076570632 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077271888 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068081022 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070497448 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068811255 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089074853 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121710501 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067070411 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074269824 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074915458 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076960159 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067439892 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085632944 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078525034 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067468541 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070641267 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066480598 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067753428 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080239381 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069360938 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069759316 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07625649 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070440877 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085872801 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070915309 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082568216 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067455732 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074963142 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067062116 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068196825 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066367937 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092540728 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0688085 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10824907 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068420798 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068454143 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076561857 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074683345 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07331584 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068134584 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082259136 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077196785 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071264408 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075855664 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070948872 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070532302 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087616978 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069966415 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069102679 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068602867 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073753658 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070360933 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068777974 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080098009 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067607754 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070463239 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08391237 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067596066 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068882735 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07363446 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072227159 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067786527 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078417274 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072192362 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067949792 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076543288 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067480836 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070293395 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077515611 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073952157 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066373144 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072075208 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074025732 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068405557 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069223699 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070761546 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069490742 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076014169 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074179948 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072445669 seconds)
  done (took 10.607038503 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160012138 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153665709 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070288697 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145848945 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075904279 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078980535 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147383942 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094183 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06802252 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068579854 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069070211 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109756485 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105702082 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115283027 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078470443 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068022711 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083321294 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113911188 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149152673 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143218232 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083617736 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076638348 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069828775 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06926062 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070780128 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078920359 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085821077 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07690479 seconds)
  done (took 4.460804953 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082194435 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09676822 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074720278 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089713986 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090790784 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067763378 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070269555 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06989368 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080577215 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078835122 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067961748 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073780186 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074691629 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071476131 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068816479 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075185954 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075196672 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069517656 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070886211 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072787437 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077682479 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080745317 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071259849 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067100406 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074214175 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066832622 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064767898 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084584697 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067993428 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089868134 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066107531 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074678237 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081900569 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068518832 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067447485 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067674569 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067849715 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067241541 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068934193 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066450551 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066114002 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057286651 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066850947 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079335817 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07368812 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056503307 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072462992 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073036422 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072593149 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06534078 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071126337 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070156534 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071125935 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074797506 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072654478 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072666333 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069134404 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065486907 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075732313 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067595411 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064871291 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066221803 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072186179 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066187289 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075784664 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07219841 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066436766 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067128022 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069247485 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073574103 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067479553 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071130384 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065305439 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068947516 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071964445 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06882221 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068134922 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06563906 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067164048 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067993179 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055496526 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067310925 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053884083 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070459502 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065338124 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066011377 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067280985 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07199301 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079927625 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069303258 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073063971 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068679297 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06642935 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070225541 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059884803 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070044617 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082942169 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082855967 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067201574 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065178813 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082015335 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071714453 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066428983 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056410469 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074424616 seconds)
  done (took 9.199403567 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089278359 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069908771 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08415827 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091012374 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086268601 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075012422 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076690742 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069074547 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082201815 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073591589 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076476738 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068043962 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077362953 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076693676 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069925261 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076924025 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071805969 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083268759 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08186283 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068938843 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075774737 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080117835 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089404454 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080331788 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078470441 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080013106 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08926516 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072063795 seconds)
  done (took 3.946555754 seconds)
done (took 38.119995479 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.784268041 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.964548497 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.788567966 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.168321447 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.925195956 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.908431051 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.901616719 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.78445343 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.116174021 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.829840626 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.026666245 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.846684185 seconds)
done (took 65.767429809 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.833655304 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.93424202 seconds)
    (2/2) benchmarking "String"...
    done (took 2.058723559 seconds)
  done (took 5.722644889 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.094601023 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.392507173 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.034450719 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.786712587 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.793264732 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.094557396 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.600973169 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.323248316 seconds)
  done (took 30.756688244 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.936479257 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.021356658 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.477912531 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.538736868 seconds)
  done (took 15.75480351 seconds)
done (took 63.975875855 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.791977905 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.839084893 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.790567203 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.773209952 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.847647763 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.796180266 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.123770049 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.805459015 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.78873229 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.782778383 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.789620081 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.226480859 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.797647766 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.142732009 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.792230038 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.795946497 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.788587105 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.320492503 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.949071958 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.796598365 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.812980955 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.851063651 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.790871679 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.797705103 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.79071247 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.792110563 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.226525418 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.79539207 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.416197468 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.788160765 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.825471705 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.216384529 seconds)
  done (took 204.572868206 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.789377885 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.873057428 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.935796458 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.833814467 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.222331423 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.971365379 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.896536107 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.390599458 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.795349698 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.800041035 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.024515747 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.794453561 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.072421716 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.773356313 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.82280054 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.867404696 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.022316528 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.103129641 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.831064541 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.963127583 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.804771154 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.920728467 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.866319893 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.024734432 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.811324634 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.862686368 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.951947879 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.79465764 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.981182484 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.965422483 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.83152243 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.840687262 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.013615591 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.663948558 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.797347001 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.809888272 seconds)
  done (took 171.45601476 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.950413842 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.791227913 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.791024365 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.791329957 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.802622638 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.790252897 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.918915798 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.914384848 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.252449955 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.402374731 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.845080914 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.6168624 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.791341343 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.856918758 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.802390396 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.792185554 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.806686798 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.81891611 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.791911397 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.791627565 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.916625131 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.803493569 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.791816389 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.798514365 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.792166288 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.797030319 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.16120137 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.791793679 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.800227256 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.797139711 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798476543 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.052756236 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.792823337 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.792793194 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.681450875 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.494651594 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.88512015 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.794870608 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798106389 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.79260733 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.011294214 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.793702117 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.792942115 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.796173097 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970083254 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.792237503 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.922317629 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.792689933 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.289222851 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.792914599 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.792666445 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.547314525 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.468951782 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.792578572 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.792904816 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.795753064 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.793361822 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.79317922 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.79890647 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.486802648 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.868540246 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.795307646 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.796091482 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799113986 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.793798038 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.946067628 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.795505752 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.309938842 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.854506743 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.91737429 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.916250147 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.797443951 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.862541904 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.88845083 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.795311704 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.794697489 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.794588298 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.794191615 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.794595282 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.875758936 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.795360737 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.919046004 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.802447228 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.795610892 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.845768057 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.863322417 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.794971426 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.684686477 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.79776818 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.794657938 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.114141389 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.861587359 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.795174717 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.794366843 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.795030138 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.795544433 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.92134455 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.919970813 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.592962958 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.796454755 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.478318663 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.797787899 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.931915637 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.796635469 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.980984909 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.799085473 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.878154345 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.801350519 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.79738295 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.795636198 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.827619074 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.79720965 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.851873748 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.796298973 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.166441966 seconds)
  done (took 404.631063988 seconds)
done (took 784.399730976 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.467399473 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.432321579 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.545112065 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.45814269 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.432632914 seconds)
  done (took 14.073921856 seconds)
done (took 15.812046172 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.884528795 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.888494564 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.822151012 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.884618645 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.816721058 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.885262044 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.867202916 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.822012915 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.852797896 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.822989713 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.85526876 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.82288759 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.81088612 seconds)
  done (took 25.775162838 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.040665349 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.055970135 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.868418035 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.027494678 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.844426228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.037234015 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.961284909 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.950860346 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.949401837 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.813554884 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.811248747 seconds)
  done (took 23.101001526 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.036805505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.043606786 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.870458522 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.042732888 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.845120547 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.04316389 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.965656978 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.956004638 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.950166797 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.814486412 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.811486046 seconds)
  done (took 23.1196631 seconds)
done (took 73.734369278 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.811422854 seconds)
  done (took 3.552303653 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.827958633 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.965820253 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.813512195 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.810019128 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.811931302 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.807306156 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.809368849 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.806419815 seconds)
  done (took 16.394784132 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.805639031 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.802940286 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.806550528 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.805695388 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.804096396 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.803085473 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.804029973 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.806393325 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.804675682 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.806154619 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.804376093 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.806388162 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.806576297 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.807431124 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.80534858 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.804075384 seconds)
  done (took 30.625926487 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.806647469 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.804761269 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.805023324 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.805440539 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.804833399 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.805367328 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.806091772 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.805086491 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.8050747 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.805502564 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.806427264 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.805732657 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.806394997 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.805497538 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.805859269 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.805815313 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.805890836 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.805634719 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.810430954 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.805982544 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.806559317 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.80582873 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.806798787 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.806546442 seconds)
  done (took 45.08760509 seconds)
done (took 97.401441862 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.718671156 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.18090539 seconds)
  done (took 8.642788632 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.810055295 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.807852949 seconds)
  done (took 5.394180376 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.808750131 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.809538741 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.808710427 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.809731766 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.809284772 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.809111108 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.808962403 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.809635216 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.809734043 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.808871967 seconds)
  done (took 19.836007079 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.809842172 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.810198011 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.807254816 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.808820627 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.809691147 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.807605635 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.809197082 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.810084037 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.809132482 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.807392676 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.809722372 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.806230765 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.809625595 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.80711742 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.809141218 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.807644953 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.807354076 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.807456558 seconds)
  done (took 34.29851902 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.809445329 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.808986188 seconds)
  done (took 5.363510934 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.807255304 seconds)
    (2/7) benchmarking "second"...
    done (took 1.807525604 seconds)
    (3/7) benchmarking "month"...
    done (took 1.807758875 seconds)
    (4/7) benchmarking "year"...
    done (took 1.806925305 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.807148414 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.807117599 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.807008576 seconds)
  done (took 14.39614756 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.811252257 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.979535374 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.045507572 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.46590929 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.81222843 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.813459912 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.756825096 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.815459659 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.816420231 seconds)
  done (took 20.062050207 seconds)
done (took 109.736913192 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.610133945 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.807389963 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.156891857 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.903698 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.824182357 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.150190564 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.834755474 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.023766737 seconds)
done (took 43.056571175 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.876208263 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.343018629 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.368809179 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.108504766 seconds)
  done (took 12.566662711 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.791150355 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.334140351 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.842119431 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.397651202 seconds)
  done (took 20.132502401 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.176834807 seconds)
    (2/2) benchmarking "read"...
    done (took 2.161353885 seconds)
  done (took 6.088991167 seconds)
done (took 47.411507357 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811727611 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.810025355 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.811911128 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.810289488 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.81192594 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.809759401 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.809745229 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.812188231 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.812661226 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.812293117 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.810108799 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.813462246 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.812960269 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812962415 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.813406247 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81073184 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810795402 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813258185 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.810783113 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810884095 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81091105 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.812636281 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.810078665 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.81026067 seconds)
  done (took 45.223366928 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.813295418 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.810832957 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.812969496 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.813387651 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.811203357 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.813162739 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.813609763 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.810420866 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.81324298 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.813881967 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.810992948 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.810575496 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.813947716 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.810974425 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814067933 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.812320285 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.813411244 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810708641 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813350334 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.810750328 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.814212287 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811147081 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.810758499 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814045601 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.810839911 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811305764 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.81365298 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.81264878 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.815194779 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.812277534 seconds)
  done (took 56.122269261 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.819745714 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.823377943 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.814312517 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.815238627 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.815769962 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.816199969 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.815637655 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.815230505 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.817077824 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.815455109 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.81514673 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.815940464 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.815428727 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.816640157 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.816235215 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.816534131 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.815990218 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.81631864 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.814963789 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.816486961 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.816135277 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.815821095 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.815504298 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.815805287 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.816209621 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.816525675 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.815806903 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.815899143 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.815909686 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.815665804 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.815869348 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.815992392 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.8160858 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.816457252 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.816335582 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.816586415 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.821490651 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.825059034 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.817355097 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.817266761 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.816535397 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.817421159 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.81681224 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.816642974 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.817588538 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.81660828 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.817544784 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.818195432 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.817139703 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.817095937 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.816717453 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.816200719 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.817221819 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.818194733 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.817379103 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.818266628 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.818521007 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.817753723 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.818191669 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.8179969 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.818145683 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.81776296 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.817909121 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.818858309 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.818600478 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.818905352 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.81881114 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.817763776 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.818155463 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.817690008 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.81753702 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.818928891 seconds)
  done (took 132.585199689 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.818024895 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816202033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.815512686 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.815546536 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815883131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.818125283 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.815591878 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818878094 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816285772 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.819077521 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818631669 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.81697591 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815652476 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.819682419 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818804282 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.816253042 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.819224198 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817070005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.819569981 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.821209253 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819814399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.816744179 seconds)
  done (took 41.741726427 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820370643 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819351129 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.816842373 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.820355427 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.816828815 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.820498251 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.820485805 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.820390598 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819735792 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817738627 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818088952 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820286948 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.816921225 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817497953 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818511919 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817577157 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820340172 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.817842063 seconds)
  done (took 34.494361564 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.818350865 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.817586153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.820160062 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.818345039 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.819841601 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.820665928 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81959524 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.821766645 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.821205676 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.818163762 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.82197698 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820660708 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.821644272 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819414375 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821196546 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.819880105 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.821326262 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819203302 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821479919 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81846234 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.822184563 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.822091022 seconds)
  done (took 41.80074221 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821637917 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.821561613 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.819031202 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.818855374 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.8185833 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.821452906 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.822678687 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.819323886 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.822738234 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.822152932 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820020583 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.822608828 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.820352253 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820845163 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.819846802 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820114051 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822884997 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.821838339 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822254202 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.820377953 seconds)
  done (took 38.175620007 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828074707 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827861389 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.828456681 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828638272 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828020245 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.828514416 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82944872 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.828376632 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.828848573 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832264882 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.829192127 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.830178923 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830861543 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.828694186 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829422542 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828888242 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829642223 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.830040646 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.829878447 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829617036 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.830223258 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.829908492 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.830069145 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.829789613 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.830259988 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829863107 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829532994 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.829031693 seconds)
  done (took 52.981436553 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.824152857 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.824266993 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.821988138 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.823286535 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.821649609 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.821138947 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.822417127 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.822816161 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.825373256 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.821542283 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.825574761 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.824732153 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.825213193 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.824644497 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.825414838 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.825303234 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824528759 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.822291892 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822861126 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821782508 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.825628258 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825571777 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.825447813 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.823057256 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822795412 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.825831488 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823344538 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.823295183 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825767892 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.823172205 seconds)
  done (took 56.474434919 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.845294737 seconds)
    (2/2) benchmarking "in"...
    done (took 1.844723076 seconds)
  done (took 5.450001103 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.822957024 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.82709421 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.82617982 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.823872325 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.823210921 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.827559374 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.826210144 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823164195 seconds)
  done (took 16.360573392 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.827012277 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.826433629 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.827354061 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.826107244 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.832164063 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.826944199 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.833203081 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.827411069 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.828125324 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.828872803 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.835319764 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.836256072 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.82909144 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827926317 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.827634529 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829032174 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.826821813 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.833234907 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.833347553 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.828185678 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.832931915 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.82987123 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829843896 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.825817639 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.829309779 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.83917687 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.831687978 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.827146291 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828570873 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.830865053 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.828891679 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.824604611 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.834055008 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.833308068 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.828425518 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.83335638 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.836869076 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829184858 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.834306502 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.834952469 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.828799319 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.826232272 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.829759774 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.829543196 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829810504 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.834308226 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.828526958 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.826363733 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.829466379 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.83277124 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.834693582 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.828957821 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.826710033 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.833779429 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.830150813 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.835536109 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.835344652 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.83370238 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.840430651 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.840283955 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.842757045 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.838018547 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831406911 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.836257082 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.840953024 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.854338778 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.835263145 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.827537714 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.827894378 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.830070848 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.836637376 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.844390533 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.84010955 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.835138661 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.835036489 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.830042819 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.830307371 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.830285057 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.837176471 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.834307682 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.835899501 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.835847835 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841395705 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854242263 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.830375908 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.835614831 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.836115075 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.836983691 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.833345624 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.842754106 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.836805759 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.83075641 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.830751498 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.83178336 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.832834556 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.837169788 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.831814109 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.832338065 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.829970848 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.83145878 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.838108084 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836443638 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.84204918 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.836645561 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.837717051 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.8385232 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.8327823 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.832726193 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.838932622 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.832041796 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.837878822 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.833568323 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.840354068 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.83042544 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.834868675 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.841650021 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.838357207 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.83449838 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.838115645 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.831587875 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843329325 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.859162956 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.832965856 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.833356921 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.837981807 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.84980057 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.838473258 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.836535032 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.833619265 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.830100018 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.83076005 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.835598909 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.832401349 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.834662414 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.83852595 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.835324403 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.830938182 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.833398233 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.840038682 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.835560754 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.834922451 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.833817404 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.834876309 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.836426118 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.83977628 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.836145213 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.839462563 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.834978171 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.836912211 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.836105744 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.832303737 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.834425447 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.83614933 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.839172386 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.835312572 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.839978768 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.835221175 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.840872857 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.8345994 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.834652244 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.835727718 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.836860708 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.840229543 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.84160627 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.839250759 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.834933454 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.833537688 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.835897018 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.836008405 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.836108014 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.835818837 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.83501919 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.839185522 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.848793655 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.835602422 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.840253888 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.8402973 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841582533 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.841708899 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.840883545 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.839586902 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.845364566 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.841878681 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.8426143 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.841764602 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.844315277 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.836460102 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.837103064 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.836569786 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.841213711 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.840237624 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.84469775 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.850094174 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.846685102 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.838546816 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.840942165 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.838131918 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.846301377 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.83987682 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.841468933 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.837191474 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.842363014 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.837063492 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.842709552 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.838720784 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.842072101 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.837166422 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.838448359 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.838058515 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.843127564 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.837604436 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.838600664 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.839853425 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.835558705 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.838454408 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.84352581 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.837509577 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.835701582 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.837664363 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.837807338 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.838022639 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.844502537 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.844634703 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.836739871 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840159985 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.840050751 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.839484145 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.838343457 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.838438685 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.840930925 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.83878485 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.844113466 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.839007259 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.840414545 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.844607156 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.839749689 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.839288944 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.842284735 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.838591541 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.83625504 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.843306987 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.847897304 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.839045975 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.845179221 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.843651708 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840298573 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.839555121 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.845258741 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.837380952 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.839334304 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.839141704 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.841578499 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.836908158 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.840833587 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.841058491 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.841510939 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.841483128 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.840015556 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.840518244 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.84149555 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.84492404 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.845104242 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.847210475 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843671765 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.855170315 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.845495853 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.841969537 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.843552208 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.843624285 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.844816192 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.842653696 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.847125175 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.841211081 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.854118451 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.855000191 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847451091 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.842559834 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.84135173 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846267903 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.843754242 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.846210602 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841334636 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842982806 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.841754678 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.841746172 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.839490818 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.842606662 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.842058585 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.84334148 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.844741035 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.846107507 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.843335716 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.841829247 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.847589913 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.846840439 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.8421875 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.842279201 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.843082561 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.845235207 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.844506943 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.842966923 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.843280682 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.849054979 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.842544768 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.844661075 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.843129917 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.84345844 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.843022028 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.844532071 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.848119671 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.846286419 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.856278149 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.846782039 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.853749148 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.845021603 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.852362978 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.848688775 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.847158298 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.858050225 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.84100226 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.844199565 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.844296269 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.849400048 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.850335081 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.848975362 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.845377279 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.853638766 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.850561853 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.850295008 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.843889886 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.849888678 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.843844246 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.849817965 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.853280318 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.847103918 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.849471092 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.846432153 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.841284137 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.851331255 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.843404504 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.844040004 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.847358229 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.850051355 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.84522662 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.844949842 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.844665975 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.844525332 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.84946088 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.844997409 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.842322161 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.844825745 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850815204 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.846397336 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.855620726 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.844380191 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.852385637 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.850409004 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.852079998 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.851868397 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.845954409 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.851463972 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.845108518 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.847856981 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.84583943 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.848055742 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.851148377 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.847872715 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.851149489 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.851170651 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.847653687 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.84624568 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.851711289 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.84611756 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.857278082 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.875908103 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.848461529 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.851239357 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.844130329 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.848977298 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.857091032 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.852443446 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.84674188 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.851726311 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.858605898 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.855698863 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.847895473 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.852731706 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.848139342 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.852922056 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.847117282 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.847615969 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.853219373 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.847063866 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.847614984 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.853212089 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.850904588 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.84769145 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.84868816 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.849670223 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.849359263 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.857896138 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.852916194 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.848716011 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.852999326 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.84792786 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.848763079 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.849238481 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.853060686 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.84926469 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.848721436 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.850515018 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.856426948 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.856280929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.852021819 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.849607823 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.853989378 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.849412124 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.849722486 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.853654556 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.854222268 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.854003823 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.85008781 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.855234449 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.849466682 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.84863421 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.849384128 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.8504464 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.849001583 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.853570908 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.857625965 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.850150052 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.846440132 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.848586844 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.849764852 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.84869855 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.85073358 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.857936509 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.853521375 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.8612834 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.859643475 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.860006342 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.852580818 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.853902056 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.858990082 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.849935633 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.851226111 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.856133729 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.852428338 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.851174516 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.854428126 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.85596795 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.856630532 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.850435951 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.850848904 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.859234425 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.852318699 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.856312122 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.852730711 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.854973086 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.850639222 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.847941629 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.850485775 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.851420871 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.857275613 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.852661197 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.85686028 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.853084874 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.850525932 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.853347104 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.861488705 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.851594292 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.853233828 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.84876967 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.853053171 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.856804988 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.85086819 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.84906369 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.851581741 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.851812284 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.855627133 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.859907511 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.848980504 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.854071708 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.8534355 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.852844384 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.857675693 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.852309007 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.850218331 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.850156594 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.853382902 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.858016506 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.85434061 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.855161194 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.853117808 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.853911037 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.855624556 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.85858406 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.857245376 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.863762244 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.860724918 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.850045924 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.853294603 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.853401607 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.855946649 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.858616495 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.859509987 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853388007 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.854582294 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.853678359 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.858928451 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.853000854 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.859057169 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.870182521 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.852674654 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85410465 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.854383412 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.857411731 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.85495702 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.851559576 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.855049555 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.855612375 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.857392673 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.867271295 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.860236019 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.861188348 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.855053555 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.856318247 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.859301639 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.858537211 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.862485521 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.856605507 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.860268544 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.8605737 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.860248061 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.870900283 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.855163958 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.865617171 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.885192377 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.85566033 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.856501998 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.861231622 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.855083179 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.86150625 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.858402393 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.862101846 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.855568288 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.855515479 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.860911952 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.857690186 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.862542939 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.85779898 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.854964488 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.855177599 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.856296388 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.857119331 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.852953326 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.860918645 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.856000317 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.861376071 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.861823443 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.861921632 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.857815494 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.869699412 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.866632434 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.856439872 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.862101618 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.853930625 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.859634642 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.860918435 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.867887579 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.864522474 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.862118652 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.862034565 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.858816682 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.862988191 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.85410709 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.856952105 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.85690378 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.85707362 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.8538161 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.871405426 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.871058604 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.861460392 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.859396886 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.86278051 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.858330343 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.859211247 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.863237245 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.863032526 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.859466686 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.859433767 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.867583746 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.858238967 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.859143395 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.861416556 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.866513064 seconds)
  done (took 1101.75631353 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856519018 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855673375 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856349789 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.856151441 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.85639412 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856146028 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.856290364 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.856823361 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.856389814 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.856975499 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.85735368 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855957007 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.857201403 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.857815673 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857043323 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.856642265 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856967089 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.856533665 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.8567499 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856486085 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.856658146 seconds)
  done (took 40.781396679 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.859284996 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.855960613 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.856740266 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.858733639 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856901557 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.859564928 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.857386926 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859452724 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.859929366 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857460365 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.859024524 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860129405 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.857398608 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.85759609 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857332065 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.860089195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.859418654 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.857777107 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.860212931 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.858164352 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.860476369 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.857562177 seconds)
  done (took 42.679920083 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.867264654 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.865957429 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.860518171 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.858514393 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.859963566 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.858645684 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.866238875 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.861548347 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.861673084 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.862305551 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.861186792 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.863205173 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.869897374 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.866960988 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.864329404 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.861064851 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.005149593 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.867360351 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.866887289 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.868473004 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.859643727 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.866439353 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.857846866 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.857307992 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.860674628 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.867106041 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.862038556 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.861170048 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.866989282 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.864030409 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.872189891 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.86119428 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.86296128 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.865259427 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.862110646 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.863811773 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.867264302 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.868036586 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.859627354 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.862742422 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.873435959 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.883716512 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.868181709 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.869073482 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.863252091 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.863029057 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.866383643 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.876698891 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.860323553 seconds)
  done (took 93.305306519 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.863452283 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.862938037 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.860131873 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.862910768 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.863739497 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.863273513 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.863450406 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.863949579 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.861620037 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.861124983 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.863879267 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.861323617 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.860444517 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.863307536 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.864330208 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.861453229 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.861244296 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.862117822 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.862035979 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.861676562 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.861731651 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.864485464 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.864452352 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.862007572 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.864723187 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.862302176 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.862166887 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.864865207 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.862590699 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.862062104 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.865043098 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.864097144 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.863981308 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.863329724 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.861547692 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.865199146 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.864882581 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.862964518 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.865281597 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.862857497 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.865467654 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.864981048 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.864768241 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.866079176 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.862838327 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.865285822 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.863646734 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.863229011 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.863074479 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.866885293 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.865803913 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.863575504 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.865694545 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.863470729 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.866218433 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.866909301 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.86381781 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.862723393 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.865713759 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.863473014 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.864411703 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.86737384 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.865442661 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.867982454 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.867182605 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.865631338 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.864429843 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.867569227 seconds)
  done (took 128.541874592 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.872687048 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.872621043 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.873221874 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873130447 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.873040598 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.873337539 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.873371694 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.873217034 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.872825814 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.873250171 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.873313797 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.868814626 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.87220242 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.867783258 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.872914043 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.873315399 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.873227046 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.872402811 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.872317101 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873053627 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.872646848 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.873157787 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.873018526 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.873918592 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.87328986 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.873616148 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.872814352 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.873538385 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.873714273 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.873889123 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.874146151 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.873223123 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.873856178 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.874226667 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.874616831 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.874621314 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.873253236 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.873168011 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.874224524 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.873124174 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.874251599 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.87379762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.87317369 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.873898888 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.874661093 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.874453658 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.874184992 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.875374468 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.869356417 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.874831521 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.875611796 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.875255467 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874812406 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.875405306 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.874941093 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.870272701 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.875102832 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.875607832 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.874864726 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.87533235 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.874912605 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.869544676 seconds)
  done (took 117.955203545 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.869855161 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.870483767 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.868361765 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.867132506 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.869581448 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.867196573 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.869979236 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.870176949 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.870090118 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.870373142 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.87006123 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.867369616 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866351765 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870010301 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.866963716 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867282631 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8670915 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.868057169 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.869435904 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.867353905 seconds)
  done (took 39.176964255 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.868529027 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.871428108 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.868469191 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.86872864 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.871666198 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.86908859 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.870442605 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870875182 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868770075 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870805275 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.871179525 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.871667691 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869169653 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.867858375 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.871237738 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.868562548 seconds)
  done (took 31.722655591 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.869096548 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.871533684 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.877194182 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.877296022 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.87069198 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.869910632 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.871844107 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.869635563 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.869954565 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.872991051 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.872810981 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.872497528 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.872354834 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.876815859 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.869844932 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.872464253 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.871019863 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.870267079 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.873208021 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.87845309 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.869944155 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.870336444 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.8730148 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.872444006 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.87081065 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.87090621 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.870225154 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.870541501 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.870525671 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.872401288 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.870398786 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.87123015 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.870934501 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.870686942 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.879584422 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.870823725 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.873323988 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.874115384 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.874377891 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.873372268 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.873607 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.87158975 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.874056328 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.873893496 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.871433038 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.873251807 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.871529308 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.872214526 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.871294615 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.870939519 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.873939263 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.879775344 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.874200087 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.874462148 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.874475303 seconds)
  done (took 104.797739358 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.875192715 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.873962183 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.873187507 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.875188233 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.874945912 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.873124338 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.874947618 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.872741339 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.872878953 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.874898255 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.874008139 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.874979144 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.873220437 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.875706202 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.873672972 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.875283358 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.872906718 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.872846161 seconds)
  done (took 35.542629293 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.872810566 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.873448297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.876198669 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.873005307 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.872874284 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.876478813 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.87303584 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.877104383 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875173444 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.873039971 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873656984 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.876675483 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876293711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.876897228 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.874693881 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.874138445 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.875769483 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.876134059 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.874075775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.873663795 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.876941706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.876376378 seconds)
  done (took 43.058644159 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.876479912 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.874898747 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.893989957 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.898437021 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.899672547 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.911554472 seconds)
  done (took 13.164617822 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876628772 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877988614 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.87455462 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879056396 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877745967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875002122 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876124966 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874323105 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878255426 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875358358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873985966 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878025222 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877731073 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873877198 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876914051 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877693151 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87595129 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87491648 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875468323 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87796801 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875682072 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876858738 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87607901 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874329475 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873825497 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875466027 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877891622 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876250658 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875307657 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878192355 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877109423 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875132619 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879188298 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872086493 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874045466 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872712299 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871578569 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873622214 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873791064 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870875568 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.874047972 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87369902 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873433447 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870743096 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874028245 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871453417 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870748858 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870287045 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873332431 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872470608 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871848174 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869917301 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872662369 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87266098 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872597131 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872747991 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870495997 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87068911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873055749 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872471166 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869175644 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872128136 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869597035 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868884924 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873156373 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868211174 seconds)
  done (took 125.50400905 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86795179 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867458415 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867641873 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868406484 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864930545 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865268274 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865724905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865539508 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866310724 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865210519 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868165259 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865733148 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86460529 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865742833 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866417205 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863985325 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863884795 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864666135 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863738602 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868454648 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863485277 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864827739 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864757415 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86418463 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865207943 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867422859 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86458632 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864053211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8654734 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864778049 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865770016 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864935422 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865465033 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865119293 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864797042 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865394577 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864817915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865070225 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864691042 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86819667 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864635928 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868153345 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866007411 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865167515 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866178657 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865383309 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865705803 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866552144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86634559 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866208679 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866542256 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866805769 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867033535 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866522553 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865605037 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865176007 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865467819 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866210338 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865717708 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868502621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86685384 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867051482 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869416224 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866768897 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867285434 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865761466 seconds)
  done (took 124.956911206 seconds)
done (took 2566.101222465 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.919261837 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.937754268 seconds)
  done (took 15.66027907 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.030725333 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.984770104 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.867199485 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.899886085 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.869596122 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.888806179 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.86277642 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.867746226 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.867406983 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.868722374 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.86822289 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.053402952 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.864470245 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.868743914 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.868945587 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.961507185 seconds)
  done (took 52.452676233 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.871962211 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.872254595 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.883433136 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.874243501 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.870558024 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.890558848 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.906081832 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.874483359 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.929066746 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.882868949 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.993999753 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.880525861 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.864193029 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.921241078 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.877714128 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.878928288 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.951341591 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.939057321 seconds)
  done (took 35.965549202 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.941084098 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.868620723 seconds)
  done (took 10.609632039 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.89235569 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.854464084 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.874446369 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.870300446 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.880294397 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.871121527 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.87075027 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.861462036 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.875575676 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.884877901 seconds)
  done (took 70.530130917 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.866045595 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.861660134 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.861077883 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.859304125 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.85268062 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.857910538 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.859282267 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.856150028 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.56731216 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.89808766 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.867328766 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.865383493 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.859341632 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.861388636 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.857146147 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.884861882 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.972304182 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.855465479 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.855411801 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.86471969 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.860338019 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.930191445 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.87271514 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.858073498 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.889058686 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.562822735 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.868627798 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.865122962 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.994249043 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.855703832 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.859745758 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.859330331 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.86131988 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.248458461 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.195038997 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.859550581 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.867009379 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.865460374 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.854898034 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.991329644 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.856244007 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.86189035 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.84939834 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.166335259 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.950255935 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.89716803 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.200123492 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.859184154 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.856070157 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.885922539 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.85889226 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.854836719 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.86733733 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.374408333 seconds)
  done (took 132.236253831 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.849390777 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.139042442 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001668057 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.850971748 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123600381 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054923732 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.848475924 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897655609 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.850198747 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.049598508 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.067183646 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.957906246 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847534746 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.843117361 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.84582078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.843128957 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006790418 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913281288 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.846483397 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.842662984 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87336398 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05492662 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.968038432 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.847129835 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.866108562 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.055588868 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.968093094 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.95184214 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.335720043 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.842051441 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.911771395 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.845090598 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.843058363 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.841571786 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.999383021 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.944103626 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93418405 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.844843301 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.840155937 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.840854761 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.505497157 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040142367 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941681667 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.985980236 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.994640621 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.047008643 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.492825784 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.839710484 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.478341862 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007119601 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.057401644 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.048403041 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.96950561 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.843394727 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.196741826 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.839644397 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.840041533 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07813023 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987224217 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943791916 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842957302 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.838733669 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.840014634 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.083373815 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.843939459 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.937294167 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841450935 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.838840903 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.938610287 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.944619192 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.982348895 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055050762 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.87448736 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.56562819 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.057974805 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.053291218 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91017091 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078888971 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.8404005 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839129757 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925838736 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.592656503 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.038567198 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.087532285 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.060226383 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874114841 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.435449512 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.837003183 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.033450168 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.024335904 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.03406053 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.986918123 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.991742733 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.15826143 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.838291366 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.835179807 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.066711236 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977310802 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.842223246 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.19796905 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073247347 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.466413641 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.861137213 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.136028215 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973491891 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.216379045 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.465899859 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.837887819 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.009692712 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.878949247 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.840037502 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839508213 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.030937423 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.646176126 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83793962 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.659320739 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.904270114 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.841055829 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042505313 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.840755851 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050878695 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842332227 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076688332 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.950229545 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874765014 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.063751496 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.986613755 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.633461401 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.088431649 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.084254331 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.959124559 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.132469361 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.570745473 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.841329329 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.115335804 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.841686051 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.839666971 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.008596819 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.841146518 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988386734 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.842498233 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068747056 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867668218 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996968278 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84418524 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.074829518 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.87779983 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894268834 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84279823 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965814706 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842928911 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.730171018 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.996181108 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.844315609 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.842174851 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.460977684 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.84072627 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987773834 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.072373952 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866935629 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912147457 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.371287885 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840393296 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928835535 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.868489781 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.251560827 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.841449746 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.057254064 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.811304571 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.282955491 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.842492204 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.082589742 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.095584129 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.845216153 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.840977044 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.583295113 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.544377703 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.84198796 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.001991069 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.192168993 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.497014411 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045860215 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845203801 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970543027 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.843733093 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.919231767 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.189825501 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845380401 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.84128787 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.842574821 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.846586032 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.841467507 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.10116007 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.876160522 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.342141456 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.979600936 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059206387 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.152213528 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.062995529 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.890968533 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.84513594 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.104843087 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.848723777 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.908375936 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.843728571 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86755799 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074934764 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.849208465 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.078280564 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095986088 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.753413977 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894625956 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.844469423 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842347385 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.843272065 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.991139039 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935641769 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.848416919 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.843446086 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.955465046 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.96529875 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.037857859 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.437310359 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.931820072 seconds)
  done (took 892.891674225 seconds)
done (took 1212.148103982 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.844037074 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.845707054 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.830647627 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.844405665 seconds)
  done (took 29.147842521 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.851003141 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.847931908 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.85297829 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.848273884 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.852151851 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.84823326 seconds)
  done (took 12.884198051 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.889832997 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.842313971 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.845308016 seconds)
  done (took 21.358196433 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.919501287 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.262049683 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.958232723 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.291039219 seconds)
  done (took 10.214708471 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.856699863 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.855227491 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.857909697 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.852547237 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.852771603 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.852697277 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.851362498 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.856495893 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.853836869 seconds)
  done (took 18.473466807 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.290417028 seconds)
done (took 98.154523701 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.203949324 seconds)
    (2/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.009695022 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.770587913 seconds)
    (4/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.019188274 seconds)
    (5/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.441431075 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.829467917 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.772807176 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.498931779 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.827368978 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.06985938 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.124393473 seconds)
    (12/309) benchmarking ("sort", BigInt, false)...
    done (took 6.845905496 seconds)
    (13/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.976734073 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.885850249 seconds)
    (15/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.935046219 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.874555217 seconds)
    (17/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.083223334 seconds)
    (18/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.834027936 seconds)
    (19/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.939633248 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.854121408 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.205583077 seconds)
    (22/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.909274815 seconds)
    (23/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.440499662 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.732405591 seconds)
    (25/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.375381447 seconds)
    (26/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.707477505 seconds)
    (27/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.018002226 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.675686897 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.938759015 seconds)
    (30/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.831169324 seconds)
    (31/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.887782325 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.015288929 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.938237038 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 8.498965886 seconds)
    (35/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.437065024 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.866150096 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.913997723 seconds)
    (38/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.517379223 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.322662503 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.408587972 seconds)
    (41/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.285260674 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.951924592 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.844303689 seconds)
    (44/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.943217306 seconds)
    (45/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.184584374 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.852410138 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.875916559 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.037468679 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.917499568 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.94833289 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.17544435 seconds)
    (52/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.941237645 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.959786494 seconds)
    (54/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.945932122 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.147579492 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.108314227 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.921948158 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.220505607 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.127302837 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.797691267 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.149916846 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.912708077 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.493384008 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.856639004 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.159928411 seconds)
    (66/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.762543015 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.852728026 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.618201798 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.14807017 seconds)
    (70/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.967967675 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.230193828 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.880835311 seconds)
    (73/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.056308716 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.226970733 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.92645378 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.15379599 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.785458414 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.855429614 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.115303809 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.996334488 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.739802078 seconds)
    (82/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.885421924 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.196306774 seconds)
    (84/309) benchmarking ("sort", Float32, false)...
    done (took 5.630440813 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.551255424 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.076899152 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.360954179 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.963315758 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.730563516 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.897428691 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.512080223 seconds)
    (92/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.352589103 seconds)
    (93/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.151568931 seconds)
    (94/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.930861151 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.944248056 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.878417493 seconds)
    (97/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.986031848 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.110068338 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.16184305 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.095682529 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.876611797 seconds)
    (102/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.935128054 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.177824515 seconds)
    (104/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.871685609 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.853219702 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.737797845 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.855216939 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.129134246 seconds)
    (109/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.958843844 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.069060449 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.130197684 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.008628499 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.856194028 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.111789317 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.962378108 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.902251218 seconds)
    (117/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.83772758 seconds)
    (118/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.21662661 seconds)
    (119/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.226898552 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 2.29666616 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.876551902 seconds)
    (122/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.224240731 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.202433556 seconds)
    (124/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.974347385 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.125524164 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.076049646 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.144095633 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.987922474 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.134351522 seconds)
    (130/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.356632972 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.002660289 seconds)
    (132/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.038385509 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.840093143 seconds)
    (134/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.865470963 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.954319863 seconds)
    (136/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.102373929 seconds)
    (137/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.184038449 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.192007719 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.87378227 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.07485682 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.881198544 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.050300912 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.957522208 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.146303944 seconds)
    (145/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.955034158 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.854581285 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.925625886 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.861515198 seconds)
    (149/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.360722252 seconds)
    (150/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.887123888 seconds)
    (151/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.976891475 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.875014745 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.147669366 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.365176726 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.945586652 seconds)
    (156/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.367488373 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.05971339 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.417391289 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.86192094 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.776204239 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.908163141 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.855072611 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.554972159 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.960663713 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.881108705 seconds)
    (166/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.06894571 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.218016475 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.151769027 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.2508994 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.258096563 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.258228334 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.864550576 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.371642582 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.195217328 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.883644435 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.078202703 seconds)
    (177/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.837796924 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.857789197 seconds)
    (179/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.289571737 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.84107833 seconds)
    (181/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.867927806 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.970778478 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.880585595 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.937115901 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.839991387 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.105923017 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.476462968 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.154014846 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.901239384 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.267608043 seconds)
    (191/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.143657502 seconds)
    (192/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.866361379 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.010061114 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.208801734 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.858978896 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.455997848 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.88243498 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.14902334 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.917635685 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.659865594 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.891907339 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.938439919 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.148529253 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.49260502 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.057735671 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.857910417 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.004379582 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.214675678 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.845314822 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.240507816 seconds)
    (211/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.045175079 seconds)
    (212/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.891299883 seconds)
    (213/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.012414178 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.86064098 seconds)
    (215/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.038869612 seconds)
    (216/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.437806104 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.160510178 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.887829683 seconds)
    (219/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.476005824 seconds)
    (220/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.140483565 seconds)
    (221/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.036962273 seconds)
    (222/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.864089514 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.860981846 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.813127053 seconds)
    (225/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.920076848 seconds)
    (226/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.884553452 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.899111964 seconds)
    (228/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.962932751 seconds)
    (229/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.74004296 seconds)
    (230/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.983300862 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.843166544 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.727504592 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.026471871 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.318852818 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.956372218 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.033077725 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.751649682 seconds)
    (238/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.167931295 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.944815752 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.879926132 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.246026234 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.888435079 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.242600887 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.200728944 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.862421643 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.204285896 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.862071036 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.037520393 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.954993101 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.849833694 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.403084317 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.955374135 seconds)
    (253/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.945779895 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.237125692 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.004805616 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.014567262 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.850007851 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.885231189 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.960624308 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.889015373 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.105760164 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.888619573 seconds)
    (263/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.078176478 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.236736922 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.251306145 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.912012161 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.546960246 seconds)
    (268/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.869591202 seconds)
    (269/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.017445458 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.849764139 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.869776577 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.846679215 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.939670304 seconds)
    (274/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.036939557 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.6596103 seconds)
    (276/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.82153397 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.667379359 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.848090291 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.636266385 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.957793392 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.84636613 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.199865212 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.944428664 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.458417706 seconds)
    (285/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.925661655 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.971413765 seconds)
    (287/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.276249588 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.600968142 seconds)
    (289/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.965785703 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.862694446 seconds)
    (291/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.926344782 seconds)
    (292/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.887020871 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.901328212 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.861505731 seconds)
    (295/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.199612314 seconds)
    (296/309) benchmarking ("sort", Float64, false)...
    done (took 5.668696732 seconds)
    (297/309) benchmarking ("sort", Int8, false)...
    done (took 4.863947334 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.107154956 seconds)
    (299/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.865484772 seconds)
    (300/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.956325693 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.891919261 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.446622182 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.950009778 seconds)
    (304/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.547113697 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.151197099 seconds)
    (306/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.447051597 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.865988195 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.744071154 seconds)
    (309/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.891790807 seconds)
  done (took 1008.818001954 seconds)
done (took 1010.679585027 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.895636154 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889665134 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.874302002 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.895372348 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.984543172 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.903871823 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.884692414 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.876545537 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.921435552 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.924231361 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.87215267 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.901576208 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.87531186 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.873895316 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.87441199 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886955081 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.178318003 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.895888223 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.890247626 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.883553092 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.889973462 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.873116964 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.92408454 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.902401176 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.878118783 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.878130927 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.877225581 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.894032993 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.987212437 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.879270422 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.877851949 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.886055598 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.177972807 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.896167998 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.870072277 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.894398835 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.886373035 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.88465123 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.879420375 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.907368864 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.305592997 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.880000505 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.877367384 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.877869865 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.877620626 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.880856069 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.877640129 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.882579201 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88873146 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889507674 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.304243694 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.895599097 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.879348463 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.877354049 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.887605637 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.876221989 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.880281782 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892618638 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.895480578 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892586319 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.165458395 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.903166788 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.879234859 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.893151258 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.883405433 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.344269467 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.878005294 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.882686843 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.307239439 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.888029202 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.341230986 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.890239653 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.880372177 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.891156202 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.908561975 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.178122717 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.89410618 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.878166506 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.884860772 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.875593334 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.88767123 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890763955 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.88295476 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.879675548 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890811793 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.907327398 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.888243287 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.879474174 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.888540006 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.897761108 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.885465539 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.888951714 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.883090673 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.874726296 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.888420327 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.882222677 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.881089963 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.881601347 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.884361488 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.890630793 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.305725433 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900176397 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.876418115 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.875325363 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.878542948 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.893247801 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.305473981 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.884106491 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.901328567 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.927481177 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.881066444 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.1687468 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.904118663 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.895428845 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.88977821 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.883215163 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.875320311 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.168582743 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.331655855 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.900031477 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.882401399 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.877807737 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895083509 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.881734396 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.877116054 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.18242154 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.903347279 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893429614 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.000563225 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.891885113 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.912122766 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.879376978 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.883753385 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.909505107 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895696858 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.912759206 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.883482693 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895499188 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.896298295 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.877358408 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.891751421 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.892026882 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.881606887 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.887214718 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.875796329 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.910810834 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894028552 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893852977 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.903304547 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.000889835 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.878946916 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.17163097 seconds)
done (took 294.995478939 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.948757121 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.877410464 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.975451266 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.878236965 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.962567214 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.963883212 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.875784283 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.875867349 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.875559699 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.257371262 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.875758703 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.876876756 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.877471492 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.876515935 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.962252463 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.878900879 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.875638372 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.221957234 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.885159502 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.95313925 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.874070539 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.876714411 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.879185392 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.262684961 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.872148338 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.874868074 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.951854324 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.879820464 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.22715399 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.877122351 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.87600512 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.227732219 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.971958235 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.898440161 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.88988368 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.887397172 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.964707495 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.883384212 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.961907206 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.960630513 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.978621754 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.925347783 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.881067357 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.875010874 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.883252788 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.886775552 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.877974732 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.909072656 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.874777056 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.878319511 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.222191948 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.890636664 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.887824567 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.879174763 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.87865565 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.908259205 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.878282959 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.886886211 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.981859385 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.887891338 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.94471162 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.265438304 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.260089029 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.884600788 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.879944049 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.878905666 seconds)
  done (took 185.069487646 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.95023586 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.955054344 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.949475189 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.885005804 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.340070866 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.953946858 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.884831089 seconds)
  done (took 15.737838102 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.887756839 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.882350152 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.932031645 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.931473546 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.88749024 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.033995433 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.884914982 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.894646462 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.880493148 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.936031799 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.883280842 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.883714468 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.892587781 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.884559966 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.931349707 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.894707124 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.998032289 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.885823743 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.889334029 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.041588194 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.880441677 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.891092948 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.93698571 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.895518158 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.884214637 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.891155987 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.471785548 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.890199999 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.881753819 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.882431647 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.883433612 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.927723583 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.883640211 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.879587937 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.881455137 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.999781671 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.889056856 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.882848744 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.884754501 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.884112304 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.885819684 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.882931016 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.884146999 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.881265741 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.884296175 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.909838614 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.884037551 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.8841966 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.883718454 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.885143598 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.935441326 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.885755506 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.882619776 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.882076369 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.941554375 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.892127147 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.892041965 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.882759588 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.884621847 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.882206939 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.042591625 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.934463625 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.884574176 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.932776334 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.885488819 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.884776728 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.886388819 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.884496328 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.939969879 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.88546023 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.934337353 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.882553557 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.048387771 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.909901191 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.886249826 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.889867873 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.889369588 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891942396 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.882523072 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.893790428 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.884932397 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.888650392 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.89223158 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.884364752 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.883819399 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.002010042 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.996128789 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.884841287 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.900222653 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.895198567 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.88684703 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.940015896 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.886433013 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.88368191 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.938910665 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.005739086 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.943589413 seconds)
  done (took 207.348533128 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.890727784 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.895496389 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.888741919 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.9060044 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.887263428 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.886999309 seconds)
  done (took 13.173752422 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.888822931 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.890023453 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.887864185 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.887783991 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.892982633 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.887725153 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.896362849 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.889978504 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.89629221 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.888018998 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.88836882 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.894170931 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.889947727 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.893446634 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.894174762 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.888655258 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.89436773 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.88816637 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.888270619 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892964962 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.034199309 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.89635764 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.894571916 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.890689787 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.892484536 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.887733115 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.897343298 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.889553986 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.888024989 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.897723722 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.89736975 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.889610675 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.892470837 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.895440049 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.899443716 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.894616517 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.894941586 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.894661709 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.886766036 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.889434469 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.892740455 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.895613039 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.888706856 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.894479976 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.891269561 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.893673453 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.895622241 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.897839719 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.897263941 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.894359458 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.893222981 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.88929774 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.890080806 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.894160638 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.891957457 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.89398384 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.896424044 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.895411655 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.895863449 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.892287617 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.890012162 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.890839344 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.892795034 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.899658382 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.898618595 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.894035798 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.891543673 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.898647949 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.895246522 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.890364266 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.894463462 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.887603906 seconds)
  done (took 139.240815255 seconds)
done (took 562.392804959 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.165618189 seconds)
  done (took 8.98759969 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.938147018 seconds)
  done (took 8.864855713 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.281114781 seconds)
  done (took 10.098905866 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.898529009 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.915759829 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.893428576 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.892184384 seconds)
  done (took 29.427418996 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.987202967 seconds)
  done (took 8.805408906 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.893195111 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.881044506 seconds)
  done (took 15.629214069 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.90626337 seconds)
  done (took 8.725256912 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.966046701 seconds)
  done (took 8.787899168 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.908276042 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.90677412 seconds)
  done (took 15.64799089 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.868099954 seconds)
  done (took 8.687572311 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.577871758 seconds)
  done (took 11.407660548 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.884869157 seconds)
  done (took 8.715330633 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.946814968 seconds)
  done (took 8.76632542 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.934568713 seconds)
  done (took 9.754260624 seconds)
done (took 164.128385552 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.883522215 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.882397579 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.881099757 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.882406467 seconds)
  done (took 29.348947583 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.921095568 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.921803756 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.92308414 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.932999389 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.926292302 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.923041411 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.914456607 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.914078474 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.932701016 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.925791619 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.924736077 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.923957562 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.922656646 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.914816293 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.924631564 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.924703234 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.932888195 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.923303602 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.914313886 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.926341693 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.889646955 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.933726488 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.925290267 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.888799017 seconds)
  done (took 47.925800552 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.087355117 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.960213159 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.04251163 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.941429421 seconds)
  done (took 9.8518733 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.942038535 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.942396147 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.952876544 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.992728486 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.025173717 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.951844822 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.916484802 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.910657677 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.897121455 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.942757033 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.019571832 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.958421304 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.026038959 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.889887069 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.074788976 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.890164508 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.889845171 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.942219195 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.993605678 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.00738101 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.890597166 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.941337345 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.945623155 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.958814054 seconds)
  done (took 48.723266296 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.890056325 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.898257131 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.896658042 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.890326287 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.890271437 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.889921596 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.898211451 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.891987749 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.909937432 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.890935743 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.88927215 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.891133291 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.888933618 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.89009581 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.889716578 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.902469408 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.905627529 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.891344119 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.894033329 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.897142551 seconds)
  done (took 39.708379254 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.883804002 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.738670612 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.237474356 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.141599469 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.884789791 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.885086473 seconds)
  done (took 31.594615408 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.903208892 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.89553579 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.891691031 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.946663542 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.026495912 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.898163779 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.89200301 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.90038335 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.934080221 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.95426948 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.908875359 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.917526051 seconds)
  done (took 24.890116071 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.8874639 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.889500534 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.888443792 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.904857283 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.902691365 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.899345828 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.90026497 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.886991302 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.905337632 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.911175926 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.900745348 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.903082835 seconds)
  done (took 44.607219854 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97544163 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.949233362 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.957078455 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571120675 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2646745 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098572544 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.536624617 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.229302529 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.890713111 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162467587 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.040592078 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989692817 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144035865 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269342352 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.914581412 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.356080377 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184356073 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101332979 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91761977 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.601324032 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952292049 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.959214082 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.673600329 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.946961981 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10013181 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.021054761 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.149509162 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889098306 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027108722 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928673762 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899804516 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88873511 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162828721 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279346221 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994008895 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902594491 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.509581077 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.604092823 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.878961266 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.669396484 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.663405849 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.017339875 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899360433 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888764225 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.824125183 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.929313471 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266113615 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.895563109 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.601755155 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890394203 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900399875 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984509186 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.894153168 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.705778874 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808427398 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.891551311 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.887861513 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896287424 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.459504738 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.055423657 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.961691229 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.85707375 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.981931454 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.612696387 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302078735 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.038539279 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.894515251 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894867987 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827347576 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.684165398 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948791526 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240049099 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.911615877 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540534787 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191699327 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.11525844 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833805883 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166952563 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302311447 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.857737126 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119530786 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892027883 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827441488 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.839041611 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.825698015 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180204442 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928367244 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.651596912 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932983462 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.232804181 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.901981171 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911467214 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915703638 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11553333 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.776667804 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891773832 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.800817676 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06924751 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914231593 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232760861 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826566347 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.895967877 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149329071 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.104276438 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.855273003 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.390879916 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053976351 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.323667816 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.939592454 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.934052344 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934272583 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.16263268 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948982647 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.044716424 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945432158 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.893474225 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201467762 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.35730534 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.02474168 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.080639593 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.017831691 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.227584912 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922053745 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9779668 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896844329 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.892079033 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.711782713 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.446501359 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.894357061 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.897224173 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.857830586 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935577648 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.899132636 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842175098 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.514649677 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.057744737 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.907857097 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117358683 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.341099981 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20025323 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828391206 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223319888 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95029323 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.117417418 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.547380465 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.980466179 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155679863 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.860073635 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.887281563 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936793595 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913853802 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993960131 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917354207 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.931465333 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183126696 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.898857346 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.899043022 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.732135687 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.931706914 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902159626 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.900790156 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.654794122 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171071711 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917736541 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.90488192 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.785426449 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.910583017 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959539985 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901244381 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.90685638 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.425824588 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62564127 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.901696759 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.477423377 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121685343 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908023917 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.622629193 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016209881 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.984154169 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170571637 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954176044 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.831874089 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.608357861 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.589952266 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897738358 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833413787 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896984109 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906275752 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907467307 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.093950496 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171894106 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941572228 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.628448967 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.940154535 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909101588 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.902823381 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897999884 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.405521529 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.063761629 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.974973973 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938570102 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041716248 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.911913493 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832292867 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902248114 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903104792 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.898373814 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.898618227 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930306193 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.615554519 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275988593 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159351899 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.507753237 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910997063 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.664257669 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.957373926 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.898198535 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.820095707 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.96563256 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.015772042 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913969205 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.911507747 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.634094894 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.59443521 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.465378819 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209008426 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206577927 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338748424 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.99730502 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.921921243 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253783402 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834668409 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.457246999 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956788354 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246774503 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845293406 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987722558 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.552824765 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255769167 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91443269 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127992061 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295864825 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.732390662 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074691661 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112747156 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936129626 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.937124984 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858603251 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.18768693 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044325826 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.641729475 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111007098 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246908658 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675100679 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.030441303 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.901956664 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.60122327 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989614061 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.614847679 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.074039322 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.963042625 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.956702933 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380873784 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91083611 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.126951046 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253616589 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.97442164 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.021924613 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83785017 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912668007 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91321084 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.904015023 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.896696201 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.782696374 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.155415928 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913031412 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837217822 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.902127838 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189954373 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.802485093 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.90806771 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903424644 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215562696 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.32200027 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072219282 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.888047647 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.413003768 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910711803 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837349705 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837694277 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.596399406 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.910782579 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.878967789 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129291762 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.005576066 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814790599 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.87028261 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979127318 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159658697 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.916839179 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.177552798 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176750571 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.600816733 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9286639 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.004401173 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.687313033 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.018154948 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.904262239 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139512012 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.661876364 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13140594 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.971210417 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.865329586 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.904840583 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11817207 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904825185 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.940321684 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139906463 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.628485824 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.909090758 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346076673 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974746732 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.941740597 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.954139111 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.997392696 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915412719 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984835643 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91618607 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.91634294 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.91618912 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952262668 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.947016358 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.035037883 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.920051925 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004608207 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.070588203 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.426668142 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.911727722 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181854022 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265870718 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.229921291 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965468918 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906965284 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914910048 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840180334 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055459791 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.132421953 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180102628 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.03700054 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.022380349 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930360492 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.673776944 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.003753625 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142622351 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181558843 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.801522589 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.287175363 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942942115 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.907346497 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917897873 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.119214151 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124633291 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23710572 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056394889 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.875325606 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.272496847 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181499703 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.908657752 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90778641 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.498024799 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.916822013 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.726036004 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.949019566 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.942071752 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186469267 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918658549 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297272828 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930752978 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.064276061 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.681822482 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.69857234 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.199243648 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.902143308 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972572126 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183811261 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294076602 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221535639 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975869834 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920240547 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.016159568 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055961856 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.792630165 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.910715581 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91030812 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958964436 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.619862457 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.919889268 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185337664 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219069195 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.908373077 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.797607982 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93386842 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.920120126 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13452096 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180028082 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161804693 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920282168 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.917960201 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.727524143 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188806778 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96863404 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847236454 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.914085141 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012582824 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159283902 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933632134 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.364003145 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.620951915 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188170914 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.913299025 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933431315 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.946811912 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271568859 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233531243 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.443720027 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123788874 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.500479289 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.362628009 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209831948 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.916446436 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.951572878 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213258139 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.916789217 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.876209562 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947201327 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.184066134 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221562838 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.055252432 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.649950333 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.879971841 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.253203484 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472432019 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848882277 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920878424 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.972847161 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.912139354 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.04203476 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924522834 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.8165425 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954029232 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.690634328 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190493986 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.918262026 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.899278514 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.722100709 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.085932757 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944376183 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056023399 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920470203 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.587840925 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.265440864 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168818208 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.885415261 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.918290653 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.916470602 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913631514 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.900812745 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.111643456 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.109615096 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213671798 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.911488404 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.945916872 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916844448 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.129989567 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125270908 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.946824691 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055265661 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882767502 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952587802 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.820686859 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.416457303 seconds)
  done (took 1688.315858885 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.947078615 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.967146792 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.942235572 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.956342718 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930219889 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.987716801 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.984936183 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939738412 seconds)
  done (took 57.507207127 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.913183286 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.112486914 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.922455225 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.914313035 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.923348082 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.913217805 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.077740863 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.922346893 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.923090687 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.923009793 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.914429438 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.913269727 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.221562612 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.934586309 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.914854072 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.900277512 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.922015519 seconds)
  done (took 75.118725056 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.918302195 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.974650912 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.944681915 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.927012799 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.87497692 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.915029812 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.690767687 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.923190246 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.915057188 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.139292923 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.543179907 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.925883624 seconds)
  done (took 90.543718309 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.925205727 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.92068441 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.92046418 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.920823373 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.921717165 seconds)
  done (took 11.46175791 seconds)
done (took 2201.442548299 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.169388325 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.129866807 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.142070685 seconds)
  done (took 6.122510292 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.062111583 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.109266237 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.228913759 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.250763353 seconds)
  done (took 10.501995223 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.20226223 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.281287407 seconds)
  done (took 6.331641049 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.302715685 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.917765863 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.291168235 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.91168279 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.913751768 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.913429511 seconds)
  done (took 22.594046478 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.917520828 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.91980531 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.917802636 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.91950713 seconds)
  done (took 9.523222579 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.897594224 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.580859261 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.899258102 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.911766185 seconds)
  done (took 21.139887 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.669147945 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.677792539 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.666070107 seconds)
  done (took 9.862940896 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.434651026 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.812603081 seconds)
  done (took 9.097579089 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.176696109 seconds)
  done (took 4.027155706 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.04850508 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.230024541 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.395728216 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.436757291 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.511308035 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.577608568 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.21996495 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.149147261 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.320939231 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.340410346 seconds)
  done (took 25.080884725 seconds)
done (took 139.815222948 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.288477248 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.151930267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.116923504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.247256765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.138632763 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.117207363 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.135284098 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.229266627 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.75426382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.752630511 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.247038455 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.136971471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.080873792 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.154102415 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.081037376 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.156174881 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.134733197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.293770743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.942578324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.142786882 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.137920076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.885082504 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.094805026 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.898035638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.138791513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.069341613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.463669519 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.158378838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.095556524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.469080853 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.070914896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.301255599 seconds)
  done (took 173.937403896 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.67454452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.916469147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.915941027 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.916766852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.270518219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.918276727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.9188747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.917578044 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.07639674 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.05860689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.918010312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.275564375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.918038312 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.917795677 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.923573826 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.917263026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.278948956 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.760236175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.937500784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.941675404 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.94564359 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.222998238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.946271805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.275986249 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.281208255 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.943894637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.919482182 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.941422397 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.922574234 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.90868095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.929148561 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.918990248 seconds)
  done (took 209.38238818 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.918393142 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.918466873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.919429649 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.918826289 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.919222734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.922759684 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.921166696 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.918984307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.594861607 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.588488678 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.925509768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.924662437 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.930504672 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.920274488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.927022177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.919400284 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.929321627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.929308489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.927173102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.931397067 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.936133505 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.740915203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.939924658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.735974298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.927587835 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.928819684 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.920951835 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.931047371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.936271921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.935921827 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.936065585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.920171746 seconds)
  done (took 222.464631295 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.115491465 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.92561699 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.927533938 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.864130322 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.926832196 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.926030463 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.923230094 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.116448519 seconds)
  done (took 19.60594515 seconds)
done (took 627.250983146 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.349580489 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.191907062 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.098889327 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.949279333 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.188100782 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.983859905 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.946309061 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.006002043 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.68166818 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.010530985 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.633022515 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.960413196 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.728288789 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.964745386 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.071793536 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.999907889 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.5045042 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.591100647 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.117031173 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.002153108 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.114654496 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.874397367 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.01458091 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.716829805 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.745004932 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.916788161 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.108661891 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.513465081 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.955179169 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.107790443 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.668669169 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.32405122 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.953593896 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.942577088 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.995411117 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.97814204 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.281768989 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.953186692 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.067321943 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.680030575 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.004189626 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.567014334 seconds)
  done (took 105.319637809 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.918105211 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.916311323 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.915817506 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.917884862 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.919429913 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.917797181 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.917133473 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.918040974 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.917926809 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.918638947 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.918156985 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.919326397 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.916768672 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.91911262 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.917663974 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.917842032 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.917990379 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.92068754 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.917420304 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.917652486 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.919616529 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.917919777 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.91833018 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.917716119 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.91875875 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.919084041 seconds)
  done (took 51.739749979 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.931085008 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.068778612 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.148312655 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.945579205 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.932003803 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.934121903 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.949275026 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.93454191 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.933737902 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.932962795 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.024941371 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.936739729 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.949532366 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.150604791 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.94217859 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.93099437 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.932240141 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.931997133 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.075084048 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.946066466 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.950685164 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.934756112 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.950354446 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.944465892 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.933608903 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.934039964 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.936252528 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.364418341 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.93838429 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.025811485 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.972864718 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.951696664 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.321765262 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.160919748 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.981096498 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.937800683 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.931971905 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.029386908 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.937520723 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.933168945 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.950690003 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.936736169 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.152081602 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.421752293 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.942922456 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.931843297 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.375594436 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.034236645 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.971643266 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.943981074 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.155288417 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.945058788 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.933282996 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.933368775 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.96896107 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.943658648 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.932725835 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.23907052 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.942888987 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.950899325 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.93645897 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.934724854 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.082688889 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.939829162 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.071270659 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.941424267 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.941681468 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.934871291 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.154619753 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.946293023 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.428359941 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.945323163 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.934991887 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.029113657 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.076249987 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.398761527 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.945675374 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.088477514 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.337823584 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.957115668 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.942654728 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.35646593 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.959196809 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.942091437 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.937268502 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.937725668 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.935685303 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.980459923 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.951113938 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.36567079 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.428769613 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.249185112 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.959939806 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.950865679 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.936787812 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.242175308 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.941504297 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.936980897 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.149027476 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.441807803 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.94513359 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.943799052 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.413736368 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.947314178 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.95449888 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.945141717 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.158783787 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.94817024 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.979502234 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.936739382 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.944050647 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.940033587 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.954443665 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.943884658 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.936783953 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.402615908 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.044965103 seconds)
  done (took 238.984433662 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.932769738 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.931932601 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.932242578 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.932545042 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.9319194 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.938107952 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.93132447 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.931975584 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.937802075 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.931674621 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.931770479 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.933816535 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.934601266 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.939236618 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.455504328 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.944699193 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.592295481 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.936742159 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.937407822 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.9396642 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.618324031 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.94747871 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.937350957 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.939340456 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.937584647 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.940347473 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.945033614 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.971924711 seconds)
  done (took 169.985037353 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.944470135 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.121522975 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.965140853 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.980714513 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.95269113 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.941550458 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.967666338 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.964401122 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.949947431 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.94205271 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.942211505 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.005292057 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.956786945 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.077861961 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.977502653 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.97564895 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.050339952 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.951183039 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.942342661 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.942341276 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.972978554 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.939696605 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.005873117 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.071393552 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.961412017 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.062734108 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.949264313 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.945921915 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.945482966 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.063704618 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.959066127 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.004734853 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.973539673 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.962999265 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.066405748 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.061950845 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.050739585 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.974443378 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.94994806 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.944118572 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.943005878 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.933785745 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.06433304 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.963115428 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.947364682 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.054459652 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.963033176 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.948029281 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.954790325 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.944253991 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.959877826 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.965416215 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.013712151 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.077239423 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.977723696 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.97166821 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.971920807 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.225400293 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.959262841 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.047591528 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.94042707 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.061418385 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.96494982 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.935035188 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.945981862 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.951764095 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.976561301 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.977866453 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.052152934 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.954197543 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.04780259 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.98135874 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.952901049 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.946307591 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.94972499 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.065982183 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.064988553 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.981664523 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.985060108 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.97983538 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.943746546 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.947195765 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.936617093 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.965436276 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.951075303 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.065200396 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.065231889 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.954305032 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.948948265 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.949307449 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.949195436 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.974213477 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.07104268 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.982156915 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.045464676 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.016075464 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.023062796 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.961447371 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.960224766 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.951571732 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.011922506 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.961711634 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.960001982 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.273711953 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.023451781 seconds)
  done (took 210.790380601 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.424509411 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.999434545 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.004420106 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.224469433 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.369852532 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.717933596 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.995964786 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.997839669 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.023738322 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.156408966 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.054041383 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.010689546 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.985740157 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.972630331 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.999447628 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.01858137 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.002561165 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.2973994 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.118601042 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.121404111 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.977605198 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.302810871 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.32339501 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.375721994 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.032397275 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.328018499 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.671265071 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.238845059 seconds)
  done (took 63.630496479 seconds)
done (took 842.306870478 seconds)
SAVING RESULT...
DONE!
