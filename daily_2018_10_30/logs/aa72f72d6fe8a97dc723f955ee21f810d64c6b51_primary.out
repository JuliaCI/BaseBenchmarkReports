cset: moving following pidspec: 9875
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.254427926 seconds)
loading group "string"... done (took 0.467265679 seconds)
loading group "linalg"... done (took 7.60462241 seconds)
loading group "parallel"... done (took 0.172376142 seconds)
loading group "find"... done (took 1.185737753 seconds)
loading group "tuple"... done (took 2.110146433 seconds)
loading group "dates"... done (took 1.339822907 seconds)
loading group "micro"... done (took 0.247676108 seconds)
loading group "io"... done (took 0.686601304 seconds)
loading group "scalar"... done (took 41.957390212 seconds)
loading group "sparse"... done (took 12.878443939 seconds)
loading group "broadcast"... done (took 1.128061007 seconds)
loading group "union"... done (took 14.266499178 seconds)
loading group "simd"... done (took 5.040336877 seconds)
loading group "random"... done (took 10.286217481 seconds)
loading group "problem"... done (took 2.02781717 seconds)
loading group "array"... done (took 23.172831375 seconds)
loading group "misc"... done (took 1.473349026 seconds)
loading group "sort"... done (took 3.592513314 seconds)
loading group "collection"... done (took 19.47717261 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534690942 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141294066 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133832475 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151059199 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20864707 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144689164 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158957005 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.115933092 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.968343545 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179897458 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155642389 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520625922 seconds)
done (took 5.139835176 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.22486486 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094710523 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104861731 seconds)
  done (took 0.865912417 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078373862 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144922377 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094079618 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079514518 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.0967849 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07862922 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096293698 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07867331 seconds)
  done (took 1.341119361 seconds)
done (took 3.190497256 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.739689283 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.283614805 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201969609 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.467261756 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.200359959 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218048308 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66913627 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.359756779 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.261257499 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103118867 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147134171 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393784381 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13917392 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675118231 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089449902 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123446379 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179343943 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.462793556 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082025004 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111053712 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118062601 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142378602 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130905662 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093920473 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187494025 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084535309 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19946159 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111636683 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083046551 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.294882081 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203194415 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682656709 seconds)
  done (took 10.944412092 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111045194 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133197046 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099402737 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139990418 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135761805 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101662385 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088278138 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097844782 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123821528 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177545839 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116575046 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138114535 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097327218 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082811793 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11671574 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246445546 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122220931 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10551578 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102146639 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105291231 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123799101 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114903396 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110708458 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094532074 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170082284 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223671306 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112866375 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128580521 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098193403 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113845259 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145209143 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145069807 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095319994 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080785892 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173284077 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125953109 seconds)
  done (took 5.182227764 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153834287 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18768856 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119926525 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166726046 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162102407 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139265036 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158996803 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112871341 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244930211 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.171102812 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16384566 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144108337 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116641737 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079840522 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097464071 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092791483 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080743791 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.660422802 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166353576 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13731955 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097758792 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107615315 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101599558 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365913199 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088896437 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098802942 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083581201 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084109128 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163006533 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083505252 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.177488958 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108224042 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103092529 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134355259 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197662429 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129293073 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119281978 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100034076 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078929571 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.196531768 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089127775 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097111801 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10432416 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138647433 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137009728 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09969505 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08260016 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223031608 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084513208 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116473133 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.928372274 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181168112 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091141211 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097647369 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325863805 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100669414 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099827719 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078407254 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.252123052 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186305588 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099963708 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08142569 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099122431 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082299453 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406466195 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083325463 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.733878317 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08924078 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109571688 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084510241 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098870407 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106480218 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089068448 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117348529 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081063582 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100989032 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080281948 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098680781 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084010088 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111156702 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103256673 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080979771 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166634037 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080800939 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115927873 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128633735 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085370734 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096838871 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131837722 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08531207 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099776276 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135388311 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082536621 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111901661 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101320366 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144181682 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082404447 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.160212943 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077559766 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094866364 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110499734 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104733209 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133025481 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117360368 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100293455 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087205477 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095999474 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079155589 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097582115 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149479418 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095799978 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08179422 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101771599 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111127153 seconds)
  done (took 22.767794152 seconds)
done (took 39.569951841 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.33091074 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104897376 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105842904 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104962708 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102324661 seconds)
  done (took 1.492208108 seconds)
done (took 2.213940414 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285702339 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.211145276 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076021231 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171465011 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095850557 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17692222 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1636265 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11335083 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.22537021 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077206874 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185554384 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07846512 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095297025 seconds)
  done (took 2.698424578 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094699353 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116351568 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084062683 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113430517 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077773275 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113688033 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093551982 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119562641 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111242524 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085547856 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095511121 seconds)
  done (took 1.820536733 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093231339 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11467295 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08304367 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112575268 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077034883 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11249025 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093760525 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117262837 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111626391 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086410278 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095173328 seconds)
  done (took 1.813511275 seconds)
done (took 7.041796957 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091248959 seconds)
  done (took 0.802341657 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.931066018 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.820119985 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113084252 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.153881715 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.328410381 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.177628211 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.479403806 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128282832 seconds)
  done (took 11.058917416 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.114342842 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.11425112 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10627213 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083858594 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.104402693 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084926867 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104405369 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104193327 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084359749 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100526024 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087451643 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101901492 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101512432 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085403955 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102139986 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087424075 seconds)
  done (took 2.351248167 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119686197 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117999712 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106022237 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107900922 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086407781 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103848049 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105354899 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088340889 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100915582 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103651195 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091135721 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10557041 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105334925 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080739584 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107537756 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109751814 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088115396 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10724171 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107299677 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092337471 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108471757 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097535011 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088406282 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108126558 seconds)
  done (took 3.265818374 seconds)
done (took 18.198211442 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158905299 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109377262 seconds)
  done (took 0.989110195 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094114058 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112190376 seconds)
  done (took 0.930675974 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097612038 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095287043 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121438879 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109537085 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080827299 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097072922 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122544388 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082372042 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097727486 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082162393 seconds)
  done (took 1.717842112 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081573954 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10887529 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101391318 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095471755 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106621295 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097455939 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089921228 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100660769 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111714694 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078045086 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103060053 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116729146 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086906525 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118083438 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10657186 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084492464 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104174363 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100149937 seconds)
  done (took 2.526516039 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078496672 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097377332 seconds)
  done (took 0.909491449 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080465471 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094924088 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083243975 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098470688 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096633754 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078217341 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096740726 seconds)
  done (took 1.360730631 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.472045467 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13591233 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258323361 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086423884 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121767637 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.306483863 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099989451 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086584939 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10491275 seconds)
  done (took 2.463282355 seconds)
done (took 11.627199989 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092264557 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117002685 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114129155 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468955602 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107547196 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099106958 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.163137952 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254874836 seconds)
done (took 2.153759243 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148790421 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324769192 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114712456 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068533253 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098130773 seconds)
  done (took 1.339650301 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079498922 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099632558 seconds)
  done (took 0.914668146 seconds)
done (took 3.14115329 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079512107 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131252999 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079983312 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09572297 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080422123 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097894262 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.079014434 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09850016 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081390693 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098186806 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098556543 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081761048 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09891706 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08171874 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096627564 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078373555 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099249759 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078395214 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096052971 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078747165 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096031006 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081472986 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096722992 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078801283 seconds)
  done (took 2.933212303 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100000048 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098148335 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105243461 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08745521 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102182283 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086944784 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103537226 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098894184 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087309551 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100628344 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103340181 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085540356 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101706302 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086046652 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101296103 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10298959 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087246836 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099614136 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084824294 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102441755 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105903836 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082189044 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10234439 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087197813 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102504497 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102998615 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084467226 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099503827 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105197044 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08537937 seconds)
  done (took 3.62442585 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084430052 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095089517 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079609415 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10415896 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078205358 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098780253 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078995907 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097238073 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080227312 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096855967 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081104889 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096382407 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080624568 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098889347 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08071985 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100478248 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10991425 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079848988 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097585161 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079717292 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100123433 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079512627 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097353246 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07902961 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096908619 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079248206 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097211804 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079155523 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097085526 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079523809 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099980482 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083223749 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096210027 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086017269 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099869039 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08067235 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101024532 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079911364 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09738526 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096508291 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079701797 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097097051 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078838381 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104538924 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079593542 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099893225 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080599288 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09923136 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080645133 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100152189 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080307765 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096842705 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081553656 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09723095 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100743519 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079857813 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09804067 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079310602 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09821936 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079782857 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097639509 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079120257 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100005204 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080273966 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112816698 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086857997 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096769716 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082007624 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098725489 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082789372 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099659714 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112614062 seconds)
  done (took 7.270180114 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082795966 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106473113 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082049511 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099552833 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079363709 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097613929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101351743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0802268 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100238294 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086783462 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098477083 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082168703 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099308742 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110085952 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081139025 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100334593 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087573475 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095473651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081233775 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101554339 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081167105 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101690126 seconds)
  done (took 2.778110662 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209238932 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104930909 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142656647 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107729399 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084061427 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106005963 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102672575 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087237873 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103398843 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085539781 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102773393 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105840023 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085367258 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102328333 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103336398 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087141639 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104703746 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087274057 seconds)
  done (took 2.662166169 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092744009 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099035057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10448144 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100655201 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.1009386 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085584369 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105985519 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110504571 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085087894 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101250297 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092098619 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102735824 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103486724 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082672613 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103005677 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083728566 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102238232 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083446189 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110915101 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106156658 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10687748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092300859 seconds)
  done (took 2.906417076 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098078436 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100494365 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119262926 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08425318 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096520997 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080944802 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107200733 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083589257 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109677467 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102431543 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083359983 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099250485 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091253476 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099495764 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106675737 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082968333 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102487371 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083481426 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103342756 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078779884 seconds)
  done (took 2.666168544 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102471954 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098633254 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100104287 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093536005 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101603948 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084307453 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11164728 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101659329 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083871565 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127206095 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102563527 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085036835 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111737636 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108555957 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102572123 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094078724 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111106511 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111129931 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084197979 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102575039 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127997572 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085538797 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111262403 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102748427 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.197021606 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10250268 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102470576 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090919728 seconds)
  done (took 3.69422205 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080893621 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099394453 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079958314 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09930035 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080364798 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099658092 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080856853 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098994562 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083017045 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099233467 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082944824 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101500176 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082898891 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10107301 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085714096 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102281783 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082493423 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098434338 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081441361 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098779952 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082988264 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102371888 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083547163 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098981279 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081310973 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100810126 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080615728 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0985942 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083341316 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09834377 seconds)
  done (took 3.487035481 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090590834 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10846399 seconds)
  done (took 0.956541791 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079285585 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116516792 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081504215 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105902218 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107059318 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084584666 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110685259 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088803295 seconds)
  done (took 1.530726116 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096369275 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112718702 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085694134 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114906938 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113043317 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097979911 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168916194 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103032823 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08977086 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099629298 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116037697 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082243099 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108988743 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08375587 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108204231 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090041288 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099825935 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089193803 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105834312 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099982821 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08547156 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112447804 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086185889 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098302212 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084626029 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112182455 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111582983 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086052064 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10484693 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111319701 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089243665 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095892845 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084107024 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103215756 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082239706 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11217367 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115515378 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087428241 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11121084 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085389396 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114230144 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097738096 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089634788 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108571664 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094334527 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102418356 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086274199 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097995926 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0989997 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085516907 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09832065 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083973263 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096894927 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09128797 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107403748 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11547417 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082892856 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105001168 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086146726 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105238753 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090469188 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104113839 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087170856 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102107034 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109531602 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088103468 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109587003 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079563206 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096850984 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082623461 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111133111 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125535415 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092983637 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103355457 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085540021 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100392673 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105836297 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085551959 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109836159 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092654105 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102268959 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109628741 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092160644 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102851304 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086880689 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110375942 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100909993 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086565689 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09968397 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099358405 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101598438 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081810745 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100512043 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111319322 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087545209 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102905115 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081735504 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109739603 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078670271 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103659671 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086432488 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106577506 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111269729 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091241316 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108660876 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11033048 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091741644 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10290019 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087015051 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099054085 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086645829 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105000473 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109471851 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078456478 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105784612 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085953621 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104500824 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09198886 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101454872 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084658413 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111827986 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109893031 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08290173 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099245687 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086862771 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102239648 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088119225 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110434414 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101458884 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07979719 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09759638 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088967408 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10280778 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088405249 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108522882 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105440397 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078297736 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100847757 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089287152 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110445283 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102708424 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084513313 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107505322 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085037028 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102338886 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090610598 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104947437 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083598503 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107617762 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104752525 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079166465 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107038297 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087832732 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101695342 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089089578 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106525186 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106199209 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086069169 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102360623 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091219123 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104081261 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084425567 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103107463 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083311961 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112779435 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105826402 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08057693 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101166031 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092731743 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100927104 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084587626 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102374909 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106428896 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085440287 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101931311 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08376266 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104184465 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097539281 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108911511 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104675086 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089826754 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112633027 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084053476 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106035319 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103023381 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087274458 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104026183 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092399588 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107967109 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1100371 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087231586 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.10034809 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090190224 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110675879 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084160217 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101666899 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083533759 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106327922 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109860927 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088174673 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104311827 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083500883 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103155975 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108483883 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087786946 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103661459 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083071084 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108324688 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084499275 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11100001 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104954633 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094899237 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106658889 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079989329 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107258913 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101900809 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090377012 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098815703 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081739273 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10213509 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085874137 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102413857 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087985588 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097380184 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091782055 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11174062 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103489256 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083837026 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10414101 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0939202 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104732154 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089065186 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106716277 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109043714 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097505718 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102114112 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08854508 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112542346 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104384107 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078662883 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109026233 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083573657 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102941026 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083895541 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101507063 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088195592 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112698975 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109074221 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078754164 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106440163 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083587781 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101859146 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080969025 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109871305 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107244005 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086599329 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112510501 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08658532 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104814754 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08891025 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103706987 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105808943 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086732031 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106879337 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085409034 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106154681 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08454589 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105810993 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083796263 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.10179276 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106383378 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08701614 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103990905 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091244148 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103778012 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085445023 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107206319 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106421193 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086327923 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104773844 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084816188 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107388473 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086819914 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104254469 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088885956 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10027451 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111933998 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085108741 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111555654 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085666821 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100894826 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091313338 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106945304 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110346417 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086498537 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105765169 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087235769 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103864352 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08771776 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113291325 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101862077 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094653704 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109938316 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08676776 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107048322 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085761402 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105458734 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084269084 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106560886 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105551687 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084875524 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103375637 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090491899 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107306081 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085737369 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10639896 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105376532 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084804016 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106178758 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079442027 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103848399 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084901545 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104202093 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092657634 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105755063 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107255248 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083583465 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106296144 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084836199 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101367709 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0944004 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11409394 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105190257 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094790404 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10341627 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087379412 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114062223 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098680604 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084297481 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102421624 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082945797 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113207819 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086349135 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113285814 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085215185 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103898099 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082039195 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106156774 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103309794 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07956957 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102391188 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088729184 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106864852 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083875443 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105292239 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088386025 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106548835 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111668758 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084646496 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105961033 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08648535 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100734071 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084268796 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104346519 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088536469 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106047779 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102451024 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082539686 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104649979 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087160591 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105957103 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085881836 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.114795003 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092923075 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105079395 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108402765 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089258705 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099307511 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088613883 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103922243 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085152953 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103127503 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089843401 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108494126 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106374422 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093454314 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104626546 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086425426 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105108747 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084321668 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104631778 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105213645 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086226988 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104547234 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08797899 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113634412 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084484944 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106796491 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086066053 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106806408 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109887778 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08737917 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108284185 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094071 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108477689 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086946513 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111448337 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108810835 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089219235 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107088203 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086892883 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111350478 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10376178 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094111773 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105807019 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08697178 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106583246 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083707232 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105039454 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08502163 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104575993 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110177495 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086884041 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104611039 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085094703 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103619405 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087961763 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1092847 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113748025 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087928826 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10859666 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081285399 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102641709 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087242172 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102340293 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087135497 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10864126 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111027814 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089088541 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106517589 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08450833 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112160206 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092172026 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110232683 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10253732 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090565445 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106930991 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088297874 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106748433 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085882236 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106961187 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091006901 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10750679 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104938216 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093723564 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109619524 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088110691 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107353564 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085980018 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106673101 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100152982 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087598975 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107600782 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093438636 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107560027 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085899585 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115514505 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105345701 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085905677 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109712174 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085197722 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11147423 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081986725 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106083767 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107496603 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087750551 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101239061 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0857403 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103163241 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08827611 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105213414 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081170703 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115343023 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113659336 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089405843 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104322204 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085583388 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100497213 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081827257 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105073541 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087691785 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10754671 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115687026 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084946941 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104755349 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081740602 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105532434 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089599526 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108888145 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083449046 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100949996 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084885733 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108795006 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11308329 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084937271 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105561134 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089692947 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107864865 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084690948 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110368042 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082863203 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110078963 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116279142 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087220235 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106339298 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091588354 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113914542 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106908213 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081584491 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107140345 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088803193 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105037103 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08791359 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108053956 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119578091 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090082469 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105260239 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085778641 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108054351 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086061137 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114098616 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108266677 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088296191 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110647986 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088293536 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115878991 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109186163 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092687533 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107863152 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088807948 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104879515 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087455219 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105148377 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084399255 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108305552 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107335914 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091548406 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115235663 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086388694 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115434905 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114962524 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091670922 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102496228 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086330974 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105834799 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082449628 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107735453 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084835155 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105125943 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084265273 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105682157 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107037951 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093188801 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108414505 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087330833 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106212261 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080623533 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108294328 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089126281 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110697816 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102654613 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087860633 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107767183 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09278483 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11082235 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087491146 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108713469 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107969488 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087792481 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10262844 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093608979 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105416457 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089778201 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10572035 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088190274 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107832166 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090102165 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113682271 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108069132 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089372286 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118397257 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108578322 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08459059 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103609978 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092505986 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.104538256 seconds)
  done (took 59.330521224 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150319334 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083981612 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101889379 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08250885 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116960338 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103420542 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0823136 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103529828 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08410919 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105673609 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082939587 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101686782 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113633497 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127860026 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095879526 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107714009 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102011701 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083958967 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101481602 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083483557 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113086565 seconds)
  done (took 2.936059014 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10364667 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117267613 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114606898 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118804823 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088688047 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11474768 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114504078 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115299077 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099133013 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111198314 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118303009 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116457499 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094233235 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11335743 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112992848 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096709044 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122875598 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111834936 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120463956 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098181004 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116835885 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118101457 seconds)
  done (took 3.248225416 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083622577 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101502449 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084795752 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097908483 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083387801 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097237219 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087986674 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100332418 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086637309 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101859342 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082372293 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101660083 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103658998 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07845349 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102270167 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08180937 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151069402 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106817612 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08351365 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103995441 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098113536 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084637909 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09805106 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079254082 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101835372 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087535973 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103938934 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081456531 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102274955 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082309473 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102847445 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081107289 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104470697 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102758139 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082091929 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101220243 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083122617 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101731347 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078752097 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100161596 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083615551 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097796046 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083788192 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103353239 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081118639 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100561588 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084783527 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103094242 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097233677 seconds)
  done (took 5.42204031 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103583335 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164642316 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088530799 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143293204 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122765221 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113695731 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088788054 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142132651 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101506216 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082707458 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121505784 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118719863 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103535964 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091226312 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111055911 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106478726 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088796098 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106187374 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.11238274 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087360549 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11209396 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093508739 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123843849 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120839544 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111658948 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086019583 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106782985 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112207055 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09999396 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11340087 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112567432 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093711715 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125578745 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112174808 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107243233 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090871675 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124826519 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108607609 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090648766 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10453569 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089838556 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112889918 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113278254 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12557077 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088041014 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112387117 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087533923 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104751454 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121483311 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090920116 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116736653 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123527118 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111684337 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08791927 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112266102 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123714226 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088210175 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105910768 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091086096 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121497991 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104746962 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092146925 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124239937 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109850513 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116933666 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102168605 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112976073 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11143929 seconds)
  done (took 8.301502807 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093204978 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111633852 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12368682 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125142044 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095250308 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11538297 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115199975 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095549693 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115076347 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121138344 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115678065 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137964573 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.09010418 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119757301 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116024789 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095170382 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115678207 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115261013 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09526757 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114588078 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114498654 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123561963 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094760264 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125581695 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146054982 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110182169 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0944683 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115183865 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124723603 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114639188 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127828222 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094947838 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114681667 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125196569 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129325524 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09427594 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107552018 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114339421 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094463464 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115679011 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10946157 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105020971 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115446084 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109655188 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094728965 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114807044 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124781669 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12756628 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118384781 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100333352 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115669942 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125345493 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114931007 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094393421 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124918638 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150733829 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12418221 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125660107 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115113086 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103756126 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123888157 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130429162 seconds)
  done (took 7.894537094 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10719852 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114471183 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116684292 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099545627 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082450619 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109192855 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085844891 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104587789 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11895593 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097943623 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120997609 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112656851 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09497792 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120758894 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113714178 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116199312 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091559118 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113844327 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118521572 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112839566 seconds)
  done (took 2.969784113 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09292594 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124149173 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085099807 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111979765 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109548932 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094106308 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110013624 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11207707 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088788816 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111142228 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099948538 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121575406 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108442249 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094773259 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120382826 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115366559 seconds)
  done (took 2.522337175 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095809768 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115999214 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121422054 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087457108 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107472555 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084422533 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.109753154 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102790394 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083510863 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122618506 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08749309 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112245286 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108309132 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088985323 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105352216 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091923159 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104838169 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086064898 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108280496 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123791792 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09986044 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107991201 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109689608 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090494851 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109756268 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093020215 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109757039 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107149302 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086226089 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109144527 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087999319 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117019399 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105384305 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.086691952 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104889331 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086051471 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107563715 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087491744 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110905801 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109482631 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086723044 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108170155 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088466277 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109916008 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084557073 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.11037663 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105127295 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095322384 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106545824 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089746507 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109125589 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11091673 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089256536 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119756902 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091658514 seconds)
  done (took 6.406474108 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098295755 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108064298 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080081398 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102703675 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087640139 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107242274 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108165129 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087265678 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106128274 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083404944 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10610507 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088348037 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106812774 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107519411 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08629199 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108426798 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081487522 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106208419 seconds)
  done (took 2.592231876 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090054741 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104892634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091475636 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104755435 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084178699 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107457008 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079157032 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104095323 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102213508 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08494753 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103853054 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086972269 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103087268 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087857703 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106303069 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087044151 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111713463 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108287505 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088464584 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105020215 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090914209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108505771 seconds)
  done (took 2.966947713 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11732296 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126852323 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095125239 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.235913427 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106762442 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136178862 seconds)
  done (took 1.646365511 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108405717 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119691792 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105771359 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105976674 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114281479 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107689674 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08985867 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111993172 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123149369 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104666578 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112627811 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121613248 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122050447 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09999002 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119059122 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118172264 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111671194 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09050736 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108535496 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131400051 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090940339 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121662687 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112514048 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091195142 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112077363 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121383963 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122633366 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126054216 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091115763 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122156195 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118210968 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091261897 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12289304 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126798197 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113706034 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101683143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112037411 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13248282 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118173062 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100342605 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113971774 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118610026 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101347087 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11868723 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121799197 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11265314 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096785979 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111727589 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112301955 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139759503 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098131753 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120592062 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117625072 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122333749 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122090691 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140111128 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105744014 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121277537 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117876086 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125950212 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122037078 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096758837 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11912633 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126403859 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11968348 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12179306 seconds)
  done (took 8.362528107 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101908721 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125273912 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107872009 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122329865 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097018492 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107877847 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107511144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088208078 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107381916 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106802266 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150787283 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088286428 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119499328 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120207104 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110632558 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091564629 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112472972 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122866872 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091797891 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139447254 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112570744 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122221842 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12253417 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101144236 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127987914 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119873628 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112728576 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091679813 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112622066 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112530976 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098256006 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113907866 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12220648 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090517508 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123164171 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113318839 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090906122 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118496123 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112004145 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119213488 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099022578 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12814251 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107780102 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108386897 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104065678 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11296344 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110636836 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090729036 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113092419 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11189028 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106332366 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128702062 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12584457 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12368823 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113221707 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092346622 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11357075 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112881307 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091628791 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119969393 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122257933 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112894982 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14098285 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092257807 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112243244 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123184366 seconds)
  done (took 8.216871843 seconds)
done (took 158.060190239 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097255564 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136023297 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097024047 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168288344 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106313097 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118455146 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137973489 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097530839 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106896602 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085226177 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106246232 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086636849 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171007083 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084703182 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106301008 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107250937 seconds)
  done (took 2.645856243 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198774978 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254524674 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104038768 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105009472 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088865446 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109680506 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104243717 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090739977 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109309008 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085297057 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108156194 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086987343 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10681464 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088201693 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109129356 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088036044 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105989683 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087305779 seconds)
  done (took 2.867709672 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112831392 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14554844 seconds)
  done (took 1.100890258 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118161294 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179927075 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316753941 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154648849 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105476123 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126539676 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15640944 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130951334 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196209808 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122928481 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122741334 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097717922 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140523666 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115717063 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093937067 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11727482 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141702903 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093042457 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115090934 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115917187 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117371145 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105855986 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114369903 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092984076 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180619741 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119854831 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085420795 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106561174 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115913357 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094496205 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112621994 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124055495 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097463617 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175308833 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101711249 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175952029 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097420782 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114153972 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115054814 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09097795 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118484665 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118432697 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104303145 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118580757 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084666524 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118502683 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105819595 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085272501 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114072782 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097382956 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115209505 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112935785 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155075312 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11770155 seconds)
  done (took 7.503269688 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795317475 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159795295 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093558327 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891536051 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143336477 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106162981 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.781626687 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142152219 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239737292 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764070466 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139675273 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127301106 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231940433 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23815798 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955019139 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312156019 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673575527 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10725429 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.155750525 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15268234 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118323138 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136793318 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130122136 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452070265 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095592141 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111902678 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116680322 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099347421 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158415486 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125148391 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114003625 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176668059 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247859262 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204792275 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115450973 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090128354 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111812353 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169564745 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261615341 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212967713 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180492669 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086504219 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110002284 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121030536 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110772998 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108189592 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162644147 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174193376 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192568818 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091586962 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120134213 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120058675 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120459939 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163993974 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120663333 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29664899 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310259937 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111651312 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120499827 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105156871 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262934767 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12256187 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221743235 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116594 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211216904 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.1105885 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776688689 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189178075 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089966023 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117261101 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118918725 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094418864 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120976943 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170403482 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391897692 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124146145 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092832779 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111234992 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203303444 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125305112 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10974336 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162117773 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115664008 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098634276 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124617091 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121774937 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170131245 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233343442 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1242602 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119494189 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093405562 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125849936 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116660737 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211444348 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21839184 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16264911 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206841887 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122084754 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162685397 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188987272 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098375279 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193314532 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097503325 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125879823 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122027961 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214766437 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145509495 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100772294 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116691427 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118271212 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147680899 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126988212 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097062887 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168997501 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.499608952 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167389143 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108349556 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127372377 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097729294 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159907785 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117502755 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260380182 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120992992 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169018497 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119941729 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088009569 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120104648 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164966031 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121311709 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100199511 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123114743 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119502393 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234466236 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21786624 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1228834 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220811758 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183235765 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118900953 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172737951 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121917382 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166266193 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120691111 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120841285 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094936927 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778908834 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123755288 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098919327 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116428826 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195426293 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111236691 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101626961 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124525561 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107697027 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758860016 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127258799 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12172519 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101654587 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118841482 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120076437 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096044931 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115347664 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162224061 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230141625 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121405064 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119669011 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102932264 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181882416 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095293887 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125158253 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125000488 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124697305 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10053682 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114754868 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124192709 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170751831 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162050426 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219466879 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.588203588 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091021878 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124592152 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227140355 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089986569 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286198165 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119332891 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225967309 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163401879 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120571826 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306337103 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166405325 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.194847969 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127260743 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173796144 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086935768 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118809662 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163366843 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112873059 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117000665 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16240479 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126066257 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101860716 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956398275 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110982794 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22694547 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086335028 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192548772 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094612639 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120817859 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298006211 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111011889 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107341919 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186594993 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093399355 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125258642 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.708462918 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125073705 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121541988 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118646872 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.197702447 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185680785 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097082849 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119158742 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120945715 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164287242 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206946356 seconds)
  done (took 44.024447824 seconds)
done (took 58.983184368 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274821825 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212484801 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.2564283 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168999467 seconds)
  done (took 1.856804318 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171113469 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147302193 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119204301 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10678416 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149099992 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085187274 seconds)
  done (took 1.647339156 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.351385035 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270005915 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238001153 seconds)
  done (took 1.732121185 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.286072064 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.24863947 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354510639 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418636971 seconds)
  done (took 2.298725913 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21143432 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131809698 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110987118 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103494063 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196213404 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249427053 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140618254 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201490682 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121928602 seconds)
  done (took 2.389963152 seconds)
done (took 10.799955819 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.245025948 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.157985581 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098640573 seconds)
    (4/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119846205 seconds)
    (5/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.17233123 seconds)
    (6/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093150875 seconds)
    (7/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.246067466 seconds)
    (8/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.158126515 seconds)
    (9/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.251082344 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.106799319 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.194347215 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122412836 seconds)
    (13/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096169541 seconds)
    (14/286) benchmarking ("sort", Float64, false)...
    done (took 0.170161981 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093799721 seconds)
    (16/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116597306 seconds)
    (17/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130163339 seconds)
    (18/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.095435408 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.243458187 seconds)
    (20/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150769809 seconds)
    (21/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.203593402 seconds)
    (22/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.222663525 seconds)
    (23/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122755478 seconds)
    (24/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086678295 seconds)
    (25/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.215665915 seconds)
    (26/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.197808098 seconds)
    (27/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09718355 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115256851 seconds)
    (29/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.138429875 seconds)
    (30/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185437059 seconds)
    (31/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.148199311 seconds)
    (32/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.161671142 seconds)
    (33/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.17064854 seconds)
    (34/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.150049253 seconds)
    (35/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.182484752 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.225418727 seconds)
    (37/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116548556 seconds)
    (38/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093948628 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117383801 seconds)
    (40/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.19094102 seconds)
    (41/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.078279259 seconds)
    (42/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092782296 seconds)
    (43/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.123451102 seconds)
    (44/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095352594 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.135037571 seconds)
    (46/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117656908 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.159126486 seconds)
    (48/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.246582706 seconds)
    (49/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190993435 seconds)
    (50/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.236416755 seconds)
    (51/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126741912 seconds)
    (52/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09220943 seconds)
    (53/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177715069 seconds)
    (54/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.076304423 seconds)
    (55/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136075871 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116062531 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093907072 seconds)
    (58/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.201215735 seconds)
    (59/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113784893 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088017266 seconds)
    (61/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119844935 seconds)
    (62/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.096698351 seconds)
    (63/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18557943 seconds)
    (64/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.18532658 seconds)
    (65/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.120205406 seconds)
    (66/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.093446031 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.20757169 seconds)
    (68/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.123154273 seconds)
    (69/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09047043 seconds)
    (70/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085412794 seconds)
    (71/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.190015632 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.134715018 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.087102174 seconds)
    (74/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168080293 seconds)
    (75/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083027073 seconds)
    (76/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115204303 seconds)
    (77/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096236879 seconds)
    (78/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.090130465 seconds)
    (79/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.129069729 seconds)
    (80/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184848579 seconds)
    (81/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135004301 seconds)
    (82/286) benchmarking ("sort", Float32, false)...
    done (took 0.172994501 seconds)
    (83/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091875182 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109400895 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.176147513 seconds)
    (86/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107705484 seconds)
    (87/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093490069 seconds)
    (88/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.182921599 seconds)
    (89/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.074588502 seconds)
    (90/286) benchmarking ("sort", Int8, true)...
    done (took 0.219848243 seconds)
    (91/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165468583 seconds)
    (92/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.093027715 seconds)
    (93/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101458136 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135311075 seconds)
    (95/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135428219 seconds)
    (96/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107342004 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.133659949 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.13764946 seconds)
    (99/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.184400328 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.112139247 seconds)
    (101/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.130016463 seconds)
    (102/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136113023 seconds)
    (103/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090330751 seconds)
    (104/286) benchmarking ("sort", Int8, false)...
    done (took 0.189697604 seconds)
    (105/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.17073087 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140001881 seconds)
    (107/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092976417 seconds)
    (108/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110375824 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095096914 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10910501 seconds)
    (111/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097864317 seconds)
    (112/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.139416937 seconds)
    (113/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085203207 seconds)
    (114/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120258894 seconds)
    (115/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066670342 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108659682 seconds)
    (117/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.18650519 seconds)
    (118/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067246248 seconds)
    (119/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116014022 seconds)
    (120/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.113910771 seconds)
    (121/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132614238 seconds)
    (122/286) benchmarking ("sort", Float32, true)...
    done (took 0.232590213 seconds)
    (123/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.17237226 seconds)
    (124/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090210681 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109220948 seconds)
    (126/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066267356 seconds)
    (127/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.086451956 seconds)
    (128/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118349745 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108714885 seconds)
    (130/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087004205 seconds)
    (131/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119502861 seconds)
    (132/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093290208 seconds)
    (133/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.197988126 seconds)
    (134/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114591668 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.114059807 seconds)
    (136/286) benchmarking ("sort", Bool, false)...
    done (took 0.190411272 seconds)
    (137/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118369727 seconds)
    (138/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135775174 seconds)
    (139/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095369733 seconds)
    (140/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116698501 seconds)
    (141/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.127978373 seconds)
    (142/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111553947 seconds)
    (143/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.07730674 seconds)
    (144/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.186807269 seconds)
    (145/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.08738269 seconds)
    (146/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173366543 seconds)
    (147/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117178347 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092696621 seconds)
    (149/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.1082485 seconds)
    (150/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094426189 seconds)
    (151/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089599299 seconds)
    (152/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066194382 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085682422 seconds)
    (154/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143146354 seconds)
    (155/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066668091 seconds)
    (156/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118099886 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076564203 seconds)
    (158/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.0895346 seconds)
    (159/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219282004 seconds)
    (160/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135892131 seconds)
    (161/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.127199444 seconds)
    (162/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180260158 seconds)
    (163/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085549567 seconds)
    (164/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117197356 seconds)
    (165/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122606552 seconds)
    (166/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066309027 seconds)
    (167/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100394502 seconds)
    (168/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11802775 seconds)
    (169/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077862306 seconds)
    (170/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141088486 seconds)
    (171/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066457133 seconds)
    (172/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091018992 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086785069 seconds)
    (174/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.09015413 seconds)
    (175/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.066969663 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06633525 seconds)
    (177/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.156622976 seconds)
    (178/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06679208 seconds)
    (179/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113826147 seconds)
    (180/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066895122 seconds)
    (181/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134694466 seconds)
    (182/286) benchmarking ("sort", BigInt, true)...
    done (took 0.23312277 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067471305 seconds)
    (184/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121156163 seconds)
    (185/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092413013 seconds)
    (186/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091688249 seconds)
    (187/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067218176 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109237441 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096143215 seconds)
    (190/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.089484643 seconds)
    (191/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077568463 seconds)
    (192/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06722413 seconds)
    (193/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.089972071 seconds)
    (194/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.12799367 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 0.223918667 seconds)
    (196/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.11139397 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085688936 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109950945 seconds)
    (199/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089115859 seconds)
    (200/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110620966 seconds)
    (201/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086842181 seconds)
    (202/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124565423 seconds)
    (203/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067700638 seconds)
    (204/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.098136163 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08638592 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118713144 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095935438 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108917654 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092957367 seconds)
    (210/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120135776 seconds)
    (211/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067340406 seconds)
    (212/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090344346 seconds)
    (213/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065841093 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092021862 seconds)
    (215/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11351431 seconds)
    (216/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067425323 seconds)
    (217/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.141289976 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.304061527 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164071896 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112855444 seconds)
    (221/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186718096 seconds)
    (222/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089005158 seconds)
    (223/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066680796 seconds)
    (224/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.090387218 seconds)
    (225/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181449395 seconds)
    (226/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065993894 seconds)
    (227/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067774081 seconds)
    (228/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.231819452 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109751052 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068112828 seconds)
    (231/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109688206 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101839164 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109924047 seconds)
    (234/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181412226 seconds)
    (235/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091865874 seconds)
    (236/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066061402 seconds)
    (237/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115406478 seconds)
    (238/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123325479 seconds)
    (239/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076173193 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086715105 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110333317 seconds)
    (242/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.142288904 seconds)
    (243/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066841798 seconds)
    (244/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170903095 seconds)
    (245/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088488132 seconds)
    (246/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116313437 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092982853 seconds)
    (248/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06650132 seconds)
    (249/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117827397 seconds)
    (250/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111982758 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095035614 seconds)
    (252/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067508014 seconds)
    (253/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089597785 seconds)
    (254/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.076394788 seconds)
    (255/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123391064 seconds)
    (256/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06683679 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108720087 seconds)
    (258/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086661931 seconds)
    (259/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067946725 seconds)
    (260/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116540946 seconds)
    (261/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066748635 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108997699 seconds)
    (263/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08797863 seconds)
    (264/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.08984349 seconds)
    (265/286) benchmarking ("sort", Float64, true)...
    done (took 0.232223863 seconds)
    (266/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066216716 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184358272 seconds)
    (268/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067053371 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118695323 seconds)
    (270/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067672182 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10818341 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084896256 seconds)
    (273/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109019329 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094816696 seconds)
    (275/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110025427 seconds)
    (276/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068826499 seconds)
    (277/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.114702957 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086740617 seconds)
    (279/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067092106 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115090585 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.161873372 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087250693 seconds)
    (283/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066646256 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115880727 seconds)
    (285/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075723679 seconds)
    (286/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.117799451 seconds)
  done (took 35.861151828 seconds)
done (took 36.737805282 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099609423 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146497555 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095954596 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134686123 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122469954 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091096686 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117870576 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098094268 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122996626 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123628922 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098612504 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092426188 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095725762 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120126107 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095437955 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137726229 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122450077 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093490134 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117786093 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086259878 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117627358 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088637438 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110253029 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069741039 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120990769 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093716944 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116227978 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120531818 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086106807 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109477496 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089835666 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11613643 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08562072 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123859038 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093447163 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117877418 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096438384 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119257657 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111005006 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086786241 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117809638 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086397893 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116055615 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094312558 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114785384 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091817691 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117665421 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098910606 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138308525 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11481632 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094130743 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120056107 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096209509 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116391591 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090467413 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119578798 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091736303 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13813592 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118343092 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09140956 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118274614 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094429404 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115429853 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094679304 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117950457 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119831217 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097427281 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115253809 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096003903 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114625129 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087026644 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117608843 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089882658 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.10893027 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095957396 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.11991787 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085106268 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115047762 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11710822 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090968857 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109098748 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088408248 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111017327 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09214062 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111646755 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069531759 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113443762 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092771846 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109479156 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095152105 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115918569 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093519612 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111607394 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099100651 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109170572 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092334073 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110018684 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086870422 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111832371 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091031992 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109698712 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0891534 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118897579 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089180703 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116233049 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123569267 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086777265 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11733534 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086367443 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109720432 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101242373 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120302258 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087469704 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115124934 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086076608 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117231689 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086157832 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110331205 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086584993 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110111005 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092102924 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110259245 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089291925 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117320441 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124763368 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086111035 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113386606 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089782974 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109553236 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092491741 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109922423 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087381756 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112595541 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077335237 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113173684 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086958791 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118203811 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089782886 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118148 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08819804 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119831584 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091784631 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116686039 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092598848 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10968174 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074373896 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115736909 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089892671 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11193817 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086975142 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112983986 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086578195 seconds)
done (took 16.81041543 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086858794 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183372492 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150549815 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14142084 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107201613 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111663403 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122199066 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118316416 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113099652 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142469446 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109357283 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131530159 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146897098 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086479085 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111340022 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091581379 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112584131 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102203889 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145205877 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132147282 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163685816 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086701784 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145778066 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13449146 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12101317 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113273104 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111677076 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091617016 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114242937 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102863336 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132174541 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115243474 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087280757 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132909705 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104142642 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119518887 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087619534 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118465996 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08726348 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111000851 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140806415 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132938347 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09207397 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117099031 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091808708 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113837963 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089616646 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121164743 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098761071 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115833819 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12594179 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155807858 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090214668 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121048819 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086193501 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121617059 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120532772 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089290393 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111977265 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090916847 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112151049 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091225307 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126188261 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142235717 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091640756 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121041831 seconds)
  done (took 8.56343182 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104710906 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140087342 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105714841 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130166132 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11087209 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087977963 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11210136 seconds)
  done (took 1.728788177 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088398559 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134222156 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110709058 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134959831 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131996022 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111869433 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122647403 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088651898 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130724526 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.0900102 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133692161 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150277404 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089649331 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120196296 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137255732 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088573474 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137204846 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088613715 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116364073 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111435358 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115903442 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133902973 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09120733 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112929671 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102750878 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113534118 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161683964 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093727096 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113804743 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092001356 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111244972 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151267531 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102276217 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124145998 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088914655 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128672173 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127660365 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08651465 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.12646131 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094018617 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127512719 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089803936 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114210803 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.0865211 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11778745 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099235324 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117383337 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089346473 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116436725 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13251683 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089314922 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.143514469 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088346497 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117525711 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090464521 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118979065 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098209929 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114051631 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132576288 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089552455 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129908843 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105225949 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12667709 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130188165 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091184013 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126885099 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.1026364 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116504576 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090733242 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116601316 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10510599 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111795239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.09051659 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124887312 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115919681 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112469686 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136808382 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089853585 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124509616 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089028875 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114135652 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.088938822 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136178281 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117377125 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088618152 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116922024 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091562722 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111754107 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088561399 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116744702 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087561605 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114676105 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094512341 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114163959 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091904839 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130400975 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114851826 seconds)
  done (took 11.760325164 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089759258 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114027005 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091059412 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114639448 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090610135 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11418146 seconds)
  done (took 1.559383935 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114380418 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11689399 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10415868 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120053938 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155226767 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103152948 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130075637 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12287586 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107923754 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126641296 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128896168 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104731001 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13476808 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120615821 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104151938 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120117105 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103940748 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124513026 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127103494 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096273171 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136318171 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120249223 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096671144 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131644257 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.1180535 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095733415 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124813566 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102476511 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126511184 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12245609 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095359743 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117759492 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099150891 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122352685 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12919488 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095545313 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119992691 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.1189688 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099583599 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116811822 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10431935 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120840957 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12715228 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094518156 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123563686 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120210053 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093894221 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123900874 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104089834 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118542318 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119262932 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094950733 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117343285 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093582771 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12307529 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124643027 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093670625 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130109813 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121384547 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096019229 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117877655 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092909612 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123726521 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.1176969 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104818287 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11834447 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121258541 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096487248 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121283277 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095314152 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118638345 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093120284 seconds)
  done (took 9.171260747 seconds)
done (took 33.718276611 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684004377 seconds)
  done (took 1.630036505 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.811453667 seconds)
  done (took 1.759989667 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.573214236 seconds)
  done (took 17.550421361 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.489407747 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.34643413 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991848674 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179070467 seconds)
  done (took 5.955794366 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.942828946 seconds)
  done (took 1.911742396 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.2814632 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233518054 seconds)
  done (took 1.473226622 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.764861846 seconds)
  done (took 1.730059847 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.367912585 seconds)
  done (took 2.32378614 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326366428 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18369254 seconds)
  done (took 1.471545523 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546008892 seconds)
  done (took 1.507726227 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.294402516 seconds)
  done (took 11.260224082 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264895619 seconds)
  done (took 1.239517576 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300216111 seconds)
  done (took 1.266256762 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.449115564 seconds)
  done (took 4.41426499 seconds)
done (took 56.453647704 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097954612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126124711 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101164624 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123809168 seconds)
  done (took 1.407082676 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100001394 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120679212 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100773886 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119912053 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125847799 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095489375 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122597262 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100598964 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120159701 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09637148 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119873918 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119608948 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097907043 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123239549 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093320583 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124017806 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098692718 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120530033 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12386948 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096458475 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118460304 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097635817 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125041509 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094010333 seconds)
  done (took 3.62408954 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100327511 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118628842 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096330622 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11734707 seconds)
  done (took 1.407267866 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099603209 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130731243 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104824651 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124732816 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131626908 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105202657 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117768833 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091651168 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118977691 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100032151 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115281801 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138307394 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106204011 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123882628 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101548899 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114082272 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090703759 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130552595 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124276076 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101066707 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117666431 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.09920772 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.1150733 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109131558 seconds)
  done (took 3.681559105 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170552487 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127308497 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138459515 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095082142 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160720041 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139888433 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088218123 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140792511 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088246209 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130455122 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117071201 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132742928 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128779016 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08773254 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113751062 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08707879 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129078316 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128994006 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09109968 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12697162 seconds)
  done (took 3.400684511 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097530752 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117175291 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08865757 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116202596 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099153149 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119954315 seconds)
  done (took 1.613745125 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090677232 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113821782 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.08946304 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113361838 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093688497 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114671837 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088753921 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11427567 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088646003 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114594422 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088860893 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113040682 seconds)
  done (took 2.199052818 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501657508 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119354034 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119682263 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088596057 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123643906 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088667487 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128567067 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092927681 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140618254 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088741651 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114659417 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090847305 seconds)
  done (took 2.672901994 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235435983 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125026368 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283566757 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365686508 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155689057 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163296579 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276281419 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160576721 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197840052 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149221331 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228974044 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195025822 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151419502 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190461272 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137001952 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144268361 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188334915 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249644217 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151590571 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210071004 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205808613 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165779101 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178195842 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151239507 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111071027 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19414403 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094526953 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129441169 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232772586 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179164307 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188114707 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161040725 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145411981 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235195096 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247131912 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19516949 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277875121 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134144154 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.164755884 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142327151 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263981496 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138044253 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232712961 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15538797 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104177836 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21940604 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165047121 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176186211 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144195193 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138380524 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1979274 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239962656 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191693465 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138277613 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299804458 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147500463 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156956942 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188746477 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250064541 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224544701 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187545987 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120653882 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187418261 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190829049 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210335278 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15148559 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1827742 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147802693 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182618892 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188243985 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164785452 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203698772 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179462671 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138790048 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169565426 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172853588 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172016723 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259480119 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185494066 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121813047 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168446697 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148125734 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103863541 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193020575 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125209419 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214486766 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143771815 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163272232 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208390034 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159216306 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160797042 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219616246 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184585723 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148156069 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084227383 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153445984 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155083201 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174820929 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139227677 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158358863 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156685858 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129979897 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167064564 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09760126 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209925707 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091215447 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173784469 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183515248 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126603029 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160731418 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152939908 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149866052 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17709706 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200022963 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139958964 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133340204 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207804874 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17718323 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140506145 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176363421 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226772572 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1171874 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148365183 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227050373 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216998649 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139211596 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22910824 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153619499 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107864442 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132616117 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181716373 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155633096 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162419387 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131777739 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183320331 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232443344 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098364983 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137250329 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195101621 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133114538 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131296359 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153634114 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1195665 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13714055 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142075532 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14572603 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17540616 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178758731 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154574142 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16699204 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149534306 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247238706 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139538072 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151495346 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121997001 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12114716 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194756611 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224219975 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103570171 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231399589 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172292933 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198448675 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195170567 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107822233 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177848946 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130250119 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092938013 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219996808 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16838807 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163260341 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195310909 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221627264 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179851429 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182136894 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164703863 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200685681 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163420518 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155798366 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111119994 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159698419 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158263896 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123178316 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111147864 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133692682 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149930827 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14247429 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133438586 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198051852 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169998393 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215124657 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157397717 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121249771 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206517885 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101771728 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175664033 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20304866 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119015953 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22421541 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192192618 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212497395 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116746784 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227227647 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093097082 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12583658 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140437271 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1707396 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13338773 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108112629 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161696061 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181400768 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206884998 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171322366 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206186767 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199577861 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18939077 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094740494 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.1683866 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183188669 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204490198 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153332748 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138591904 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151323896 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176887708 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155570816 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253216852 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169554839 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176094006 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2324334 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124184631 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132033572 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149970686 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178353862 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153242547 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175173082 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147066621 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138506436 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16025603 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102355685 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159175856 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211597815 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16227593 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187418413 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149215643 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184913038 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127350556 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160785275 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159858192 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165087844 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08056617 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2017018 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20282679 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145921219 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16589658 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187399839 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130494137 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307838594 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235601064 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194742069 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137313421 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154160397 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160513672 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162478318 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17096795 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177738206 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158498678 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187151207 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159160305 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135448223 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111556943 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150102527 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152541082 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133064462 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147867744 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178073054 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.136817309 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188997242 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155343461 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158212061 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172047831 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149800047 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116183423 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149877184 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241986042 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184721834 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238148349 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149168839 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177949235 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205393531 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125756721 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103572676 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132338605 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178497069 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135206894 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191342138 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.213292759 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199084209 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179974462 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203804413 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111672825 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120649459 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156919059 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16791467 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202517436 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149031602 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146057853 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228896685 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10917535 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131424628 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166289575 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286551002 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145090657 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194144155 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107733331 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279383011 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099106565 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132014399 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162218628 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233921408 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108501897 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176691127 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170541627 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162002269 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163402306 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149504778 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190949973 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236363972 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199560263 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210169492 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105364291 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157593556 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174032795 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219045491 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154697889 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10955471 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231377917 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195354968 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194151231 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142117622 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169065696 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167721164 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157353176 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213786271 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107070216 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234736725 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134167912 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193018208 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152408929 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136705505 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176756018 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187455448 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140111199 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18655054 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209866176 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10786642 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133005435 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166446458 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178083125 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152791809 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127226133 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181090465 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12518535 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194293709 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261028424 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132811262 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154992496 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119848501 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136302269 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154436464 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158187948 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139114259 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139954411 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226955784 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134275577 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190358152 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199800695 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198254612 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174037835 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145863302 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692824515 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102315428 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220703912 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119117014 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23454164 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150613334 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173306645 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159165012 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167444811 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193719677 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160363722 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230407972 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219340423 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179522953 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131525325 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158438136 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154941852 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14248151 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124691577 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167041876 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15930855 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145582698 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176854253 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1907694 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107631945 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140181932 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197632965 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148262349 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183660146 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179338734 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138476616 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172073643 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213528591 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104926981 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207087242 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208788209 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142658887 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148855375 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133104033 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.121068889 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260843946 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124775066 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188362403 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210297341 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131331739 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167228321 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146529836 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22100567 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157732251 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186400547 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142033183 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157577054 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156542312 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138151431 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102619586 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156449685 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166937727 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149549894 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158956881 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163357125 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194331729 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095411047 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144212647 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309104992 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17707332 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21447793 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135755187 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134965837 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161649888 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120657118 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.20330194 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179040811 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13630353 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107331708 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137237048 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.128840983 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134624507 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154030608 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192895081 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165246885 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234364965 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108634261 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279225548 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139888225 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154965474 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088435219 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132539853 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150097613 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144629141 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127480126 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220203828 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261622156 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12199856 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133739582 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148934587 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125299077 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107322817 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164567315 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164162143 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177457742 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145288159 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.10811796 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155608321 seconds)
  done (took 82.087561287 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161788376 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131499837 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145482116 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200777408 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174839616 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269711493 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209809613 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253548441 seconds)
  done (took 2.613455889 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093433784 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144599495 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156055629 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132168671 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090939731 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119055406 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.339272459 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132540398 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115137178 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121191739 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17223335 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092568012 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.54561273 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090479481 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118470503 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107131901 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090788004 seconds)
  done (took 3.722295038 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 46.828819979 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.473949143 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.993543914 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195580354 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.812232322 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.094148968 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.711552811 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.168956438 seconds)
  done (took 60.347420672 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114841739 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135228242 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.12260847 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151231616 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139879627 seconds)
  done (took 1.728573417 seconds)
done (took 171.468059145 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097135286 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12689412 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097519174 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129687324 seconds)
  done (took 1.508375701 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093863426 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07025602 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09987777 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074127043 seconds)
  done (took 1.404900319 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187745426 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167907982 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407214909 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070892725 seconds)
  done (took 1.577988481 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114073098 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131946688 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10358462 seconds)
  done (took 1.42721889 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105021688 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128582931 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103125577 seconds)
  done (took 1.41077929 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104894021 seconds)
  done (took 1.179079168 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106448099 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136493038 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108853157 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135826772 seconds)
  done (took 1.561111088 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097571445 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126107902 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108671153 seconds)
  done (took 1.404547682 seconds)
done (took 12.898479165 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102923816 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.511499176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384693508 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143561795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722272101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380282348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032546935 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14528028 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164947197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092744221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138554962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672199446 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024428384 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.472193352 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983160863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376096655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676330236 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120385446 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118670668 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093043678 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017366734 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091068475 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121058858 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092200826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702781189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424815387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094787973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375679444 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092249262 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125147919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381730621 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121792091 seconds)
  done (took 17.069698731 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094857347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172868511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09823517 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137256068 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122574337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094896803 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126069823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093305237 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178541005 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121767798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109928352 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120591684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125420533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094366452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140533831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09165946 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12439387 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092523178 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121001964 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12074523 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111186615 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119969662 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093323954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1210402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092839004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135651538 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122374656 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092439577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119679629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099122548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126964993 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094008368 seconds)
  done (took 4.781670834 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140140386 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182164495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12750865 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126174736 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168246525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123114289 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198839701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117678017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182011084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121871038 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138677679 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091927263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156436997 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0939892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142097311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119996398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096039862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121027925 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091961074 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122572433 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139909149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092211258 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122245705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093352399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121844561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108813552 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12366071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120068557 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092682299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125994054 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099325259 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123316585 seconds)
  done (took 5.105758322 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097680956 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126341366 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108462839 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13767045 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094705053 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124990716 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096325844 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12409545 seconds)
  done (took 1.987715042 seconds)
done (took 30.028561825 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.109887141 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126621645 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106381055 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134720555 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103085904 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131142275 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091405391 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13346143 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133902312 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101554253 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136836839 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091527525 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121998459 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090982552 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134626785 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096622361 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132436718 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101112823 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133385578 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131503636 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094522762 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132265844 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102315846 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132333278 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103490507 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13403318 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135703614 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099366933 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121757753 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094054636 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123340614 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103010141 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124159995 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104715694 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12606573 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097199017 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12316212 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094458922 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132963788 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132390872 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099852492 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133204033 seconds)
  done (took 5.95855587 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107364626 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139290708 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10471392 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080246281 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115932974 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079596226 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137168767 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078721884 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109353334 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10663485 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073665811 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105039411 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077600104 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100717595 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077133569 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074448547 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107671153 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075627261 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075421154 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105374384 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079556893 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072118001 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107584364 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077779465 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074188261 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108705499 seconds)
  done (took 3.537336186 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099986802 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133779328 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113578364 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182947042 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159416851 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098831315 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130498986 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139531899 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108330154 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119581428 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096018896 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148438684 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109663891 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128649738 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091690582 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136398468 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13500652 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093713808 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127207667 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111219656 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138455701 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102467301 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140949586 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131651764 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092105051 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123636808 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096300912 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134711534 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097203298 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130824324 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096661437 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124352498 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122435479 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104730913 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125018212 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093284677 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141175999 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102670388 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129801629 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091515245 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129400283 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122142418 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114060403 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160191343 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091535244 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128738307 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095065036 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132308034 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120698051 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111920313 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130981756 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091976272 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124827223 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091015407 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12083647 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106171858 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124132476 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095436882 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13106869 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12689633 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105281242 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124379458 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108690776 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121691663 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099931146 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121494 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093169466 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119915438 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143614225 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093738011 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161073284 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093060312 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12329849 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101146052 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129280725 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127286882 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093221398 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136398401 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102272997 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125038884 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101819893 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125873475 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095357984 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140009293 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123047642 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095152128 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121916053 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100018524 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12368902 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093911978 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135976279 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091777461 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124584113 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11081101 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122021539 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093310763 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12850512 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125603333 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091804293 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134908128 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098350011 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12272382 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102330048 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121479284 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123596001 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103760032 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125796867 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091231608 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126363012 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09895213 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122422606 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093252292 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124763567 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094010532 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132301341 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099221095 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126764485 seconds)
  done (took 14.739024188 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226653467 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213451925 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204686587 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.290733838 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134800998 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11360797 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212261128 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154815541 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122565822 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159100251 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173121366 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181048895 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170990255 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180564733 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170420788 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092802057 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141887648 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163723168 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213509647 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256820772 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143473451 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101067064 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161088673 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158525711 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136623531 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131763473 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110070965 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133898756 seconds)
  done (took 5.75982526 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108555241 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155062029 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097594438 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144042173 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147961946 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092404771 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127765928 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094096999 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134705686 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136014558 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092495683 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1292126 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100413031 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131470442 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122076916 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102440149 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131368725 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094420097 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125238779 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097395628 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133008846 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101972662 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12681004 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12031526 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101960798 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120489338 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08605048 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14202479 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121293565 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115077632 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120136804 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101133916 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135042406 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092958665 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122048005 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094484649 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12395857 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09420229 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124117215 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09187408 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121854321 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077518815 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121150598 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105915219 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128187917 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079280224 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128921786 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127182095 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094216268 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119675798 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095907026 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125121303 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09670854 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1306395 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096524152 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122933783 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096724507 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114902466 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100015738 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124596525 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084617258 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121001735 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098367537 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117737932 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101056801 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126527533 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091421867 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125323073 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097115178 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128261422 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094839806 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128522456 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090125779 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125999823 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095326548 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128244901 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096193627 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120682317 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121919619 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093467055 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07412072 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122314233 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073013549 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125227505 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091373144 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121299793 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094780958 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128790725 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137074687 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095023349 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130920319 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093502805 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121734814 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095842882 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112154786 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096108385 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138976149 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140798284 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092906541 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12064235 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108094449 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124964948 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092496025 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105428566 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102678795 seconds)
  done (took 12.87688152 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126604634 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152594755 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094363035 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140421059 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15516409 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156407477 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099909206 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12945519 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094266311 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141042868 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092932839 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131301754 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092878559 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13695279 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155954365 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103124378 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125027875 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106978126 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126508089 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168054667 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110596649 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141465753 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109749356 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123297404 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098152003 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.13958262 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159779674 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106949505 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135586038 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142001328 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106540832 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16070408 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112030408 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127607012 seconds)
  done (took 5.421336643 seconds)
done (took 49.371474195 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.210423377 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.421954206 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.180473592 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.084516797 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.215094413 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.21221927 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.192169782 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.193708487 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.633703224 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.179817271 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.415758192 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.688982792 seconds)
done (took 59.739136329 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.204492347 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.314253952 seconds)
    (2/2) benchmarking "String"...
    done (took 1.443957455 seconds)
  done (took 3.887005929 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.620465939 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.116362934 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.443299748 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.179763543 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.180824595 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.472745335 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.856103651 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.526984963 seconds)
  done (took 27.893409245 seconds)
done (took 41.713139481 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.179463303 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.259681059 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.217339844 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.161146713 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.290593323 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.206530067 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.610490792 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.437990892 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.181903542 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.160954284 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.202256423 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.181280902 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.218987926 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.684688023 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.180579031 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201952221 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.227340412 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.684038251 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.581682315 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.180917382 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.194904106 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.237209603 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.210030228 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.194121171 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.225960661 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.187263992 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.192438531 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.184796343 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.707333727 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.181975544 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.19225592 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.278754958 seconds)
  done (took 191.150997708 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.183308346 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.319476387 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.393042427 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.235103178 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.791674441 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.380585412 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.332035088 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.880940004 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.199739047 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.208551822 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.478282076 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.184492068 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.531225659 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.154244962 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.215644529 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.245311355 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.384654826 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.512147117 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.221842716 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.346475815 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.195930636 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.404973943 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.322230348 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.418082548 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.212268593 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.246555124 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.217132586 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.188062132 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.369005088 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.337183096 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.23771565 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.199205424 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.799119014 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.042656504 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.201608944 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.20958741 seconds)
  done (took 149.920229124 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.182566107 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.182984728 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.184360186 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183943455 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.215860852 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.185162018 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.761275321 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.749250067 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.695689153 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.551091316 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.637243907 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.479427482 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189062955 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279089841 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199001816 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.185267215 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.186177614 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.201315358 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.228607136 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190583562 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185829194 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.758844116 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.203192839 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.402979852 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.365337309 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201881216 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218812018 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.577533345 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186194162 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217696076 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.516843927 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.235650296 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186165352 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.574525769 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.780891704 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303841048 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18950138 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218303197 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.188006181 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.466212276 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186345123 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.188231279 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.190464947 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.87077681 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.190948675 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.763295185 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192014823 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.164876377 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.191222092 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186841184 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.030956011 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.901410984 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.21068402 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.18769419 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189460096 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.186466811 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188067096 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.219233061 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.053239651 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.285909797 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.204987734 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.191587775 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220296454 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.187699131 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.429727988 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193586672 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.141870018 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.264215648 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.404178321 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.763743533 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192042612 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287746565 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308736331 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.188460655 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.187678893 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187579327 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.188730956 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.299794122 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.188807868 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.596089504 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.364537201 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.205587165 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.595910763 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292939246 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188457824 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.60218258 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.194569715 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.188269986 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938011663 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285418698 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.189438581 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.188961053 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189420068 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.594830565 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.751731973 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.464005578 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.193972262 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.003756933 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.194011842 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.190608128 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.611806858 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743929701 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.891370039 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194996313 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3029131 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.367029064 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.205791474 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.191671662 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.189882634 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.620643313 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197684703 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.249490067 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.190759642 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588568573 seconds)
  done (took 367.339529792 seconds)
done (took 709.526960875 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.781730475 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.782065848 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.8840595 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.77098738 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.72970124 seconds)
  done (took 10.068927323 seconds)
done (took 11.185066569 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.37609779 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.37663248 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253167208 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.378256372 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223391236 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.400530999 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360030969 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217146189 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.297996889 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.278373539 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.292483205 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2445645 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228329548 seconds)
  done (took 18.051673604 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506126286 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497864232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256832882 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504261965 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232760584 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513764492 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391885648 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.40326949 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418535399 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226405362 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206546373 seconds)
  done (took 16.283089602 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.507151889 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.514941938 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260563287 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526165164 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235324604 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.514764659 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.396909573 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.407816131 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408165134 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22689534 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206820922 seconds)
  done (took 16.329015997 seconds)
done (took 51.781600002 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.204957717 seconds)
  done (took 2.33177732 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238342515 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.399922008 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.232995791 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.209589037 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.20377411 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.206810319 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.209667162 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204231587 seconds)
  done (took 11.030006143 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204433002 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.20718378 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.203858965 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20226948 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.200669527 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.200236085 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.202777076 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.204327076 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.201886684 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.200931372 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.20369724 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.204784317 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.202545421 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.205071623 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.201949211 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.202781946 seconds)
  done (took 20.376772595 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.206273616 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200552492 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.200684986 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.201474147 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.201425373 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.201930083 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.202909125 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.202363106 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202405814 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.200579366 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.202341322 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.202658907 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.20272143 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.201808854 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.202152483 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.202639156 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.201845425 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.202576467 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.207281075 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.202121439 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.201720498 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.201711514 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.20295143 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203467307 seconds)
  done (took 29.988972461 seconds)
done (took 64.846112253 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.831410663 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.86742827 seconds)
  done (took 6.825496474 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.205525001 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.204079021 seconds)
  done (took 3.537834824 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.209228466 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.20664773 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.20554001 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.205590688 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206715633 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.205330609 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.206679933 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.204073163 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.204741044 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.203939081 seconds)
  done (took 13.190082241 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.208676321 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.205129193 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.203096376 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.205634919 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20544726 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.203150081 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.205837515 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.205498674 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206204145 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204001427 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.205698651 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.204539105 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.20571367 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.202945012 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.205545764 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205195498 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204486391 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.203574409 seconds)
  done (took 22.821964734 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.207962315 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.206217809 seconds)
  done (took 3.547764993 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.205764288 seconds)
    (2/7) benchmarking "second"...
    done (took 1.204351833 seconds)
    (3/7) benchmarking "month"...
    done (took 1.205325626 seconds)
    (4/7) benchmarking "year"...
    done (took 1.206250112 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.206991313 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.206727434 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.204859184 seconds)
  done (took 9.572871979 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209007529 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.376079135 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.455422479 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.840808389 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.208155527 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212179335 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.034720321 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212236621 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.214537693 seconds)
  done (took 13.896873185 seconds)
done (took 74.515357429 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.220909987 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.215835789 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.438173018 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.210832406 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.221823538 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.49880336 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.258067993 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.323452166 seconds)
done (took 37.512265233 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.216190869 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.182170404 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.972987446 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.185148028 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.290805905 seconds)
  done (took 18.762125696 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.251226702 seconds)
    (2/2) benchmarking "read"...
    done (took 1.543431899 seconds)
  done (took 4.922748389 seconds)
done (took 31.02588514 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208725924 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209892958 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.207714771 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.207892469 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.208854995 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.205660754 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.206516029 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.206327059 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.209337344 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.20986747 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.209483626 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.209208343 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.209344777 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209620187 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206437533 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205961242 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209337487 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.207778568 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207900454 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207140894 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206753254 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210459885 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.206822933 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.207682979 seconds)
  done (took 30.126432102 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210666659 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.208879788 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.21102397 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21082496 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.209383921 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.211044621 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.209785544 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.208281767 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.210340492 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.210170576 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207843704 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.206868293 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.210013632 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.208095595 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210642966 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.207400788 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.21279122 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208562819 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209819857 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.207932815 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.211471331 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207952009 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.207972587 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210666546 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.208343607 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208679431 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.211799276 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.209952688 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212303731 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.209920571 seconds)
  done (took 37.419539863 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.217167804 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.21890192 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212001011 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.211340127 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.21094697 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.21177417 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.211702501 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.212285283 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.212467336 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.211998094 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21261041 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.212498783 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214094883 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.211400935 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.212137093 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.212395452 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.212521728 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.212409214 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212833903 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212267084 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.21243193 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.212957037 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.212168403 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.212837454 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21283294 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.21296974 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.213408832 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214025182 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.213834006 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.213252481 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.213482007 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.213120072 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214052124 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.214485209 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213928818 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214087658 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.217972311 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221845491 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21611889 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.212964126 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.213525746 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.214238452 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213907019 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214481319 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216278247 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215795802 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.215107682 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.213887523 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.214865349 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.214480081 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.214693332 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.214450557 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.213992736 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.214455345 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.214023434 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.214738938 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.214573925 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213425833 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.215915726 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.215009186 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.215511663 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.214800322 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215867154 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.215966869 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216729229 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216068609 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216032797 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.215836268 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.214916171 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217450022 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.216849528 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.216715514 seconds)
  done (took 88.556756929 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.221514785 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215358822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21258489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213070755 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21402261 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.215923668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215127104 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217779436 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213079246 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216812642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216662528 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21433265 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213472374 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220226601 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218823688 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214458969 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217916255 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217234876 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.218646549 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217944014 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217816757 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.218530896 seconds)
  done (took 27.904687631 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221364829 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220992729 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.214961507 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21989622 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217785267 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222356977 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223308684 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22412346 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220078187 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219374549 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219320062 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222804895 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223929362 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2207169 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223929932 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223755566 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220649485 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219403458 seconds)
  done (took 23.11736104 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.221812876 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.220314707 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219907706 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.220081698 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218631269 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21973096 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217152648 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219995516 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.223516864 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218754998 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.221170733 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223820061 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.224074872 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218547577 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222582494 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219721895 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.223332393 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217433555 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222309971 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220831659 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219849575 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223628008 seconds)
  done (took 28.001172334 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227483423 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22223184 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219267902 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218572648 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219368234 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220923746 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221475533 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.218012605 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.222047822 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221301909 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218375688 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.220434657 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220071607 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219656047 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.223590101 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224330761 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232162482 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.229432881 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228275607 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.227811172 seconds)
  done (took 25.598078422 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231404373 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227213988 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226505182 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223957758 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224220385 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225560819 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227946384 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.226844641 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225128151 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224645638 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223403075 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.223873709 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223462173 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224106285 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223797071 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224929394 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224858878 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22886492 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.230616199 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228071071 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226767904 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227624549 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229296385 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227329169 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.228408057 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224903515 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225001896 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225922202 seconds)
  done (took 35.479251374 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232237254 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225440643 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.224848083 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.225335448 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.223816968 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221502516 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222887326 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.223759459 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224783399 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221180994 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226125166 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.226271437 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223956399 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224475622 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22372356 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.225567059 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224848089 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.223440058 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222247349 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221292195 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.224194568 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225332035 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.227942135 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223714019 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221243312 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.22589464 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222263361 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222751167 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225500424 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222066141 seconds)
  done (took 37.876723733 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.244428582 seconds)
    (2/2) benchmarking "in"...
    done (took 1.243299398 seconds)
  done (took 3.633316484 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230623018 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230040817 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.22516328 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22243319 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223298717 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226767262 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225925365 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223159856 seconds)
  done (took 10.95206616 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228441401 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227645647 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.225771109 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225960902 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.227502848 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.226998788 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232637392 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.245989412 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.226101615 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.225590243 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.23273951 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233040047 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22961526 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226601916 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.22538229 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228579207 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227042741 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.227442902 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227695174 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.228049018 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228807493 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228018894 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227696939 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224511582 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226204113 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.237454106 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250745966 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227521204 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226314145 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.230717129 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227034713 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225577529 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.229268015 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.22856102 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.230304884 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230349269 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237251128 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24810693 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.237183528 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252597215 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231308488 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.226146849 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.227814618 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.232323614 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234005872 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.234406139 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.232968457 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.230511309 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.229442036 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.232873962 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.236814012 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232414355 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.228335856 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232054599 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.229986182 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234510505 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.250273283 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.234584515 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.242679312 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.245053909 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.264643021 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.258750478 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232010374 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.230354257 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239263894 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256981754 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243396743 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.251506148 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.23222365 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.233910602 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24185316 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266521852 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.263997983 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.236097664 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233134335 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.234226466 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235162263 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235964444 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243304786 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.256458784 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.233713702 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233881659 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242481228 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260306873 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23746483 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241366965 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.235446375 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.244098742 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.234553912 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247106696 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.253080408 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.235626588 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.235295641 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.237066848 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.237198217 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.236763938 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.23342241 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236378575 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.234235487 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.233366045 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235119441 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238271459 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.245941889 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238916135 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236827098 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240635208 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.256937475 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236339324 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.243376228 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.237335146 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236118108 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.236023187 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.242646219 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.237585279 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241026104 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.245859701 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239487224 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.238397019 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.240029027 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.241388071 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247252741 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.263246901 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.239671976 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248379514 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.242224534 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.25051509 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238990246 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.239811413 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.237736365 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.236914654 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.235135611 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.236812111 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.239888972 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.239195622 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236903185 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236898184 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.238302539 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.238336573 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.239886366 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.237931704 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.240709289 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.238456374 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.235159116 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.239639424 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.238033619 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.238278349 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.243296561 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.257909392 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.241757906 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.240018371 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.237253744 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242071214 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.241778483 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24141648 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.236545889 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241772029 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.23990566 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.240843411 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238349203 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.239010885 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239238565 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.241978056 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246040954 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.241782317 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243094339 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.239623665 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.239601549 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.242073993 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.240539741 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239592075 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.242469884 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.237878429 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.241376788 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.247146188 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.239904945 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.242713724 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.240669412 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244409171 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241820082 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239476902 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.243814048 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251264573 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244140979 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.246037639 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263765401 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237492788 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.238987489 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240236661 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.244936849 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246137787 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247896236 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.253913507 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253761683 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268611406 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.241730382 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.24476259 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.242126287 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.246613188 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241294549 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.239336303 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241595954 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240480317 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241025679 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242960742 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.239175729 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.239947695 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240188655 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.24426327 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242290747 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.243668558 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2418346 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24060605 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241357739 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.240185419 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241399549 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240303134 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239159564 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.238299612 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.239458253 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240811434 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.24215715 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.243058904 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.250300727 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.238871929 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241748095 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243513912 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.241708397 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.243485278 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.248922633 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243996084 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.239584339 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246488187 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259065755 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.243484013 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251481433 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.264479875 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.244265678 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244327956 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.244141572 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.244629352 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.246170036 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.250278431 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.24548789 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.244802559 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.243407526 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243117099 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244762428 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.247151053 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.261404388 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.240957629 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.242658865 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.241728045 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242784261 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.241918785 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.244125798 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.243456108 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243411179 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242930385 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.244088391 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242716154 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.245717515 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.244038499 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.243667186 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245171645 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.251043422 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.246787926 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.243824376 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247455405 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.244157789 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251555657 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244012987 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.246569342 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24295219 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25659898 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.275122313 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248830011 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.264570722 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.245680579 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249643057 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.267665819 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.248100328 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245042357 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246222294 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242583965 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.242302621 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.243031889 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246664668 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.249100053 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247539158 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.246300451 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.25319609 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.247023981 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245372881 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247672567 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.247496028 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247029801 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.245107508 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.247842432 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246144264 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246874202 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245126335 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247283697 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253708731 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2645877 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.246780386 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.246810411 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.246181094 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.246395026 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247022426 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.2473159 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.249433483 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.255313101 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.247654321 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.25453228 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.250078777 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258689116 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.248807757 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.250588307 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.260010169 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246982763 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.244242868 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.246545038 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.248743565 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254996806 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.26740966 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247948462 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252457528 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246937632 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.247904578 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.248132944 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247437995 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247693082 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.246820104 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253653905 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269545329 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.250980121 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248822796 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.246642172 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.248501507 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.248547606 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.246037806 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250908184 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250070942 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.247470827 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247492522 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.248964825 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250493559 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.249281271 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.249733155 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.246595927 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.250575158 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254440852 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.273550248 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256805366 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.251991146 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.256432436 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273651153 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260403949 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.272888074 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.250248028 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251047136 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251115427 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250143235 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.249630009 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250133043 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.249504623 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.250289185 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.2542032 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.250224694 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.251429746 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.250214828 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.249694017 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.248821811 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261692379 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275695343 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.251528244 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256326449 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.249324297 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251524878 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.257211824 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.250822343 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.248407943 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253468981 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261665621 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258913299 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.250869462 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252393386 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251250859 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252788759 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.252323095 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.252334624 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.251425421 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.252373332 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.251052727 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.253003763 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253641217 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.251670431 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252712663 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252739148 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.253722795 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.260883222 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.275030092 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.252522431 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252671951 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.25378339 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.253990957 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.25231466 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.254498708 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251630061 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253703965 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.254351665 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258328076 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.25851383 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254489133 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.254311805 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.253869979 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.252161917 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253311043 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253581174 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.253353208 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254259911 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.253545456 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.256402314 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.25306135 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.252715906 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.255587788 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.254695339 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253938576 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255665755 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.261396926 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258077139 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.257183622 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.254731256 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255711565 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252047091 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.254934638 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.262321956 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284523484 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.266129357 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.26383611 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.260456049 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.254433261 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257086563 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.260833683 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256151943 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.256513565 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.257267658 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.256459821 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.258120385 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.261132661 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258928355 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.259328171 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.277875213 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.256814054 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263435982 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.27469902 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256397631 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259047353 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.260503602 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.256541301 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.253943023 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.256169427 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.25456634 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262606374 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.276571647 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257795779 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259006658 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.255766241 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.2582392 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261327104 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256941365 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256515732 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.255208493 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.257058011 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257212867 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257028597 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254878222 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.254372224 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.25564425 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.260009732 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263685064 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.256300384 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259334856 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.256482662 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.257401816 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258227744 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257171144 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.255636946 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.25520162 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.25587296 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258530202 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.257212745 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.258589985 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256015546 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25884838 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260873869 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258777189 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259799357 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.26698196 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.266614492 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.256179245 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.256913739 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.260032334 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.259771542 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259759366 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.260401402 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258275174 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.260885815 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.261806258 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260209851 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.259912913 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.261745577 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275089399 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.280320812 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258827907 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.260001155 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262777241 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.261148724 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.25828064 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.261150629 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261311991 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.262795513 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.267297176 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.259873143 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265671982 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279938355 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.260263923 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.264754184 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.262466119 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267070728 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.261998036 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260411358 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.260375056 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.263628396 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.2750329 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261045122 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269381987 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289974291 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.279967104 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.262920894 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.260514264 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260517988 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.261176389 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.261159573 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.262235112 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261821622 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262679156 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.262083262 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261485317 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265277584 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.26149944 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.263438761 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.262385456 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26086992 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.261501732 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259684155 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.262579889 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.262098591 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.26342582 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.262247822 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261779393 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.261483135 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27321074 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.28826551 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.263306937 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263809532 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.260916436 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.264645694 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.26468639 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272241408 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.271755037 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.264102809 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.263588031 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.263643467 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263377194 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.262920724 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.261879215 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.262436475 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26272301 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261504365 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275246758 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291842737 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.267558218 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.262747487 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265003888 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.266064525 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26395977 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264667475 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265661071 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.264573012 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.267243589 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268785353 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.26637353 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265517187 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.267465415 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.273412273 seconds)
  done (took 745.993175018 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263569445 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263879848 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263234363 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263003178 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263760185 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262637202 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262053024 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263341165 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2633347 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263725452 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263306131 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263836091 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263268491 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264849369 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263783813 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264735999 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26725922 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263163373 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264597588 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263849153 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26325018 seconds)
  done (took 27.720163906 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266923978 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.264262296 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264832871 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266222433 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26463963 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266419136 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264401136 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267082837 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266597633 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264048384 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.2673899 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266339327 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.264023711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265082095 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266850928 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267086439 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267342301 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265570807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267995229 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265451407 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267794414 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265421933 seconds)
  done (took 29.034151736 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.267767016 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267054386 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267143695 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.265276745 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.268547606 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.265735067 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.268195501 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.267855899 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.268691729 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.266584892 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.26568551 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.268940277 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.274358564 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.273788013 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.268419671 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.269531576 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.412942724 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.268563462 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.270830077 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.269502292 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.265854491 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274116989 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.289472766 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.265602797 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.266805624 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.269032018 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268987219 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.270363286 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.270005716 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.269800127 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.27336662 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.269098214 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.267934791 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.270569411 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.269061583 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.270690961 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.27371245 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.26974739 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.266932797 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.270313489 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.278241784 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.291983039 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.271041973 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.274088897 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.292807988 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.271027473 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.272440103 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277709573 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.268187741 seconds)
  done (took 63.608951511 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.271013413 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.271770201 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.268548773 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271718333 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.271077935 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.271412719 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.270678681 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.27110501 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.269528916 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.268275617 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.271788955 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.269291521 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268184985 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.270854714 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.271460981 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269331054 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269035946 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269304205 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.268825773 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269619285 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.269558738 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.271275146 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273452625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.268707486 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273120304 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269068921 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269551741 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.27256409 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.269046582 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.269786412 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.273009746 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274374345 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.274350321 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.270330635 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269846566 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.274651819 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.274014005 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.269392458 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.273378281 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.269859694 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.273178531 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273975194 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.273485644 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.273549394 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.270697657 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.270930212 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271157515 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.27052496 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.271527322 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.273776629 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.273336683 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.27147393 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274172891 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271314669 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274291426 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.274564508 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272374846 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.272920136 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.273947233 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.271986161 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.271170168 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274687485 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.272462922 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.276998106 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.275923328 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.271885329 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.272825119 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274939664 seconds)
  done (took 87.664652773 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27418393 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274286675 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274263122 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274789204 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274526308 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.274474378 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274490919 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.274695911 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274327325 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274835228 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274743762 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274929828 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.274389736 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.27541652 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275233575 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274701851 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274428659 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275603838 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275096385 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274647291 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275309272 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274710081 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274769619 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274520113 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275980617 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275324444 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275302322 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276410234 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27631821 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27553762 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275844875 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.274610896 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275300729 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275814208 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276050877 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.275883297 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276563742 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275764397 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.276622607 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276297668 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275774332 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277316366 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276373441 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.276803 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276749942 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.27706461 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27676112 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.27707678 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277955212 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277664702 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.276689805 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276717086 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278165733 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27726133 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277422001 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.277878649 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27790672 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277190094 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277234435 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277682077 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278721293 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278186474 seconds)
  done (took 80.299071585 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279553133 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27905004 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276978956 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.27621117 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278506631 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276797766 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279064505 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279748868 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279234942 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.280122124 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279068525 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276277707 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277532571 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279761221 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276134954 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275651208 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278649723 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277792183 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279026679 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.276670276 seconds)
  done (took 26.756097905 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277983639 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279939256 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.277846404 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278736765 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.281439543 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27796921 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.281255705 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279556787 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277579018 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280273518 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280651639 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281906423 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279776257 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278731926 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282576591 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278371748 seconds)
  done (took 21.6696746 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.278181793 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.280918521 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280629555 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280243293 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.278100428 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.278488991 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.281514874 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.278549405 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.278484162 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.282982379 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281482497 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.282310251 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.280742526 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.28052495 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279475316 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.281790473 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.278647461 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.278630172 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.281543891 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281572377 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.280282726 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.279841888 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.281249433 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.282879294 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.280243969 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280694742 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.279648886 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.280541416 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.278717169 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281861532 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.280021069 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.279806314 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.279242394 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.279927056 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.283117056 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.279858945 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.283728493 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.282786906 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282968737 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.283733883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.282969565 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280963156 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282386816 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.284137155 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.280347532 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283702994 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.280836878 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.28180012 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.280332898 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.281231416 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.283792846 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282825751 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.283892194 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.284668581 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.283470488 seconds)
  done (took 71.659658197 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285508253 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284503505 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282156321 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.284544864 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284760408 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.281940056 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283823288 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283305888 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282723121 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.284192166 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283878778 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.287539586 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28176377 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285019081 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284216135 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285451036 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.283105941 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282406258 seconds)
  done (took 24.309373805 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282651211 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283662254 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.285477015 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.282977121 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.282139187 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286015166 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282486647 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.285373891 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285381962 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284153047 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283390336 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.286108771 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285844445 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.285848239 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284967001 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284080152 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.286757521 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287194203 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284465869 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283456603 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287182138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286565904 seconds)
  done (took 29.465732419 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.284370073 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.284777522 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.284551357 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.301219646 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.303607976 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.307707702 seconds)
  done (took 8.96608682 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295946457 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288122999 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28485203 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28791038 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28751998 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284152404 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284914486 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284144839 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287150397 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285523156 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285260677 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289077318 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28783326 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286511414 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288016519 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28915774 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286633301 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2864781 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28710928 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290519223 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285445122 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28924016 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287012842 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288441569 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285673323 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288541871 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289353976 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286720228 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287644946 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289760204 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288081877 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286627402 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289675648 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287042473 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289855695 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2898333 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287258262 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289879428 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289949866 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286828223 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290799323 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29032431 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289607009 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287918716 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291107166 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287995878 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288201596 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290053813 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287884253 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291076493 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290569387 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288243088 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291713329 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291760969 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291170191 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290043741 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288155708 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28863041 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292242255 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289389209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289506724 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290674078 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288764784 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289411822 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290786021 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289108772 seconds)
  done (took 86.27467326 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288140228 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289616489 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289985537 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290921471 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289192574 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289597936 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28983221 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290713559 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289522052 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289284414 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291465342 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288875359 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288825341 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289451203 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290223909 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28934158 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289401313 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290239436 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2909284 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291841325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290893879 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291492154 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290348548 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291141287 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290495355 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293498018 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29012386 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290583668 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289277881 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291452508 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290889377 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290272824 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291518356 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291373024 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291580016 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291918318 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291078149 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290737904 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292174792 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294620335 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293051002 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29385081 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290767111 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291508314 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292361159 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292700146 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291893302 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292481053 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291701262 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292406684 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292805573 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292321004 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29244495 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293648388 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293393739 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29301805 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291230518 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292133647 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291865969 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295818576 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292189604 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292853585 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295918473 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29242922 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293873805 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292647088 seconds)
  done (took 86.447525979 seconds)
done (took 1739.659660069 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45458257 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.417082964 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293468972 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.315309284 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.292672218 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.298466085 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.293279217 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.292854108 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.291731647 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.292761083 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.294312036 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.50311629 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.294209328 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.293488141 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.292291861 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.386631307 seconds)
  done (took 42.519744643 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.321787728 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.299658575 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.41861413 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.324268283 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.322550867 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.492672535 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.357549177 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.298276897 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.481062842 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.342356678 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.951315931 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.323969642 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.299598826 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.469991066 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.315990695 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.491851917 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.563754106 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.954569553 seconds)
  done (took 30.246440364 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.78571066 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.330852536 seconds)
  done (took 9.327891053 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.319264417 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.298764642 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.2980462 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.297485017 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.301636825 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.293373581 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.301156083 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.295011973 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.234222666 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.439225504 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.305550428 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.306722817 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.319089651 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.301223037 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.297170759 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.337649712 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.476518801 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.297826761 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.29686498 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.304680225 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.300678434 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.396276133 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.353141313 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.304892348 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.435457987 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.243233456 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.306525092 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.306039333 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44955557 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299980489 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.298803767 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.299623025 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303446907 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.923005818 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.821860054 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.324836271 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.324970289 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.310585515 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299459866 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.463507336 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.303857055 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.307936835 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.294125162 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.812268668 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.442355883 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.430667457 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.626320923 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.321867225 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.303426641 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.368075986 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306726505 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.304114371 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.333450741 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.078590152 seconds)
  done (took 110.547169617 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.307473784 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.685415681 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464037106 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320212352 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.132471404 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.983135078 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31333008 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.60412725 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.34647266 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.294258022 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.635718977 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829310034 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323130306 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.348591016 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.884132229 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.364762637 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299044857 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.044442738 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318789414 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.299969725 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807742681 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305212867 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.315239085 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.556954238 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.336858635 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773039219 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.833768199 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.82820407 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317660057 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.296324439 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.785223072 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.318114491 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.342017495 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.299180432 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.567837726 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679025249 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.668182552 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.318338016 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.312886593 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299389806 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.307601674 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.770278475 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68310033 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318253766 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.328965973 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773048485 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.31775046 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.305115602 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.300718016 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507815664 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.14864109 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.303421034 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.816600345 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.298837744 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.618047974 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383106032 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.353248319 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.801096202 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3176601 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.478138587 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.335754086 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.298899658 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30591682 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297274181 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.301001208 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.6681701 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.741086817 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.304866057 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665228562 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803521247 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.317672029 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850162954 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.156096594 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.336267492 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.353547397 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.299983914 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.024992932 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.818877465 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332938162 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29907315 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.654098813 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.318783464 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.632892243 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318498558 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318615787 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825153438 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.30831663 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.325002402 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.314333473 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.299598744 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.062062898 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.309275093 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.601946057 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.365563819 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.302698935 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.306711103 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.340654909 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301134142 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.299539234 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.303861922 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.84705757 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.325100903 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.286076989 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324036898 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317993396 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307041187 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.301571176 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303089312 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528991939 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.824840901 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.33439045 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30485317 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.303616464 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.300885992 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.553623699 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.311428239 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.629793103 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322243049 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31255685 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.30525671 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.021105043 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.351752811 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301758637 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.306817873 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.23236528 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.508355348 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.322000045 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.302279424 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.303412345 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32181197 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.619780501 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322794857 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.326421208 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305095356 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029111834 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.361975183 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.331516784 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.814487176 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.311920097 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303644118 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.328515097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.303483442 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59791066 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.58524549 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.529874464 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.322763164 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.303951015 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.008105226 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.348418397 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45623316 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326507506 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.302709153 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504547138 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.784190658 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.305490371 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.895524223 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.307135082 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533131897 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.310526135 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634027403 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.823793309 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.32363553 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304892475 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.036063181 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.0173719 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.984129059 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.305351378 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.638775658 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.322887937 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.791687385 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.308059077 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.307320694 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.876917271 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314208134 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.31409923 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.30637264 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.306170121 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.365696762 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483908669 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.539578376 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.308662316 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777311264 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.36631657 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307257227 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.333220075 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.308680337 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.653536373 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.390255281 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.310284996 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.312296222 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.305483831 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318239099 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.801709228 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.217596109 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.308102523 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.461962165 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.965650755 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.327766829 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.311953881 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.961094185 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.5262627 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.872895855 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.361263066 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.636584692 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.336747991 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349853564 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.001259103 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.404472771 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.802854867 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.334200126 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.307769766 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931025271 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.330180215 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.418085697 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.308393328 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.307826639 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865762958 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.329428821 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.31715631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.642610164 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334730002 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566226492 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.315480154 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.346249896 seconds)
  done (took 1107.23269622 seconds)
done (took 1301.079077202 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.313262017 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314519909 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.296511343 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.313934351 seconds)
  done (took 26.473102196 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.319510492 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.31438907 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.315745105 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.313659505 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.316586765 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313055348 seconds)
  done (took 9.133732247 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.407093145 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.315494848 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314013906 seconds)
  done (took 19.264841149 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.531929984 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.676925767 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.690314881 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.650626554 seconds)
  done (took 10.791210671 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.331618295 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.327158104 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.32958905 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.328934202 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.329977448 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333791846 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333017545 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.331340906 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.329529981 seconds)
  done (took 13.213388262 seconds)
done (took 80.103138772 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.743686248 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.360684476 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.410283858 seconds)
    (4/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.315143823 seconds)
    (5/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.327493149 seconds)
    (6/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.345294609 seconds)
    (7/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.298856431 seconds)
    (8/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.201027874 seconds)
    (9/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.71619287 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.59426175 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.608906261 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.384017705 seconds)
    (13/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.423090746 seconds)
    (14/286) benchmarking ("sort", Float64, false)...
    done (took 5.679590889 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.346644886 seconds)
    (16/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.406267388 seconds)
    (17/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.876337789 seconds)
    (18/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.378932673 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.312253953 seconds)
    (20/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.859304778 seconds)
    (21/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.435496637 seconds)
    (22/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.531950844 seconds)
    (23/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.337147815 seconds)
    (24/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.360466927 seconds)
    (25/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.856565167 seconds)
    (26/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.326295674 seconds)
    (27/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.386935253 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.346573154 seconds)
    (29/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.31962691 seconds)
    (30/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.307661127 seconds)
    (31/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.298235296 seconds)
    (32/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.233551176 seconds)
    (33/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.319627216 seconds)
    (34/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.210045712 seconds)
    (35/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.31568602 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 6.327307785 seconds)
    (37/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.347488881 seconds)
    (38/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.381234157 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.432885109 seconds)
    (40/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.996987743 seconds)
    (41/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.380347859 seconds)
    (42/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.369978956 seconds)
    (43/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.736523057 seconds)
    (44/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.408118116 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.309955492 seconds)
    (46/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.40455894 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.34336094 seconds)
    (48/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.395215815 seconds)
    (49/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.299041086 seconds)
    (50/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.836592131 seconds)
    (51/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.728813738 seconds)
    (52/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.140830236 seconds)
    (53/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.60729881 seconds)
    (54/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.777358168 seconds)
    (55/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.320113916 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.444406596 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.606416473 seconds)
    (58/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.305936985 seconds)
    (59/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.556203948 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.405369069 seconds)
    (61/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.416325679 seconds)
    (62/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.325547681 seconds)
    (63/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.353633529 seconds)
    (64/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.301254024 seconds)
    (65/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.727782586 seconds)
    (66/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.30980814 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.309832801 seconds)
    (68/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.591463436 seconds)
    (69/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.319982162 seconds)
    (70/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.424063437 seconds)
    (71/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.982053385 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.001343215 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 5.573193604 seconds)
    (74/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.09572158 seconds)
    (75/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.003557139 seconds)
    (76/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.340084057 seconds)
    (77/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.321542525 seconds)
    (78/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.310167107 seconds)
    (79/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.719064749 seconds)
    (80/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.302162801 seconds)
    (81/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.912944054 seconds)
    (82/286) benchmarking ("sort", Float32, false)...
    done (took 5.374832178 seconds)
    (83/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.470915756 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.695669272 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.339557264 seconds)
    (86/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.464949489 seconds)
    (87/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.213761022 seconds)
    (88/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.304568896 seconds)
    (89/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.749130937 seconds)
    (90/286) benchmarking ("sort", Int8, true)...
    done (took 6.328196192 seconds)
    (91/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.330218745 seconds)
    (92/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.312203212 seconds)
    (93/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.45344162 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.352005118 seconds)
    (95/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.339603336 seconds)
    (96/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.66267365 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.751369782 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.120149525 seconds)
    (99/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.304361826 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.314725496 seconds)
    (101/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.422718244 seconds)
    (102/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.383092734 seconds)
    (103/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.391377505 seconds)
    (104/286) benchmarking ("sort", Int8, false)...
    done (took 4.425674724 seconds)
    (105/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.309977136 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.958437021 seconds)
    (107/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.442749367 seconds)
    (108/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.411133772 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.572491923 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.331016271 seconds)
    (111/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.393103815 seconds)
    (112/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.515757924 seconds)
    (113/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.619541566 seconds)
    (114/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.354388945 seconds)
    (115/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.221929487 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.770175868 seconds)
    (117/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.329478057 seconds)
    (118/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.927879311 seconds)
    (119/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.865251388 seconds)
    (120/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.349120914 seconds)
    (121/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.996880632 seconds)
    (122/286) benchmarking ("sort", Float32, true)...
    done (took 6.327450507 seconds)
    (123/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.304193375 seconds)
    (124/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.43120151 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.252896856 seconds)
    (126/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.789218785 seconds)
    (127/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.143462904 seconds)
    (128/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.377685445 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.301140989 seconds)
    (130/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.349163355 seconds)
    (131/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.450912801 seconds)
    (132/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.157134351 seconds)
    (133/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.403838373 seconds)
    (134/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.463576874 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.999867474 seconds)
    (136/286) benchmarking ("sort", Bool, false)...
    done (took 1.854314557 seconds)
    (137/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.375752653 seconds)
    (138/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.347969903 seconds)
    (139/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.607481189 seconds)
    (140/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.354356641 seconds)
    (141/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.708059318 seconds)
    (142/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.390609496 seconds)
    (143/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.002794556 seconds)
    (144/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.882939186 seconds)
    (145/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.388190498 seconds)
    (146/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.31802521 seconds)
    (147/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.362409627 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.147628939 seconds)
    (149/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.126003468 seconds)
    (150/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.606887541 seconds)
    (151/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.990209013 seconds)
    (152/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.307477346 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.254932977 seconds)
    (154/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.308115643 seconds)
    (155/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.438964534 seconds)
    (156/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.458744478 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.240508804 seconds)
    (158/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.765959061 seconds)
    (159/286) benchmarking ("sort", BigInt, false)...
    done (took 6.324991102 seconds)
    (160/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.415650548 seconds)
    (161/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.720794607 seconds)
    (162/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.167894874 seconds)
    (163/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.172256982 seconds)
    (164/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.356630519 seconds)
    (165/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.44132484 seconds)
    (166/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.328186369 seconds)
    (167/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.073182477 seconds)
    (168/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.382011754 seconds)
    (169/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.317513392 seconds)
    (170/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.970344041 seconds)
    (171/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.3192693 seconds)
    (172/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.310295133 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.322926351 seconds)
    (174/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.571107591 seconds)
    (175/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.998401147 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.860360981 seconds)
    (177/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.318253135 seconds)
    (178/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.316808135 seconds)
    (179/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.41116307 seconds)
    (180/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.308753349 seconds)
    (181/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.223646757 seconds)
    (182/286) benchmarking ("sort", BigInt, true)...
    done (took 6.359440034 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.336100257 seconds)
    (184/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.343450785 seconds)
    (185/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.36555367 seconds)
    (186/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.312516706 seconds)
    (187/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.320339857 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.693994731 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.391376127 seconds)
    (190/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.225080263 seconds)
    (191/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.311907967 seconds)
    (192/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.340803078 seconds)
    (193/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.929610744 seconds)
    (194/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.54479146 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 5.448110357 seconds)
    (196/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.434633384 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.388024653 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.149254699 seconds)
    (199/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.437367221 seconds)
    (200/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.332395337 seconds)
    (201/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.339846813 seconds)
    (202/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.848954476 seconds)
    (203/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.414486649 seconds)
    (204/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.707424144 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.04987337 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.969747992 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.567445504 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.120293789 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.358145752 seconds)
    (210/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.341099134 seconds)
    (211/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.998544021 seconds)
    (212/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.581543134 seconds)
    (213/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.636590265 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.355033841 seconds)
    (215/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.401781558 seconds)
    (216/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.004136197 seconds)
    (217/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.942692968 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.378531812 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.317217486 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.431238867 seconds)
    (221/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.447493614 seconds)
    (222/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.420505684 seconds)
    (223/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.659238952 seconds)
    (224/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.519135899 seconds)
    (225/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.425582038 seconds)
    (226/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.503703544 seconds)
    (227/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.368233628 seconds)
    (228/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.340534709 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.953538467 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.311784804 seconds)
    (231/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.237600348 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.029100468 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.336183222 seconds)
    (234/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.456521332 seconds)
    (235/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.869480106 seconds)
    (236/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.363089814 seconds)
    (237/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.384139628 seconds)
    (238/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.832065875 seconds)
    (239/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.164320144 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.345228831 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.567305836 seconds)
    (242/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.751402904 seconds)
    (243/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.327200776 seconds)
    (244/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.628910431 seconds)
    (245/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.512583712 seconds)
    (246/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.361604861 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.365680275 seconds)
    (248/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.875174018 seconds)
    (249/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.344593416 seconds)
    (250/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.404653319 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.71872704 seconds)
    (252/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.598563375 seconds)
    (253/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.314110103 seconds)
    (254/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.193577769 seconds)
    (255/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.080118212 seconds)
    (256/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.340997498 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.824595301 seconds)
    (258/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.347418311 seconds)
    (259/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.322082476 seconds)
    (260/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.343724525 seconds)
    (261/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.002422404 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.00897894 seconds)
    (263/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.394303532 seconds)
    (264/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.313771487 seconds)
    (265/286) benchmarking ("sort", Float64, true)...
    done (took 6.335205643 seconds)
    (266/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.13959581 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.153911728 seconds)
    (268/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.33412939 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.43726991 seconds)
    (270/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.851716662 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.417440444 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.452634771 seconds)
    (273/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.874545542 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.177737693 seconds)
    (275/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.33766113 seconds)
    (276/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.323651875 seconds)
    (277/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.363640292 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.761986055 seconds)
    (279/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.230594221 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.377371202 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.361288705 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.369260728 seconds)
    (283/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.320212562 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.376638474 seconds)
    (285/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.716380706 seconds)
    (286/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.361650758 seconds)
  done (took 946.847700824 seconds)
done (took 948.084924107 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.373848695 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365045306 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.345378185 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.374737635 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.460350343 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.371961428 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.356504882 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.350683528 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.400791256 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.396064072 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.348277621 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.371384975 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.349127846 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.347127361 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.344926383 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362611177 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.51706837 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.354203893 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.364345137 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.357573164 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.363759348 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.353514892 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.399059597 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.371771996 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.350392394 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.352730564 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.352270834 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.370215754 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.460208118 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.353628732 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.352178259 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367049211 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.518384399 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.354702426 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.349766126 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.369546535 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.366652171 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.362359824 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.35762745 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.387953451 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.975463308 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.36649695 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.349314671 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.355050284 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.350994449 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.35777387 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.351434334 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.356699393 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363707727 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365522191 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.993001429 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.388663536 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.35163023 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.351927287 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.362240747 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.348217451 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.359655755 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372599652 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.374873705 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372026743 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.515107307 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.357239186 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.355671448 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.368688467 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.364233486 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.031189697 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.370804887 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.360677518 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.973397023 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.381732254 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.032810251 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.384984407 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.355689514 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.372554731 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.385480898 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.475455957 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.345180288 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.356558126 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.363404504 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.355819771 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.366584785 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372019168 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.361875191 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359479351 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372484258 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.382388039 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.368326525 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.360496866 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.367655189 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.375980657 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.366355425 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.371020774 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.360068663 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.350990768 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.36817249 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.363366897 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.362206575 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.362223273 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.365694881 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.370937763 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.978197339 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399349896 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35577282 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.35636106 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.356881823 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.372740799 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.981081509 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.38015576 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.383086616 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.409120787 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.358397782 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.464473106 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.356512778 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378949129 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.36773985 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.361377606 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.353706299 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.466676643 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.990332311 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.395806901 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.362289152 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.358154724 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377619341 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.361053929 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.356304126 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.478845767 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.354342842 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375375824 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.481045157 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.367387386 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.392724553 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.357106327 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.364197727 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.384771317 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378615195 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.393614103 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.363960095 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379035698 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.377648395 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.3577525 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.373712058 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.371709627 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.363971798 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.368700055 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.352220139 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.385280976 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376203727 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376676083 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.383045225 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.482290842 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.359601097 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.468486619 seconds)
done (took 231.336534066 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.421384805 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.35080001 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.442366767 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.360121646 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.460972852 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.459613293 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356460203 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.358605455 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.357190064 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.738459188 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.359292409 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.358602481 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.360244384 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.359084311 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.440501381 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360143712 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358694124 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.701614463 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.363079207 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.431567555 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.359746039 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.359639051 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.361645389 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.739926451 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.358994701 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.359930633 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.432635754 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.363170304 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.70534085 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.353974432 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.360739417 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.705002383 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.444389388 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.378652393 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.36613971 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.36709493 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.463521092 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.378320842 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.440827798 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.441298852 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.443281757 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397669097 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.355121018 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.357098578 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.357943399 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.364760107 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.361762452 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.388669158 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.359444922 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.364867216 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.700847245 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.37335324 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.372565077 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.36030989 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.361422883 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.382285354 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.357928644 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.363866198 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.450392918 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.364807767 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.419146435 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.741638036 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.740851872 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.363711246 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.359301268 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.362770023 seconds)
  done (took 150.233329718 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.43130709 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.436378968 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.48320436 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.379175717 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413953344 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.487516177 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.376897709 seconds)
  done (took 11.281722019 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.370632434 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364436907 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.411461822 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.424831856 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.363516332 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.542540905 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364692738 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.374974598 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.363491288 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.416195822 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367269638 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364730152 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.374152563 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.358039001 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.421191889 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.370402853 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478887618 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.361384156 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365879983 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.52055551 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363792355 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.368067637 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.417184474 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.376254407 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.366856297 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.366290515 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.179716858 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366138602 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364634602 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.365351586 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358861139 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.442131822 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.367804686 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.36103121 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364580767 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481831401 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.366800376 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361012863 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.365315034 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.365244652 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.368284328 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.368442953 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.367181929 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.365323226 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.368238922 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.390111726 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.368410108 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.369618723 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.368367251 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.366044081 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.417803663 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370288523 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.363727504 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.36536516 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.423849736 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373332652 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367856941 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.366960131 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369262372 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362927414 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.524529275 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.412499746 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.369452735 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.413407384 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370746218 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.36873434 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.368653411 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.368723667 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423375466 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.369477971 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.415690553 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.366007369 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.555445451 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.384504052 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370023326 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.370716941 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.370742403 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368065782 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.363458476 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.375628433 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368271867 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.370304936 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375184019 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365274739 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368210737 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.533827681 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479147603 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.368620791 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.381795944 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.372720469 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.369781113 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.419635265 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.368947218 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.367374988 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421873506 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.483793769 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.422561768 seconds)
  done (took 156.874287247 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.374307652 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.377552311 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.367357136 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.387014893 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.365185348 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.371598901 seconds)
  done (took 9.523831355 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.372177831 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.374384017 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.372801296 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.368999374 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.369132959 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.369318265 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.37346833 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372945488 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375317829 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.369640252 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.374411883 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.36925242 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.369223912 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.372133814 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.36694898 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.374127023 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.372584772 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.36573864 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.369238959 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372656439 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.464139584 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.372922215 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372781813 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.372315755 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.377841646 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.372903233 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379854289 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.373977422 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.373276829 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.376741148 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.395342379 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374092286 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.375109051 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380071687 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.377034857 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.367398015 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378563779 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371393901 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.367861135 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.374391457 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.375498634 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374460293 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.373959968 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.375649422 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.370725341 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.379002569 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.378231102 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377726351 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.376519912 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.371371602 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.372693238 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.374051382 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.374497635 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.374843369 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.371692176 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398612771 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.379467291 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372303443 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376313652 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376697923 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.377857846 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.37266652 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.37806596 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.380493081 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.38152439 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.37778412 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377419323 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.38439472 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37695718 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376521771 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.374232208 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.371489602 seconds)
  done (took 101.356516755 seconds)
done (took 430.530383737 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.508365592 seconds)
  done (took 7.793572089 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.547126078 seconds)
  done (took 7.836738956 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.386055915 seconds)
  done (took 24.673832636 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.425550218 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 8.291999719 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.406895684 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.370224684 seconds)
  done (took 28.778495518 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.93521052 seconds)
  done (took 8.216494657 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.371480118 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.363029581 seconds)
  done (took 14.016088779 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.531339281 seconds)
  done (took 7.812481165 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.521524303 seconds)
  done (took 7.807461974 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.38003149 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.402822291 seconds)
  done (took 14.079277354 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.34881611 seconds)
  done (took 7.631180807 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 12.086524854 seconds)
  done (took 13.367563778 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.384443109 seconds)
  done (took 7.668704032 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.452729831 seconds)
  done (took 7.734045525 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.208996707 seconds)
  done (took 10.493171566 seconds)
done (took 169.18660967 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.371081268 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.36589306 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.363209214 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.366618696 seconds)
  done (took 26.748659503 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.413770693 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.413663465 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.421883661 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.426472037 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.414663038 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.412486472 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.408739487 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.406977098 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.423391676 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.416746573 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.415860265 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.417428027 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.408958033 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.407146248 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.4117674 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.410881321 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.420990932 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.413726614 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.403467163 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.415395725 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.377089345 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423442327 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.416407079 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.380022573 seconds)
  done (took 35.164762066 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903397716 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.447683379 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.532773406 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.430164284 seconds)
  done (took 7.597696461 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.432067728 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.430312582 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445437159 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.485142962 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.515868389 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.443969312 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.404093886 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.402489954 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.386098737 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.432869132 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.506762734 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.448865952 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.52191054 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.376896324 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.571573458 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.382958081 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.382136096 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.432299769 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.485534979 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.503321046 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38268598 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.43551859 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.443334884 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.448409572 seconds)
  done (took 35.985597857 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.381795364 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.400895881 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.382137462 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.378511711 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.388361618 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.381785284 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.380059753 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.381548215 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.382378144 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.387964625 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.381543743 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.395792953 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.381730631 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.380452674 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.38240705 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.382606938 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.388888779 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.378723453 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.376312208 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.390544749 seconds)
  done (took 28.970250302 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.374009088 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.229022408 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.725859679 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.628539363 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.375184593 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.375787513 seconds)
  done (took 27.995122421 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.458913693 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.632461385 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38238964 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.778850394 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.869229105 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.396013189 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38293262 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.656720332 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.020563081 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.002680268 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.447606865 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.461342634 seconds)
  done (took 20.779712911 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.37907232 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.372160473 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.386732471 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.385476368 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.445865541 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.407415415 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.391210772 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.379472692 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.443114483 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.471266458 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.406623336 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.447241524 seconds)
  done (took 38.206801785 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476723866 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432219197 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.45047327 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434581275 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101323778 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585543532 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431194346 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.161701856 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.403312974 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647604466 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39166361 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477712407 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634466488 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381233394 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376427345 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.439027422 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625807969 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896943206 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371994042 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766500453 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40261319 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378795702 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.863064077 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63807788 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612154387 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351675895 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.631999805 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.1462849 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694170768 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384378833 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379138471 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378877812 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652360156 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080974554 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498122105 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61300618 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409675281 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.921109113 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.375318414 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.762018565 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398013123 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383554282 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386679681 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370487893 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307556018 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37496971 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180922541 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.410607697 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.094118886 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374974445 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668386738 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473932198 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.380346714 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.953168135 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370563832 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.378363445 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.383540324 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47249199 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969028569 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.264122799 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396739006 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.314658327 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376755225 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.700952609 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06270112 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.399940775 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.379048565 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376720098 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306765258 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.7515155 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396681869 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513094671 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.397558876 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.040950862 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145570771 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.41148864 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.313696849 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962699187 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379633137 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.315648644 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602893109 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153436911 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318060825 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.322554074 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308244626 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157313085 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390161479 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.856702684 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400903774 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.196201914 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643917237 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419975574 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398055688 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59827281 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.352259244 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376561804 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.376803999 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499502731 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398400208 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.170927118 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338410283 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.379286276 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633793539 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.58484625 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377657485 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.455745779 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949491508 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407994183 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.400321547 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378660282 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621461838 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.048235013 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418120417 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273723347 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399147995 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.152317634 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188809226 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386152351 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.410899419 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390280703 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648081429 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.206530623 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284860525 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443310649 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379625691 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376384055 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.792790171 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.232315187 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.278555603 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.602070224 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421576056 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.395085195 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.378461756 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340566167 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.390003566 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386061127 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.163293069 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603323353 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396244817 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662066089 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311730387 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530179974 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.397964791 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.603423041 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.674267409 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.405253734 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64204968 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381669557 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38484779 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39813431 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397520296 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480397069 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402025832 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.391696282 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645781082 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.384164658 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.385147164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.809163046 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.163594368 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384548755 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.385323933 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378190653 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05750667 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383620719 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389647702 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273464444 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392476086 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453213252 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389245142 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627145101 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.439293179 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400701824 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.404569775 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.39341292 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610385037 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392784446 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.708081483 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46528077 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.924189769 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052406384 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411860588 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.316483786 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.092694157 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.077838929 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383778357 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.586902062 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381493355 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619665552 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425701406 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387837517 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.022548467 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402289363 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.716208039 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.393250612 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395818947 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.386675887 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381371569 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.411866889 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.321577398 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406451258 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403321951 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524360616 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.392958793 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315621812 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.900260795 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387540936 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382127833 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.161649201 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420341251 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.709794225 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271590494 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663576712 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384906314 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693688875 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.924803687 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.426240355 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.386885603 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398111622 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393171646 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.396840902 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412086302 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.398391892 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.779525379 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.839508139 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955283638 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18553427 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008346511 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.791631197 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.421907616 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.273560964 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.184531136 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350573224 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.046855197 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600442102 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212706325 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373241497 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937913643 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.707107272 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263953764 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684184675 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62236159 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.86328352 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.416079644 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709701453 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605492859 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420158989 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.383571501 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321009696 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.664395454 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98661527 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409695826 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470377174 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191680069 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422707396 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.17163452 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.419959951 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.228206954 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851339044 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.961360899 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.782738081 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394851368 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409614062 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25208527 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419923677 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922997282 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059069684 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413492489 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.941505335 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357270091 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631457214 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.428873723 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.385488583 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.939628676 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.396233666 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.650196972 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685221182 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332859961 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387714274 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981560347 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.265184245 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.392012372 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389121052 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209951542 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406490374 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718801854 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.393574582 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.378246393 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410421539 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323257949 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323864408 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.080482823 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395460027 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361309082 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943286226 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.414574634 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412594081 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401349203 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246705989 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647977896 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.404903936 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.035579348 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638271041 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391243096 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412784704 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.395145796 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405562732 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.378704867 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.2899033 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.62823955 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39589868 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615257675 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.508591488 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.304162107 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.449302391 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602143172 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.272954949 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391322795 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679735808 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.60135268 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.407724327 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184925176 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433206464 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400512089 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415962795 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397365723 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408905049 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482681439 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633294333 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.429664735 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.403708464 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850976658 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42165492 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419195585 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.412720477 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487015399 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.33277961 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.386060683 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.165461808 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051961462 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219158216 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.068401861 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71641776 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400290573 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396292625 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330448673 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543108593 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924462357 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665452804 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512968531 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.394997174 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415312502 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391825406 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411870217 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612076844 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667609478 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.268678398 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396873499 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.086192317 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.27512924 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401781336 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.601891703 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953323572 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016986967 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518481182 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403707296 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.200302785 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695866742 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.485148706 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39936592 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993196028 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.399127095 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.258014695 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.410117242 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395508835 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54943736 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688502582 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111614345 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.434038686 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.552357518 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.170787339 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.75933359 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.657742952 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.975250423 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.644849946 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083616412 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.213891429 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667910359 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46588036 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642635151 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.535093581 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544018837 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.395094337 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.302390649 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394255634 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248476698 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.109533341 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.412965359 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047801968 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683498384 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.398450172 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.399523226 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418736112 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.411654874 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621545087 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181511268 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628258383 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407629221 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410755136 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.973120819 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060797778 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725094934 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33872248 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.399863533 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671461592 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665170149 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425368266 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.850653159 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.110898458 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998320732 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.37768696 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427378286 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405887079 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.198529434 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065724405 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.45568776 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967478719 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.065598225 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406534042 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679455058 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.406960809 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41134083 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681125301 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404143054 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400265941 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651099436 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.085598245 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291116637 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.415182793 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.875797826 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.343669514 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.630462041 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408392352 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333676224 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402006824 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.867034341 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428318946 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52671507 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41090363 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.397037629 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418433078 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.186967206 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684586406 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.403972282 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.400089603 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.390838683 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420232194 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503093502 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046246012 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436609846 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.081647635 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.753490759 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662304411 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.409188425 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.387225207 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.410954435 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403778892 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.134325616 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.379119922 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408579922 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032625029 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.415023151 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.418216941 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410176308 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.625616262 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617235242 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419924096 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652301146 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444034501 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424134034 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.303675201 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.177036423 seconds)
  done (took 1678.642938541 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.403831038 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.441308064 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.440692101 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.491391183 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.426315255 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.475325256 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.474024953 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.491930717 seconds)
  done (took 52.961929095 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.413383375 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.57105349 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.439183435 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.415845851 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.41134564 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.408374967 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.923217147 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.445634743 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.413291673 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.420338869 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.416326068 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.419665148 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.128904197 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.420736507 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.412515589 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.393636921 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.410754694 seconds)
  done (took 66.789034615 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 53.76250342 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.437126094 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.900543218 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.403528007 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.791364894 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.414084417 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.909485599 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.451252848 seconds)
  done (took 102.391446183 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.428388264 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.428133993 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.429633415 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.43036418 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.429194311 seconds)
  done (took 8.468184803 seconds)
done (took 2131.985676745 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.417358126 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.417536524 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.417666059 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.417632371 seconds)
  done (took 6.990185008 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.391477077 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.120680514 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.394818646 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.407427554 seconds)
  done (took 18.635217421 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.412453661 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.426596707 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.208472833 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.099005593 seconds)
  done (took 5.629538722 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.166086778 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.178679305 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.159755641 seconds)
  done (took 7.827080506 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.41472499 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.415552268 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.411854759 seconds)
  done (took 20.565125896 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.720705745 seconds)
  done (took 3.045122085 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.561618705 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.609084364 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.729592363 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.737390294 seconds)
  done (took 7.96161098 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.800459225 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.801966797 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.596893527 seconds)
  done (took 6.522061504 seconds)
done (took 91.331968501 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.606067597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.78777464 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.619759997 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.574159243 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.640384034 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.62051081 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.624374757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.537585018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.078763792 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.066110904 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.612374258 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.648962567 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.576949129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.792549586 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.576392943 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.417433365 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.649629109 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.655614327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.254539506 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.41755683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.626647944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.208854908 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.438707027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.231558243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.640994761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.568890404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.793175048 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.41129658 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.429234725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.806662429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.565470736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.414331534 seconds)
  done (took 198.215613843 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.409675139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407211644 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.409488115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429022391 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.411069745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.409460788 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.427534372 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.40833383 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410728387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410530383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.411337006 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.416132913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.408695949 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.421997274 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410885618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.421965926 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.412327876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.427155092 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411048971 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.429119106 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.424746466 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.410229315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.431522562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.430912445 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.428353739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.408487662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.446394801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.409845036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.411074951 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.409144323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.410088911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.444049072 seconds)
  done (took 206.694496532 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.419304262 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.441732268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.409672907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.40864489 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.427020849 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.410462998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.433758481 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.442097197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.428590484 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.412204106 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.410726061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.416253125 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.415329901 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.447417454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411215635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.430430967 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.420535691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.413273343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411420245 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.432384139 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.411020953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.421314953 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.415343302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.413521726 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.431292566 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.418361552 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.41163417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420591984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.414778642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.414027216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.426514205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.413726003 seconds)
  done (took 206.780464068 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.62660063 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.422970061 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.427510774 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.380786096 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426066637 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.427915955 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.425220307 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.617383329 seconds)
  done (took 15.083439699 seconds)
done (took 628.090972831 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.87484288 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.560242064 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.630312305 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.451875444 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.289862855 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460582936 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.446840428 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.641894313 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.388509228 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.643966655 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.761162482 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.45730942 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.910246856 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.439543079 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.734902861 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.55746568 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.428767778 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.567863656 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.80223487 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.068336728 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.723260818 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.99170446 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.660374282 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.401463409 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.917455577 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.974419155 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.251723123 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.410435391 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.469724096 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.802921241 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.247834578 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.52498693 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.517478326 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.521728182 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.582655367 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.561383481 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.495788639 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.510408364 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.664268084 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.749082973 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.048591049 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.190173195 seconds)
  done (took 97.663773437 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.416484548 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.413002378 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.414289645 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.414735649 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.418363441 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.415409285 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.412755102 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.414651113 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.415777022 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.414207307 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.414922772 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.416205715 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.414989209 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.416671908 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.413117183 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.414899904 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.416148685 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.416729317 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.409813243 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.414972323 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.417406462 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.415686987 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.417775262 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.413747739 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.416874206 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.419033133 seconds)
  done (took 38.129733961 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.434383514 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.704820607 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.885489406 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439501805 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433318293 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.435238119 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.525332592 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438625727 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.436587461 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.43684894 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.616172876 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.428102031 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.473830955 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.913540203 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.43647955 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.434300398 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.433636192 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.434783869 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.711715907 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442471602 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.547874374 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.434364973 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.52197494 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.442899852 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.457184434 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435558014 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.438557936 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.003928215 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.455682074 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.618127176 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.326517167 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.520775578 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.955305378 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.917556514 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.326398392 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.437366554 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.438851931 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.618413307 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.429529984 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.435880798 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.52416838 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.43042558 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.900947844 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.11705332 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.457385534 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.439081266 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.024584896 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.633988096 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.712835354 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444390553 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.921065752 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.438710755 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.435727228 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.435198025 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.714554597 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.446615052 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.432843734 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.030098046 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.464720844 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.526653569 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.433629667 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.434316385 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.712899583 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.432620169 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.7060539 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.438971402 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.441512107 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.454915773 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.901735391 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439014465 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.13761669 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.455809026 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.439097252 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.618651117 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.700095597 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.055160188 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.456150372 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.72346467 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.967929323 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.543215244 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.435436014 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.988949587 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.541781998 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437639679 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.442294588 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.441533481 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.439708507 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.486855214 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.52358107 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.070543044 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.146358955 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.050297285 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.542611647 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.444550503 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.434743748 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.020010678 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.453848489 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.438423881 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.901012405 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.149078981 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.461578172 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.447358756 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.145625567 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.461733089 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.532187833 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.437836363 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.926413936 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.441698255 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.485891761 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.440946643 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.445304506 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.46004825 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.525702049 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443647341 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.438816278 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.115261293 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.651166517 seconds)
  done (took 189.869220188 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.452381236 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.427581758 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.437606076 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.449955919 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.433935359 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.443656342 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.429585339 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.434758425 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.441609004 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.437160551 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.436414009 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.43798607 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.434224927 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.439317516 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.439520872 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.440802212 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.04931544 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.433579954 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.436219806 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.447421332 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.260906051 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.436641876 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.435496276 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.448837822 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.437078472 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.437538834 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.443839575 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.429384347 seconds)
  done (took 155.054906125 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.443578092 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.103062091 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.460296371 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.5887334 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.468161416 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.442200916 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.591969033 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.50816052 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.455509838 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.440327025 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.439971648 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.781581741 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.438336043 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.02232772 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.654686592 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.615939836 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.021192155 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.456435132 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.444688125 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.443277775 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.591352056 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.451733522 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.778725251 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.062609848 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.457482326 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.067112037 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.419477612 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.443948348 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.441097211 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.082794601 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.455566791 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.803150248 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.528984628 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.513148939 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.087681553 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.061915143 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.072250098 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.614831023 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.444888781 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444990202 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.443909929 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.425420245 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.082752547 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.461574876 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.441506474 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.09707338 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.466855519 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.447533779 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.450923345 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.442696784 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.511365871 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.521993038 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.818026488 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.115931838 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.555398992 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.458902117 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.597337313 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.86608535 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.441115036 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.018902967 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.422262866 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.118194369 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.468849241 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.427116145 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.445972734 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.451750762 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.617405605 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.600178491 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.038015757 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.460362947 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.048478112 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.636773627 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.445218163 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.439371709 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.446125713 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.116227747 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.057711354 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.634192444 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.601260747 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.663510301 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.423488526 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.442232779 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.431214862 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.536419968 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.445713795 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.11954963 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.077420764 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.468876194 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.446845781 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.447948027 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.450103644 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.646934322 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.128419399 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.557078838 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.047187226 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.823963969 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.806574051 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.451600014 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.511096592 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.458329156 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.805267865 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.450942691 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.512306981 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.928406318 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.801306745 seconds)
  done (took 174.015254842 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.726665922 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.814615586 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.543583487 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.606390086 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.108962408 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.057370994 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.789809125 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.597053263 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.559943646 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.724899449 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.752424194 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.540241711 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.684364538 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.535599319 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.215247916 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.539332517 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.567061638 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.605192959 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.617072187 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.548826967 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.187896531 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.759620985 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.651518733 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.454251273 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.550181144 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.30703791 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.041540118 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.982921135 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.646146311 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.946739968 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.019648937 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.652468425 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.52558009 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.220747707 seconds)
  done (took 70.430952713 seconds)
done (took 726.491068981 seconds)
SAVING RESULT...
DONE!
