cset: moving following pidspec: 12302
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.319561088 seconds)
loading group "string"... done (took 0.606962456 seconds)
loading group "linalg"... done (took 7.271510721 seconds)
loading group "parallel"... done (took 0.158743332 seconds)
loading group "find"... done (took 1.099748342 seconds)
loading group "tuple"... done (took 1.726821643 seconds)
loading group "dates"... done (took 1.185981383 seconds)
loading group "micro"... done (took 0.222644694 seconds)
loading group "io"... done (took 0.983127032 seconds)
loading group "scalar"... done (took 37.242609831 seconds)
loading group "sparse"... done (took 10.77851833 seconds)
loading group "broadcast"... done (took 0.902183779 seconds)
loading group "union"... done (took 11.824081083 seconds)
loading group "simd"... done (took 4.105280261 seconds)
loading group "random"... done (took 8.492417413 seconds)
loading group "problem"... done (took 1.855781556 seconds)
loading group "array"... done (took 19.4744716 seconds)
loading group "misc"... done (took 1.620171527 seconds)
loading group "sort"... done (took 3.045102228 seconds)
loading group "collection"... done (took 16.756959397 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479808821 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12238195 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113636859 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117367764 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139326892 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114395093 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122052007 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083151984 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.887094149 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150186364 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11799185 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408048282 seconds)
done (took 5.071287237 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172683702 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081639686 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080330313 seconds)
  done (took 1.337601466 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064962681 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119754899 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06572118 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066713761 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065881164 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065353139 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065134699 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065482407 seconds)
  done (took 1.690740546 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072636676 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068361097 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068090779 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067488364 seconds)
  done (took 1.453402121 seconds)
done (took 5.907000803 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.755068071 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199903427 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183753276 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.392636616 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125525759 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152485128 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64404205 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310977284 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181085158 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080266759 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101475981 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.313966096 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106091742 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641851317 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075403157 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090660434 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136778899 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.400410487 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066168883 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081123597 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087701745 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139084016 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086862816 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074536652 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142670874 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066735862 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12880335 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081714176 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065498635 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205030552 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172155543 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.758839848 seconds)
  done (took 10.263110442 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095280138 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096254331 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067732696 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135198214 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095487084 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068657707 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069919261 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066188446 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085745579 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127207098 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087169805 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100320454 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064526808 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068219951 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083538561 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203564351 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080079894 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080455196 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069300853 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074397867 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11483206 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077341932 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07726909 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076411268 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127363882 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179504324 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098359563 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098432815 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068362053 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080713984 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114086963 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124384683 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064414436 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065282007 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122550577 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093033956 seconds)
  done (took 4.611881445 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.932321015 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138841798 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089641807 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164955015 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068021889 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106761995 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065128704 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084448271 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198981494 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.350399994 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.571960929 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109990883 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099515209 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066909209 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067257425 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066084032 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.343673445 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.120740162 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111479918 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08257588 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073170058 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068216166 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.350840155 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067326778 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065963845 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067383576 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057752222 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111396223 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067479936 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.92224408 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.128392166 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06875966 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101487017 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170459881 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089870144 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.26790621 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067991583 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067381391 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152640449 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074141826 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0828993 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089926552 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065563377 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082361614 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103322461 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111190501 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067839012 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066567069 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16075008 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065770317 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085895269 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.007196656 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160295605 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078783805 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067512177 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244175449 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084681262 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066143477 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064167458 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.209236386 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133937734 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066849757 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065981217 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065083021 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063634058 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069113286 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359961749 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06594409 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.712110557 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069372284 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078712731 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073117228 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06818994 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074250472 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073092167 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084665915 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066965228 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075302829 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064949103 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065164947 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067229365 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083631211 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356933187 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065830229 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063586798 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067129803 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063909244 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084985961 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097653319 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072314882 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064495388 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.205996106 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068714613 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067464908 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100531027 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066533301 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08358679 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068964196 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113047119 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068015092 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.111904444 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067376047 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.0960313 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069529982 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098520362 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079986691 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067971566 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398346978 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065061948 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064315594 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068272954 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067601003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066950935 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067981687 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079061077 seconds)
  done (took 21.056990889 seconds)
done (took 38.041117849 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.284377862 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073586986 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074380091 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074111346 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07416178 seconds)
  done (took 1.846257367 seconds)
done (took 3.098574015 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118849846 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097636932 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064764612 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093900256 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063940328 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099155856 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098199712 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079923022 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098206227 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064006462 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095523785 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06353556 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063655376 seconds)
  done (took 2.367567556 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082355733 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082531093 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069066924 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081550342 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062736122 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081008273 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080005099 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08735334 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080035318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071116809 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062832955 seconds)
  done (took 2.081308485 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081506161 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082878057 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0692998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081030386 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063132727 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08069109 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079745177 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084462445 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079996067 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072312199 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062988251 seconds)
  done (took 2.075193826 seconds)
done (took 7.760345347 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076301582 seconds)
  done (took 1.307378659 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.585152309 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.095569701 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081058356 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110597004 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182968264 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118905917 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276235651 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086041171 seconds)
  done (took 8.947252111 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091034547 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069839264 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071738031 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084717679 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073076434 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.0697249 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073414496 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.0704662 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072315048 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069831633 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072911886 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073336011 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072282904 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06930882 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067938201 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069763173 seconds)
  done (took 2.471393432 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091877162 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090825855 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073679476 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073873185 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071430283 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073289039 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075341559 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075055924 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072407581 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073363112 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076319046 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074845476 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073148105 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06611784 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07532547 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076064755 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07011475 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074319099 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07403391 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074158953 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074506144 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063894485 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070739376 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073141078 seconds)
  done (took 3.125330107 seconds)
done (took 17.090968242 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111275256 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071638577 seconds)
  done (took 1.419888452 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080535241 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082625136 seconds)
  done (took 1.407622457 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081026136 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065284008 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089331098 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077056384 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065901958 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066102231 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086291441 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065796573 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06533934 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065624524 seconds)
  done (took 1.9731048 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067382042 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07642644 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069871632 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080763615 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073358667 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063610014 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072349662 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067427815 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076697901 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062433517 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070014213 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081606561 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070490757 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082704214 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071816414 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067320054 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070159808 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06663075 seconds)
  done (took 2.539137462 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065350513 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066143453 seconds)
  done (took 1.381505864 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065880724 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062928007 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066421028 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066076601 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063136598 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061867705 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063301944 seconds)
  done (took 1.696191182 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389311257 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110246447 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297255173 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071920242 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082919302 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251588351 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064891767 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070168012 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070321636 seconds)
  done (took 2.702668564 seconds)
done (took 14.37167482 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078038933 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084699993 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097188591 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.346834708 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091321084 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066182772 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115526831 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190358937 seconds)
done (took 2.330500157 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211136148 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.615362888 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.392277933 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194637337 seconds)
  done (took 2.455947616 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3244705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088311876 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06039097 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06870684 seconds)
  done (took 1.806408034 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065834047 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068447165 seconds)
  done (took 1.395680004 seconds)
done (took 7.130455969 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066658878 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083664597 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066731836 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064637326 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066621311 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062871514 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062897947 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065598003 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066557032 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066596464 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069548871 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067702348 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067289149 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064964154 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064675301 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067010169 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064667285 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064319828 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067091781 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066170696 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06367366 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066506515 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063307901 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0631822 seconds)
  done (took 2.887530238 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083403992 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06807736 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072703839 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07276134 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071705233 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073039524 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072559906 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067593347 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072962944 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069753546 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071070173 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071432312 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069414632 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071870722 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06982077 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071930556 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071904202 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06752797 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067759594 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069771448 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070650583 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066057961 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069355559 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07059854 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068989761 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068987236 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067481643 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06579159 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070558301 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069538914 seconds)
  done (took 3.384275763 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068880488 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062975755 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063962966 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070255745 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063686321 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064473583 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062687758 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064030478 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064417666 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063053434 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06481385 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062989935 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063748179 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06410507 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064065264 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06692471 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078544988 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063556252 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063211741 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063768639 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066401412 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063153141 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063128306 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063088297 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062944979 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062996768 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063392073 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063243819 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063908969 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06316072 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066752634 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066409409 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06313238 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070266486 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066862537 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063677623 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066798858 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063460471 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063648127 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063085257 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062693741 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062884524 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06343283 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070076644 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063422192 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064546885 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063253024 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.173476427 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063711056 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06587647 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062753617 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062975076 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064455299 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064173234 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066909994 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062644193 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063771028 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062580655 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064052956 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063258778 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062609006 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062358289 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065349952 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06345034 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07703286 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069498537 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062914786 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064524572 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063753269 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065023827 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064301048 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075716248 seconds)
  done (took 6.052379875 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089377648 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086747099 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065387262 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064655691 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061469927 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063479294 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06712743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063852307 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065465764 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069393119 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064189408 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064893841 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065137642 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076792617 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063952288 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064762666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069532758 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061362794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063707455 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06737855 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063979415 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066712471 seconds)
  done (took 2.772677926 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154726161 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070072767 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104275319 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072392836 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067087945 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072495621 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069569834 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069690446 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069395783 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068197572 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067571797 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069701406 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067082408 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067336729 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067585748 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067759806 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069484172 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067736792 seconds)
  done (took 2.6410932 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077030323 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06549446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085791706 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065422615 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065437667 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067777194 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069869081 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073684572 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067564064 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065617236 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073600079 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067952234 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067661759 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065657741 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068177047 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065493921 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06816741 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065169431 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073707355 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069950547 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069996059 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073333516 seconds)
  done (took 2.813182174 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078950883 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067205355 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083067277 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068930037 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061574647 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064141132 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06937016 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065871059 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069733245 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06739526 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065256647 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064190662 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068860498 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065718667 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068685046 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065281064 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067099214 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065202296 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067067515 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06126577 seconds)
  done (took 2.63649373 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086309039 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068829948 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06912825 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07714237 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068292052 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068296643 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076540471 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06860729 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068497771 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088922913 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068561571 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068441505 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076038455 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072707237 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068778785 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076231785 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074693322 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074600488 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067740377 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067125852 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086726362 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066833494 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074684696 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066922328 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066771649 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067102478 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066813356 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071403586 seconds)
  done (took 3.305719934 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06625402 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065735976 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064019735 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065675547 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06523808 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065408662 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064880338 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065024029 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067729564 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064981553 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0674412 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067519816 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067445962 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06754058 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067652072 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067852373 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067210787 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065011428 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065218555 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065069846 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068213039 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067364782 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066180676 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063164149 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063801408 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06566068 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062977194 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064156177 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067537643 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064831102 seconds)
  done (took 3.266061466 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07480776 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072610568 seconds)
  done (took 1.435668386 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062931311 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081024857 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065455732 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07165204 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07153829 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068223325 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07516024 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071489877 seconds)
  done (took 1.850518228 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081451666 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078676385 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069458145 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082628404 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076594955 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082792442 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131898102 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066972387 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072951515 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064429514 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07959417 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065273119 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072421711 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066672086 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0715582 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072147427 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063799518 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071784154 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068706283 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064583271 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06696328 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074541628 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068506429 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061302607 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067240249 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088067896 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076710343 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066023452 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068809192 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073305431 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071579034 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061612902 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065644448 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066502635 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063579554 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075319626 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080357866 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068049516 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073799995 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066823318 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075692781 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060584436 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070042019 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072059759 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075303134 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065738351 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06641565 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060697656 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063605674 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067630002 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060901288 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065663607 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060256377 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074852467 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069206081 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07566466 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064668037 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067020205 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06827193 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068586562 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072037101 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067590586 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068678709 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065780956 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073604286 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072144827 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077169374 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062458499 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061856627 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065327534 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07714707 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090131323 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07387309 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06803689 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068263409 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064943861 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070796992 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068511155 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072615393 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072854492 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065446703 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070643848 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072625661 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066123371 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067966682 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074285731 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065087164 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070149604 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065118442 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083921347 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066450639 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065698419 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065137687 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077710842 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071147813 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067232101 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065318924 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074902446 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061575473 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067851283 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068115686 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066568489 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076543361 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070593577 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071032568 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07414333 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072717604 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065797276 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06837424 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062081417 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065912945 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064051131 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071486525 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058900057 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067106857 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065211182 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064900533 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198363309 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064945125 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06681561 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073431287 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071870058 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06460245 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063509032 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068951645 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066538361 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069430418 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073880835 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064845309 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062102517 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061489202 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069312658 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065759802 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069353798 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070642301 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06950827 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061252311 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065249778 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071503298 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074876951 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065970106 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067443759 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072825285 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067045801 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065165029 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072681044 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068479951 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065296746 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071570212 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066917684 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061053317 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069873347 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0691524 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064722189 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069759352 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069206277 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068558635 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067384336 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06492792 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073456305 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068230858 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066165737 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065688751 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064479028 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075824999 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068262917 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061485905 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063414647 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075206655 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064716222 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065314064 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064643699 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068374481 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066792243 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064391851 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067151197 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068150217 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076335968 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069749742 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066827926 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071401993 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07640438 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065577437 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06853026 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065085618 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067246602 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068209109 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076998555 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073011754 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07189561 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070229707 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064729616 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073168622 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075819794 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067035862 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065319403 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067008601 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071917439 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073983962 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071705267 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068338789 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06607718 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068081445 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071611951 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070242129 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066974376 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066684042 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074344167 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065672356 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07467544 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068385394 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077905469 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071165794 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062913102 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070667988 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066014054 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073903756 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062876164 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064714909 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065447144 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068562582 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066579451 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070098772 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062208686 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074766199 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075338851 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068359908 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067194073 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067932339 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074229359 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069234845 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071251584 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07083035 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07293934 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07670578 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065883858 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069965107 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077135844 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066443981 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.19140092 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073021584 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065561828 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066855409 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067469484 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066221229 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071082553 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077880052 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074908766 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062359906 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071072897 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06667804 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066987919 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063854588 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073568192 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071756953 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069647886 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075440512 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069328041 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069380711 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072661808 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06871792 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069386201 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069720889 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071233848 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068757351 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070232933 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068141868 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07116334 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067779279 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066372543 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070097404 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068483357 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069081478 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073448147 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068505481 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068675393 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07096441 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069369892 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069161461 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068732986 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068123244 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071047539 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068941523 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069182738 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070610946 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063738617 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075206437 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067790708 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076114352 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068979648 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064861286 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07601626 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070603276 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073505577 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069183578 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068391015 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068623188 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06623548 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071198355 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075263857 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065798088 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079300394 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07600151 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069157751 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070828597 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068513463 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069585601 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066749238 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069134741 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068652575 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067972099 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067736013 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072524052 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070400444 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068113858 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069357146 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068476257 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071610922 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069011678 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062230735 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067099736 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067312211 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067804503 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07815436 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068588263 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06750113 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066369463 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068419116 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066444938 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064609748 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075399586 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076880271 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068092764 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074733596 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066658715 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069106116 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078592907 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061674015 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066020366 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065067184 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065449044 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074547563 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068028428 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076910878 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067530103 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067145405 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064608039 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068023972 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065968042 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061687251 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065416109 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07126207 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066422681 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06611696 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067452529 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069757765 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067431063 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074122308 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064211198 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065698798 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065024326 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062005851 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06407734 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064409323 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.200611576 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067067776 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064367872 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065619749 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067314303 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0669472 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068086238 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066082498 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068015343 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075223996 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06618624 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069952794 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069826662 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061352482 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06981132 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067061665 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066985167 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065934156 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070291295 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070136156 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06822653 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075548624 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067259653 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069442404 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068600803 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066077767 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068843881 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067937947 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068784828 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067311376 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069031451 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077008138 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066145588 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070196562 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066709747 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066964539 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072330371 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066539496 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069162677 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07273951 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066577537 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068197364 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074719275 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070503946 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070227124 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068318092 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0680043 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072393545 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065266741 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072961936 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067102896 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067404496 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068304538 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064132165 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066171729 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066448814 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066081888 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07257306 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066936943 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065850531 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065959042 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064768495 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066907523 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069618431 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073202891 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068749322 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068364331 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06102189 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063550436 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067517775 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064103348 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068707801 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07085772 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073742342 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070309223 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068224029 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066372669 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077314317 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073723987 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071500097 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064700319 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070013083 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066657388 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068633663 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067073995 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066361959 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067276142 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070379516 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067316885 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065300041 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072824408 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070775963 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068770047 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069436626 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068818579 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068562012 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063288805 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071714138 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07001112 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073114164 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.0703433 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067824734 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07842838 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065615792 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068541616 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071165442 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067567842 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072966356 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063141121 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069661246 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069170617 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068713919 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063077936 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066469617 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065444429 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069133566 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065707054 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061120587 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07575002 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074360113 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06773651 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063692555 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063674991 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060093241 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060425511 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.197988218 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070559488 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070713178 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078287648 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067767484 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067702635 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063665995 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068976173 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071500958 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071679013 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065440544 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063698431 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067409403 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072566462 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072880413 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065194469 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066276064 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070027603 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069217168 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064675907 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069971997 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063670738 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070584202 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079323272 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067112739 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067397541 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073137732 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074513276 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067213745 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062460818 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067241279 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069657833 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067282225 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067844278 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067675439 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080985444 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069977423 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065450105 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065751721 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069284241 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065952547 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075051535 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067619666 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066729591 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070886576 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06843404 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074969569 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068859287 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074477196 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069475341 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069670201 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065979824 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067604957 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064857232 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065742843 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06802737 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067373187 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072211703 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074089848 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06588054 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076957167 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075631469 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067930456 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063557386 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066282166 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065968237 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062122086 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067669444 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06532352 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064280046 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064424273 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065607674 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.0685219 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073232938 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06848281 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068495415 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06774586 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062361953 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069775345 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069940641 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068620505 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064542562 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067654004 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068074385 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071791455 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071048884 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065184928 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069146949 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06919932 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068156811 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062957506 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074488023 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06642473 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06958972 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067132374 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067465712 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068502383 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070912133 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07250892 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068384306 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069588244 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070990309 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06973235 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06512865 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064768704 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073071317 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065734156 seconds)
  done (took 42.968002019 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100742118 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064846205 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063906586 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063119863 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07531946 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06482356 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063842751 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064807213 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064541401 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066993172 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063577869 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0634004 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072290345 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079856377 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075733229 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068137078 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063493412 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064503185 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063088363 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06466856 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072407073 seconds)
  done (took 2.819507534 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074080005 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071350096 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074483581 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077672422 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068649915 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071962289 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074123234 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071912459 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077853567 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068472174 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077299145 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072253053 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068752932 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068820368 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077519051 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072382483 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07756347 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069080078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071957231 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074144935 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072332298 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073967366 seconds)
  done (took 2.956916418 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067680813 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066711414 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068758637 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063227434 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06744514 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062759305 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071361156 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065363123 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071137284 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066809288 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066578902 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067176429 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069178577 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062797834 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067364442 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065171233 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111524206 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070634611 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067446631 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067646665 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062422072 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069090774 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062988847 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063046232 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066473397 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070295525 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068391871 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06525536 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066929229 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066463593 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067026798 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065113221 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06867345 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067879278 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066374144 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066824505 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067055462 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066841365 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062638042 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064893945 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067565658 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062932035 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067430395 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068944324 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065538393 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064810453 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068371615 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066555385 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06198356 seconds)
  done (took 4.657701193 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079982105 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108664748 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067034471 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087423865 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079375742 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074404362 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069117775 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08903861 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063059836 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064082319 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081560366 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07866251 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065299432 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069701882 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071637558 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065029243 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067709029 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065806517 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071093789 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066332896 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070791836 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073756467 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081176001 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079826592 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07057313 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065821481 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066282365 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071533273 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079137295 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071241615 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071486654 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072365274 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081993149 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072078009 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065961351 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068673357 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082428443 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066946002 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069479884 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065438758 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068883616 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071390025 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072732622 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08281347 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066920505 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071831808 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066615474 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063729524 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07811837 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067549152 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072148366 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078974281 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06860767 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064832894 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068803345 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078978279 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06487689 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063065261 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067869153 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076865542 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062679347 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068243856 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078239307 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066912822 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072039537 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078903597 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071726138 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07058597 seconds)
  done (took 6.409669772 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07611481 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.074044622 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081602788 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08171752 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073793322 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073724397 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073633009 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073523845 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073446011 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078360796 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073811129 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.095177399 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069335123 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07631689 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073878848 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073620555 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073752401 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073721168 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073880791 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073429136 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074264202 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081728417 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074223248 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081274309 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098634168 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067696044 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071470128 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072170164 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079414282 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071823004 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07870792 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071325105 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072158681 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079209152 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078803874 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071547744 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064514749 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071124368 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071577548 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071109147 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068043899 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080543044 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071110176 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06679592 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071392525 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071148828 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078764863 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07798985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073728192 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075865295 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07151533 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078884221 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071687516 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073227494 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080851519 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106164757 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08123096 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08130976 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073238143 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081182364 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080984674 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087603376 seconds)
  done (took 6.09911235 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083475584 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073616644 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07533532 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061065567 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063221083 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069423204 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063684018 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063392443 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073564142 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073408445 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075801393 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068790041 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07175793 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075682147 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069057844 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07192646 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069038836 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068900056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073556114 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068864622 seconds)
  done (took 2.790952123 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074911945 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08302693 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06751005 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071735958 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068226651 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07081777 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067996791 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06832194 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066492849 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068333832 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07540922 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074894651 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066138598 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070646608 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074887632 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070616521 seconds)
  done (took 2.509598426 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074418008 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071596319 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078879951 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065867562 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063631877 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061944505 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065468387 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061138362 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061729914 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076938358 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065385203 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067464154 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065275789 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063764809 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062532937 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067851604 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061737934 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063232694 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06499381 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077557021 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075548366 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064508241 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065744937 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064864298 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065245871 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06998863 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064624602 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063173873 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064060441 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067071266 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067501128 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070338812 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064298736 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064796477 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065755138 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064352198 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066720342 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067395998 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069402299 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066663832 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065016034 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06661434 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066617999 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067636789 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063078073 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067080271 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063198517 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069062989 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06496845 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067124837 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066437165 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06963501 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067342416 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073586133 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069785182 seconds)
  done (took 5.05127657 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078855244 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069105209 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061478513 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063804303 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068583192 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066678813 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068794454 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066678017 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067208172 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063220589 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066675853 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068014734 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067063234 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068606087 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066826267 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068855191 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061497409 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066884069 seconds)
  done (took 2.591712475 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070317163 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065365604 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072517163 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06564523 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065406699 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067440875 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061390658 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064042888 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06370849 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064921591 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064995103 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067398788 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064573967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067676263 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064951769 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065248623 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067441484 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064079377 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064977058 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061213449 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067472706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064059773 seconds)
  done (took 2.820611424 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072035698 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093553085 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.141405339 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.085364212 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081922662 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.080148684 seconds)
  done (took 1.933249323 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089791269 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078273048 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067697942 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08897018 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073738195 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067830082 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068166951 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069123846 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077184142 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077261772 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068527483 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07594189 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075116225 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074480673 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072619362 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072514204 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066498952 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066592202 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065453656 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083444402 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067815981 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075388442 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066853463 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066192085 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066643546 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074336719 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074866219 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074961127 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066647347 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074947088 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071971852 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066469286 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075339853 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075095942 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068269233 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075557833 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067123483 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083333409 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072510399 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074364525 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068549738 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073260962 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075355286 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071413632 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075199024 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066997538 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071337279 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066822932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067131235 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085360423 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072699232 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074815147 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073935708 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077291397 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077494381 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087552047 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077984128 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076848138 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075045932 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079818887 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077334333 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074448495 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076901041 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077773353 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074769065 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076822087 seconds)
  done (took 6.251270397 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083813515 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088085594 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069307032 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078342725 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077103559 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069081797 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069204189 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069484279 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06894498 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068788659 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109176586 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069298371 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077250957 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077041048 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069594802 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068981351 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069528362 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07688368 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068956341 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088039949 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069062944 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077010867 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077162702 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076928197 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077011056 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07282644 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06708482 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06862744 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069198382 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068910408 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074426839 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069575381 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076756472 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068780432 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077016925 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067978562 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066993064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071518983 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066742469 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072513539 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074989627 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083196887 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067057603 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066897127 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075450926 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067106623 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067096361 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066539497 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067018039 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066779138 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075254702 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075740377 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07714977 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076567751 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068970266 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069072253 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068656934 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068615925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069166897 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074328895 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077007207 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069019543 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087805628 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068730552 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06877789 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076569436 seconds)
  done (took 6.225247918 seconds)
done (took 130.389854538 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199413352 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188090138 seconds)
  done (took 1.758843981 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070724657 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098145868 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079375092 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129182405 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067012999 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098950351 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09804668 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077208871 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065973477 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066042555 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065660033 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067400076 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129896182 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065761821 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066004271 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067313424 seconds)
  done (took 2.709168397 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097432456 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15625033 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098491918 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065130829 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096473654 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072412153 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064439238 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074570527 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070221513 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064830596 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072947717 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071023781 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064677353 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070299127 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070577606 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072518736 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06514368 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072467532 seconds)
  done (took 2.818279122 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101921253 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092420161 seconds)
  done (took 1.591431464 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156196949 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10459059 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149780157 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341926003 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165867592 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22950003 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126357625 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130821123 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119339712 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123079511 seconds)
  done (took 3.040351427 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097869053 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150701717 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254479675 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114977101 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071567673 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093437708 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115535577 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076681464 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080546747 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080029293 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080097163 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075513749 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098491711 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07313331 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073022459 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075354015 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102084291 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071674328 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073074487 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076036056 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098726464 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065396918 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07289409 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071736427 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076974698 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077742431 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065022531 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064984356 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076660214 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073313505 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076160699 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092012349 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077143489 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105589105 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069751409 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106671641 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075875671 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073534178 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073233559 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073495713 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078330262 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078555452 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071410044 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075199604 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065126871 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075764539 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064909789 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065168061 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07726141 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066253631 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077465729 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076505272 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106560292 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066132228 seconds)
  done (took 5.968064637 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101939589 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103622712 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07337413 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110359942 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097219845 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071170477 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102368353 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092929067 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104398117 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095355162 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089260964 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070908455 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081116332 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08212907 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107921342 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100841169 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094391744 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070597666 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100530033 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101103074 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067944999 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094734936 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092963047 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101088353 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067192521 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069881868 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067957482 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070607007 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075938177 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078371666 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069881523 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101927862 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083408023 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077251446 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06643246 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067399897 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068334315 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078158906 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096124339 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077971199 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076765791 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067055285 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067737779 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070456551 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089994967 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066948204 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078117349 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079325478 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077696479 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069116816 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069872795 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06818334 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06928684 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078617773 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076718462 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079206835 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079221188 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068055984 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068517449 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071989812 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079888218 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078308865 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07850254 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09195796 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078285369 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068322555 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079434467 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083668626 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068744211 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069773793 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068487063 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069708477 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070520897 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077349729 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077464021 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069716492 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069805703 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068219587 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078943048 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079579675 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069882998 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076949552 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066632464 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067975819 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069504656 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069348474 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07689068 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079076729 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07007224 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067878992 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069218264 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068646067 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066393099 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076125894 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079072715 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077393972 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07757577 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069226787 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076782652 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075890336 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068599254 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076871932 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196312597 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072888274 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070385375 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078228049 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077935179 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079214292 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06976523 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068552386 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078480359 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080585932 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06832564 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078534169 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080442392 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079546316 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067686768 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080600027 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069074644 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07885656 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070380691 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079863477 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068302709 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078558093 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069243074 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067427468 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069155226 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079059183 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071006403 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068937109 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0695546 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070365063 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079182556 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082652678 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070541374 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080902264 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077895961 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070765001 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077474775 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068718143 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078697118 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070318669 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069800719 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06739282 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082822528 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068629457 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069117227 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070104422 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080807023 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068731215 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079783154 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077759807 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067928266 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080571349 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080027426 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076383765 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079830826 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070506408 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068457391 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068346012 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070275126 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078379437 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081930952 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073206226 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070634151 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079694809 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081963283 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069709346 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079471547 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078645515 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078327147 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068339212 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071782281 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082305876 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080354725 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077174493 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077114639 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07712737 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068000432 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076144023 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077207346 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067655357 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0833202 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068053422 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081151913 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078384111 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075719559 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079342775 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080678449 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079150123 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078737732 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081299822 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067361328 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067848853 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078553589 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067801597 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069388612 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077349969 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070235872 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069614885 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083636837 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067994588 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07788515 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066441774 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076599944 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065866403 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068687983 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080206554 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06679603 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203046119 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08153042 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072154644 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078925303 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082317147 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078140922 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068125295 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070947433 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079955458 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078267888 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068492777 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068787587 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071165549 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077842629 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076936899 seconds)
  done (took 18.771373319 seconds)
done (took 38.056536644 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210911559 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150907188 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202302461 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117772209 seconds)
  done (took 2.174166523 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120319642 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102395272 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094340608 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065022842 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100518223 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064444854 seconds)
  done (took 1.974926273 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312536698 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216557749 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180610434 seconds)
  done (took 2.13244162 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197611239 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187262923 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392839857 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252634263 seconds)
  done (took 2.561948842 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143663464 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088074796 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066309018 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082515426 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132701176 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158737582 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100570185 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12446831 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076826077 seconds)
  done (took 2.44989996 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143899005 seconds)
done (took 12.86478896 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.219308812 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.216827467 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103993222 seconds)
    (4/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081588861 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.216307222 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.10825505 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.139268658 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076590399 seconds)
    (9/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068189335 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080748995 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.159753272 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078382364 seconds)
    (13/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076477038 seconds)
    (14/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113827123 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072653827 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077279809 seconds)
    (17/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08644533 seconds)
    (18/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076575699 seconds)
    (19/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.157417393 seconds)
    (20/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06519856 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.196121389 seconds)
    (22/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07264198 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.144840323 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105832333 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073564516 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105682052 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.108549235 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074423003 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070414442 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.200060926 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07123246 seconds)
    (32/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065687155 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.187480638 seconds)
    (34/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197214758 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.080779581 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097395422 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081208095 seconds)
    (38/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071454534 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071580508 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160383799 seconds)
    (41/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.205547649 seconds)
    (42/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109846411 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076811492 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138320125 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.196672759 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148236415 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194107245 seconds)
    (48/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.116397614 seconds)
    (49/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109051267 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071745191 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071833149 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094445149 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090676371 seconds)
    (54/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074623144 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072097967 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064596771 seconds)
    (57/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068456536 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066954151 seconds)
    (59/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053355301 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051812283 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09061895 seconds)
    (62/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.058084828 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107129038 seconds)
    (64/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158308053 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.176150132 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.186922409 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191710404 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098914758 seconds)
    (69/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068886431 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155337807 seconds)
    (71/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098472217 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072117432 seconds)
    (73/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108109367 seconds)
    (74/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071674105 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149454584 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.186414772 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064192976 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077911094 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072201571 seconds)
    (80/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050549886 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.065866575 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064167742 seconds)
    (83/309) benchmarking ("sort", Float32, false)...
    done (took 0.124528881 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070359941 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075727235 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.222785004 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072432268 seconds)
    (88/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073237773 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104760026 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09137448 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.1005925 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.136387434 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.151799458 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065022508 seconds)
    (95/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108511751 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083287455 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090542608 seconds)
    (98/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.150598395 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074754986 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051983548 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140121805 seconds)
    (102/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.1457094 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.163300766 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151669435 seconds)
    (105/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105590532 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072672044 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15074596 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06541902 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051042532 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091588632 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144860233 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.134777981 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.386229574 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065867202 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066672884 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108126759 seconds)
    (117/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075603924 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129133684 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136798094 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.133879756 seconds)
    (121/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076024486 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072639126 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089120237 seconds)
    (124/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118756716 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089992855 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.13818096 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071380166 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.14824146 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073182917 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050395033 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.133452058 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070604649 seconds)
    (133/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.09539565 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089369274 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05069816 seconds)
    (136/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.070834078 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092066741 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.195280594 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070930762 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.215497027 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05060121 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075140086 seconds)
    (143/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075040652 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065913091 seconds)
    (145/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067612401 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146292727 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064531721 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071398329 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070193113 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067944322 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074808394 seconds)
    (152/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050633077 seconds)
    (153/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078897806 seconds)
    (154/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079724452 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072510432 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.074193329 seconds)
    (157/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169849389 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.0944886 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064628082 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050627985 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050337118 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086395735 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098950401 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173118169 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051578834 seconds)
    (166/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061017869 seconds)
    (167/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050539561 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066270684 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066574738 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051680736 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096383833 seconds)
    (172/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065964652 seconds)
    (173/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052515034 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052779559 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.06945899 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065857999 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 0.124542846 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052319293 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065922116 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119955262 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093994019 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064920461 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066972989 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071302104 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051062701 seconds)
    (186/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184490788 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130838261 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066990057 seconds)
    (189/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085850611 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063960175 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072300153 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066817499 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.345479662 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053164754 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073633971 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052784468 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051667194 seconds)
    (198/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080358202 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052511301 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086063432 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051423467 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062837757 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064426121 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054003945 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085991646 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08891764 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072918328 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07677605 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.093780481 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072145574 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.078736371 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064607291 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054267279 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087557656 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071799011 seconds)
    (216/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065239432 seconds)
    (217/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060487755 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074098721 seconds)
    (219/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051799068 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070587589 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064087063 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079159576 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052342216 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063460062 seconds)
    (225/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062618293 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108891162 seconds)
    (227/309) benchmarking ("sort", Int8, false)...
    done (took 0.138386356 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069970159 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051017081 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051311976 seconds)
    (231/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069289386 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132636913 seconds)
    (233/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071850431 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052576102 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066964421 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051299533 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086241437 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088978471 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073371341 seconds)
    (240/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051729211 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09378092 seconds)
    (242/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185336544 seconds)
    (243/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052806606 seconds)
    (244/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060970289 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066120009 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052063611 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065323029 seconds)
    (248/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065589388 seconds)
    (249/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069971949 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071897994 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102957312 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114195201 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064907665 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133927505 seconds)
    (255/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065846697 seconds)
    (256/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071932434 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052367292 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173467079 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072797529 seconds)
    (260/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088460875 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066122017 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052294148 seconds)
    (263/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.186825032 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086588853 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072165446 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065868994 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064394902 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05229978 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.157342858 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064392556 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051134673 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064773916 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050639143 seconds)
    (274/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080077045 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131194862 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163667213 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066348273 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052395357 seconds)
    (279/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050729947 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06377419 seconds)
    (281/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052979794 seconds)
    (282/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052386783 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166282459 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087066525 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066664179 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052755934 seconds)
    (287/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053152342 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073504823 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065241884 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052622713 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088532427 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065494568 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074274029 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06678529 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072077491 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065594192 seconds)
    (297/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053816584 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053034684 seconds)
    (299/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06858426 seconds)
    (300/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053958974 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066201522 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07098623 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087344807 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052051353 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087678505 seconds)
    (306/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066673808 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06480985 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050737952 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051128024 seconds)
  done (took 30.39393897 seconds)
done (took 31.832647062 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086136488 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095111296 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075947738 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094335234 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08218751 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078764962 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073599552 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079629056 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08127691 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082815801 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080029795 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056679883 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074508889 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075368045 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076000324 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092959359 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079272939 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074234168 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074374372 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066200439 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074239499 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067159792 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068821423 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056015457 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07876807 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073004974 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07408071 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075310015 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067264803 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067028641 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070169921 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074464247 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06693121 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078758885 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072013406 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072336494 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074118051 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075572247 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06700183 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065155424 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073132303 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065149259 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071920746 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073212715 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070829875 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070539682 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072658586 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076781003 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091224576 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067517428 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073410399 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074598127 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076201519 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072214811 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068457986 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072464684 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.06988321 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089937647 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072487629 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067088146 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073236891 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072883753 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07040709 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071781893 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071643111 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074074698 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074756426 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069902662 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073568891 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069927201 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064539578 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07195821 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067988727 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064736015 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074424413 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075288414 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06356476 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07023419 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07166728 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070458713 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06419337 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066371787 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06592627 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070582188 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066656605 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054272909 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068137319 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07061056 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063941386 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074062956 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072603322 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073246839 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067812915 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076330091 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06584076 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071501213 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066750547 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066280749 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067903086 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069960835 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066057734 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069189368 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075028532 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068072699 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072681845 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080347528 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066448713 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07237239 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065529653 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065470297 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080435252 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075843901 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066701613 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069327013 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063821807 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072395851 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064945469 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066325435 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06623033 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066108659 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07196959 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066381886 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06854846 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072578273 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077998144 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066082904 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068711484 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06624168 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06353526 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068658996 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063785045 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063869795 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201379068 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06288377 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067738189 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065135468 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072395196 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067700415 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072510982 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067397967 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073020904 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068768979 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070336526 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070064335 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064307414 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057879013 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067221515 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067460916 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066728016 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065214451 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066265742 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065418935 seconds)
done (took 12.483731675 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068268276 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144578802 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100193719 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097368593 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087657799 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068088303 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078369662 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103786836 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069391296 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103150841 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085907976 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08405404 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110851736 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064131416 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065283843 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06861549 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066664269 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080264766 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09945953 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085258546 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108182384 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064106667 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093168057 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089429393 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085809437 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100675288 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065619191 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068973353 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068425712 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089625916 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086497875 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070952376 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067932692 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102053847 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09240475 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082738818 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065605152 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081810566 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06590094 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065058728 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080132297 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096765676 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079023092 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078948778 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069090425 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068477113 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066002013 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082419396 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087564509 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07759481 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085570631 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101764698 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067735719 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064860774 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063657098 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084239929 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06441044 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069160744 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068052403 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069307005 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067246804 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070504445 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082878342 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088460657 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071552604 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082073403 seconds)
  done (took 6.815809418 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085526268 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091617653 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08576758 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.0849943 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066305153 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065735653 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065752398 seconds)
  done (took 2.059619915 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068215698 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090487338 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09103877 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091174299 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086166118 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089773352 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075770456 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065660772 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079910237 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066709558 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085954193 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100364512 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066399649 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071839621 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08961696 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065777475 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089317589 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065998895 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068801894 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088774435 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067871837 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081112402 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069003506 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066498949 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079591429 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066046963 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111802371 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071859347 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068552962 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070100963 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06515896 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105898988 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07913485 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074785716 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065436212 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080687735 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082017326 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066158595 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083672551 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073158196 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08134244 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068140037 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068058136 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065139684 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07154472 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078361961 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068247889 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06771215 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068090824 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084929489 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066405872 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078812981 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069788921 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067965775 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067204726 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069455802 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075347021 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066411518 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085017186 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067169258 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082156334 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081589814 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079350891 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081859507 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068465269 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079264072 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079466873 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068172614 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067318236 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069142559 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081666639 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063915706 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067587071 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075872908 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06728552 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088128946 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088639379 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066964347 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074828249 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066395925 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065914097 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065548929 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087924134 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068056962 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065910733 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069615127 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069114582 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064120761 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064546882 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069080601 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06390863 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067367471 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068994869 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068562478 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06808204 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081822791 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068074847 seconds)
  done (took 8.742473367 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068729691 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066769117 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068811085 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066617245 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067543057 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067265585 seconds)
  done (took 1.944456136 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094796638 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068489746 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080369581 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071858157 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102931263 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085705089 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085955617 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077446739 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082520601 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077682506 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085273123 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08721579 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091356167 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071774569 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085536817 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070777614 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085926298 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074669932 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077345405 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072087397 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085832107 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071967179 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07246369 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080463567 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074989161 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071195389 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066663477 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07801611 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077747993 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077629742 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071686892 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074506161 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069795167 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077374755 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085437902 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069654656 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070966757 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076224408 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071315703 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07492606 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086824102 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072060019 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07342382 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076199457 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077598472 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069848246 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076750953 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075117851 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08518959 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075939214 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076089983 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070376371 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074056057 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075993741 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.06937173 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077207422 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076188497 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085225239 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070974305 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069021635 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067900025 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074425899 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0765204 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074243989 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077946497 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075850449 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069523931 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071457755 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071989715 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070582728 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075960592 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06853246 seconds)
  done (took 7.034813682 seconds)
done (took 28.101737692 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544048457 seconds)
  done (took 2.048285665 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.625972629 seconds)
  done (took 2.160123414 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.575605115 seconds)
  done (took 8.102533096 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.391749683 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.481493484 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.721474365 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130341698 seconds)
  done (took 3.288583898 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.67823773 seconds)
  done (took 2.214349127 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211007343 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196127383 seconds)
  done (took 1.952305951 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.387499679 seconds)
  done (took 1.918594276 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.120424692 seconds)
  done (took 2.65841361 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261649658 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163483294 seconds)
  done (took 1.963970824 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.474977884 seconds)
  done (took 2.011925845 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.831857451 seconds)
  done (took 6.370851524 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214789524 seconds)
  done (took 1.792896396 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244643753 seconds)
  done (took 1.781988861 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.718794634 seconds)
  done (took 3.257523699 seconds)
done (took 43.058779414 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081919228 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082695867 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080014819 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077759933 seconds)
  done (took 1.849690904 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078112427 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073992846 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078097514 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073547053 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077156988 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07254656 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075872356 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078391813 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073892538 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074575372 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074123975 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073945559 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076704791 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075514297 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071525391 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075041812 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075654058 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071841521 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074986421 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071361256 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070065248 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074244037 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074059782 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071337857 seconds)
  done (took 3.32472233 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079500204 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074551281 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076684921 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073176068 seconds)
  done (took 1.846888872 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079653917 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094488809 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091424246 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078195253 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093899706 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08735868 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069561959 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070581299 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074564958 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07848268 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069471873 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097086479 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090436211 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078528822 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081089924 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067223257 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070070397 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089365143 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078976042 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079163865 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071569519 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078542793 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06960585 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088836427 seconds)
  done (took 3.46919771 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078494005 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102500529 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076622229 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086569143 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088465902 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064306613 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073347102 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087883383 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121449912 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064898809 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069032415 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064599102 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071244434 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064663517 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075616927 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104049622 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106813487 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067398332 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094310391 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064634126 seconds)
  done (took 3.176973165 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074510849 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070214127 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067762593 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070733902 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079542786 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074167945 seconds)
  done (took 1.987599503 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069355066 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068978328 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069417777 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068591588 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071400432 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067549158 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065293784 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06633516 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066256475 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06614486 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065908429 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065182817 seconds)
  done (took 2.358712905 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.421083439 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069410519 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068258956 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065103293 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070230158 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065661761 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078990732 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067276451 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089663044 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065904125 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066043144 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069871319 seconds)
  done (took 2.747856579 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206866555 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076289868 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235649527 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135419721 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109866684 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11427661 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102885194 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111579926 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141721423 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100621105 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166095762 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163710231 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10633619 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135297424 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08779718 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096870359 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152876812 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159853574 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102339371 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16391418 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141963414 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122992095 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145468184 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100039435 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10443016 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120295772 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070423803 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079330967 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167699932 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128969028 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1440989 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109359392 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092331819 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17324176 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167934465 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140023311 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132668867 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082612882 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100361991 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131522905 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194487843 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086931129 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159583434 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243875374 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080936882 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132969576 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118582057 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119243631 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105798019 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088407778 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143876031 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181457597 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136965163 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086303309 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110122552 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113720705 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114727118 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101913958 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179685337 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15934216 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125403948 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070188457 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098107431 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15065666 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129883332 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107375799 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125421245 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092398113 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130998121 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15195667 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116495599 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141851796 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127354541 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087027932 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11758344 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137973762 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126326285 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16719506 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122935235 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071585143 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12287748 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101731725 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079975887 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140901419 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074236723 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173111699 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097781701 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10483172 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110906673 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107023415 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107428355 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158343453 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141156107 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243531032 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065082451 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103136174 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11880501 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146184262 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085970393 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107269768 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114632449 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076406289 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137398901 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074680752 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122120914 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075314745 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123731437 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130967406 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074465622 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120530343 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099487092 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097868418 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131886892 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15769202 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087765375 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080980979 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1646344 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120408867 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102539441 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142660747 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153951647 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097354382 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101216417 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14724878 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176912397 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087741975 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160304175 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105767441 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082395156 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086256152 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122293834 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11053402 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120257927 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081014476 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117770565 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169218052 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076040351 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094682124 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132157561 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077883255 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079601496 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102343245 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098794545 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093249603 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.0985157 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102679801 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134832158 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121126913 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102530946 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270387065 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10027012 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170702081 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087336844 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099065969 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102662423 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068605427 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135004683 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154651088 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078305865 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162445811 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121951025 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10393257 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118097337 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081766596 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138789557 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078104406 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069507873 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142192122 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10886793 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108794203 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148881886 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103112344 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124754164 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118571476 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132669046 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130469296 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127818158 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103751426 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08720932 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109851599 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12398051 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071764999 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090591396 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07871117 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102055757 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093978504 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082012263 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140348763 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123076162 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099247325 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109677652 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095287425 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144851238 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075394035 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126947445 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117749398 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092850756 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149531731 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149825149 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129604808 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097242242 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142133356 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068829996 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072417535 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087354487 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268349075 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084040569 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082736751 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116209784 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145132317 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128058458 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136660519 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110160902 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120000187 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153146785 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068892699 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113013761 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146810601 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119772946 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103004599 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088563659 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097542724 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14023697 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106987374 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179263724 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112322591 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123336861 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151043502 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098616562 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078992437 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104719072 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133677269 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103111296 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142120534 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097877055 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086762433 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108529022 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073205926 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098876781 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124900761 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118277294 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133920209 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112988889 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130406927 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076186315 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115890568 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118923112 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120671105 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063156359 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118943431 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158673747 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092125287 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116537782 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150815505 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07830984 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12206671 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321608653 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146822502 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084624296 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108983737 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117200263 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126164368 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118026947 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138057616 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107555015 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132662519 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107857482 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08391861 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086838554 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095911181 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103543939 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093362244 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106476211 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113342405 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094472671 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129702913 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102436917 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108601159 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114878913 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096346484 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.08780229 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096400195 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171780274 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117649805 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16798935 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097115594 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143965651 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161398279 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073759846 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077632918 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076976872 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13785852 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082796412 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128816308 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096873958 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103802434 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121856932 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139520759 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093514852 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067606068 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107026453 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131884636 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110340103 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096827615 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103143084 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160617029 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101595537 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078063801 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111723659 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102928563 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100505009 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168496569 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.204506507 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096352032 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075804253 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082262047 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125652799 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151711374 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079244101 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101069066 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11705771 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109209848 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125814622 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100507622 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098749056 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112808449 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148480381 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127132691 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087929158 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111424369 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127404509 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154274052 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103868705 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110107287 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169554715 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150366755 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157741338 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08765512 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113085603 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112753733 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106244626 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137846448 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082793448 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161063705 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080622424 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134094955 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102453844 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088938344 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127905614 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097117402 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087056096 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14579468 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115907453 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08126808 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076968351 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11607307 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118737979 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105157718 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074190099 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136630403 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071571865 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130111649 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165645328 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080104408 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102049319 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24018793 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081560935 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108037201 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101582126 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088659702 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096588207 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17036158 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087024231 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147626569 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139365501 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111029041 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135581002 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098308281 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634929263 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076568777 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149541106 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115102851 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170568175 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096016545 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116140181 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107886098 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122572926 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142380555 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104129026 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175996264 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129421794 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114069889 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078891699 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100664737 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100724267 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087091212 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103670122 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116651869 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114134999 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091969386 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113997228 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121529803 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08086961 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093678219 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153763272 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11475498 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14227332 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13808119 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08434265 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116275151 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136477608 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078439106 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119984212 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149794211 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104443661 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096214638 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079138357 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.247395923 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169192733 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07309815 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161122205 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117991595 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108700074 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112216721 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112494275 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129021622 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106405652 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12083572 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092192092 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108783968 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111371409 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081320297 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076243318 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102933544 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110448535 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096762144 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097587223 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095528772 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1488426 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070099773 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094904472 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101928764 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143334849 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171373575 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087103971 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081689839 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118278215 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111900684 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111602484 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118676316 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078133906 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080852979 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080600111 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076212446 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107124262 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110629466 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103054623 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109763096 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161642684 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08220222 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224243136 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096679169 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103208251 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068742828 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077665675 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094950334 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095768822 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106652754 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099478298 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167864623 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092582774 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088343167 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091003021 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072034707 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081303014 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27137296 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114803564 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119003658 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0964307 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061714171 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108026384 seconds)
  done (took 58.184353427 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124390676 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.095298194 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116662592 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.163546721 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136886361 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226452212 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.172410101 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209707237 seconds)
  done (took 2.904244918 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068948155 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093258778 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099413224 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081421024 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065514811 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068834548 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221482522 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079441933 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065309341 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08730235 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078864201 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067974288 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.418095375 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065313545 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066974545 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062671209 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066335279 seconds)
  done (took 3.423189513 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.374637468 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361192401 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368734203 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072134068 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.946353581 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08760963 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.269583162 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095678124 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069977204 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.28832636 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.698105568 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094324408 seconds)
  done (took 14.38257718 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07507708 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069183599 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085844609 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085444375 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073593186 seconds)
  done (took 2.043847028 seconds)
done (took 103.282840709 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080490825 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404118677 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052999187 seconds)
  done (took 2.136749731 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082712286 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086735074 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08634382 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084963474 seconds)
  done (took 2.0023675 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073146464 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075587652 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084542716 seconds)
  done (took 1.885683123 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224312914 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.136637915 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085587729 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08098425 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077103015 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077427644 seconds)
  done (took 1.892764088 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071623042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073832379 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071619313 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075491741 seconds)
  done (took 1.944597147 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075611144 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054976994 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056607881 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057613134 seconds)
  done (took 1.89797412 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085762609 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078126846 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077248172 seconds)
  done (took 1.895834056 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106732103 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086519242 seconds)
  done (took 1.846632275 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080568493 seconds)
  done (took 1.7358088 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097686568 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112024612 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126960199 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107584692 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134288256 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107075806 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084302699 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085138487 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075778185 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085825181 seconds)
  done (took 2.669886413 seconds)
done (took 22.09081967 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078269129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359635683 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359551012 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090767793 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667015658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355683338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002116335 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094462592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116218438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069260456 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086818625 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649377782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959205363 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.31924751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.946179477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.411991608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652531573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069793131 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069383821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069694865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.990184958 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069225477 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069395705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069845436 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651887498 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372324803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069347708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.414918897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069091365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0699707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354177451 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06765269 seconds)
  done (took 16.334445818 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070676822 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117454371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075662445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086272534 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072392 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071675492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073415886 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071209863 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121978868 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069852396 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087739462 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069342642 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072833247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069758161 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08777671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069912607 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070479711 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0706245 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069903118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070211392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088812516 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069707276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070169457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070252044 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06976633 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080293516 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067868085 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067413859 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067741813 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070033933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071943048 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070677555 seconds)
  done (took 4.100240056 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114081933 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128133146 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075155287 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102167661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112004219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070251823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141759684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09145645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125698158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067095665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083675178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067084249 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099640795 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067970866 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08632215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067695705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069358858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067960718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067808264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06770569 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086194345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067096936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067803116 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068335512 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068621573 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080425062 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067985928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067631165 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06761902 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06952654 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070672489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068671697 seconds)
  done (took 4.292405393 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07208894 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074931786 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081881071 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082351867 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068708927 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.0707885 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071686391 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068684236 seconds)
  done (took 2.260986558 seconds)
done (took 28.648279101 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078087231 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068088176 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071988085 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079480444 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07184433 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077697015 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066370168 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073988401 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071137914 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071741963 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073823622 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066420524 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069921846 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066158197 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072577188 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066761308 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078426084 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070827584 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078185616 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078748292 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068693098 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071738393 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073014822 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077957968 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077987311 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078514755 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076286084 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07195276 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06784712 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06961157 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075703591 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082472134 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067512875 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078080205 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067142134 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066569119 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070300581 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067069167 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078146048 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075597562 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068832304 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075080672 seconds)
  done (took 4.705812739 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08829686 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090495512 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087718654 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063790582 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069222217 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065594876 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087018184 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060330104 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05929337 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086356984 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056748443 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058758408 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061767003 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053004544 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058246448 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055901706 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061066192 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055091643 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058472466 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058565235 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057211476 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053571782 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059168196 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064012558 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055738902 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060977999 seconds)
  done (took 3.364806425 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073717494 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082694375 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087204452 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125175793 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102593958 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075795853 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076904173 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09056255 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084155583 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065900312 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070098445 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092650766 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086473562 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072634691 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066770927 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083509147 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080840816 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06802161 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072769942 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089875711 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083080626 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082531841 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091673324 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079835357 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065906959 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068474743 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070182492 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080152812 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071165191 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075806563 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070476936 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070065123 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068626162 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077799777 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070862527 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06861637 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089276426 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076758343 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077492635 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067065304 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069902206 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067617206 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088288847 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122210173 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068795817 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075220491 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076683758 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077290939 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067928641 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0853618 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077735886 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066167506 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069631587 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066335718 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066532994 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079274328 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068617343 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068629537 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075416746 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069605349 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084546617 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07032858 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081460733 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066709993 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074376118 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066018496 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067332177 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066014771 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091253652 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068181109 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106602724 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067885438 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067462358 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075302077 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074938762 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072601088 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067011827 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081377623 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077163993 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070008542 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074762435 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070027402 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069714936 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08633008 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.0686747 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068074032 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067546804 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072522698 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069416179 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068065274 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079474804 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066624659 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069919281 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082987351 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066220154 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067925433 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07252641 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071061394 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066172515 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088448849 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071603646 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067505933 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075673856 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066808033 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069781981 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076706276 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072346162 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065760009 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070931826 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072840576 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067366355 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068445629 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069884473 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068443022 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075597774 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07299636 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071529663 seconds)
  done (took 10.488123459 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158250824 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152600343 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069577334 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142776023 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075621989 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078127274 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145190516 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092944787 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067192938 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067618755 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068023018 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114110454 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104307996 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120832266 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077263494 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066789937 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082060233 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115752587 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146687615 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140945612 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082382899 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075374675 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069056561 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067927732 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.0733366 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082011056 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090117851 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075873961 seconds)
  done (took 4.4152184 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080643745 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099831386 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07256403 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08764421 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089538103 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066823911 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069031026 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068616389 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079131192 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077607831 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067656106 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072443266 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073434893 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072891879 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068364495 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073693476 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074310328 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068624404 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070113916 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071852614 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076271316 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.07946237 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070814113 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066370588 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073448123 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065847442 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063340592 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083669288 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067558027 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089223843 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064624451 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074151794 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08026055 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067268793 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066751565 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066629718 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066463022 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067057334 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068458218 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065540154 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065224394 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057225291 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065870209 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078363479 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072614198 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056019496 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071608794 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071772936 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07180823 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064295452 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069776765 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070006544 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070027066 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073861766 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07152333 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07155687 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068043142 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064795645 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074438521 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066785421 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063804141 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065577175 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070907773 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065069724 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074576073 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071377452 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065320178 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066225103 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068481053 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072657798 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06639282 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069402725 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064765278 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068028033 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071107264 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068311749 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067527641 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064935086 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066619641 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06661215 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055063938 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066579505 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052958298 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069649144 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064810989 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065225232 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066619935 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071396022 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078388443 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067924268 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072743717 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067473385 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065541917 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069536373 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059796958 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069447488 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082035558 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081533573 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066738209 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064892598 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080674659 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070941407 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065590737 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055711212 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073581539 seconds)
  done (took 9.065688956 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.092812576 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087164273 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069324104 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082149831 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.089750029 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.084671783 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073785019 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075945184 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068528869 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081076625 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072366529 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075091574 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067377122 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076374465 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.09183236 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075585407 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068744876 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075450513 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070777987 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099133243 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081196774 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080364177 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074260922 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066896538 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07472869 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07865238 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088360124 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078848158 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.07705171 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074532827 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078780275 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.087793003 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073235365 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071139809 seconds)
  done (took 4.380734697 seconds)
done (took 38.085780599 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.764377323 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.922191389 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.748317877 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.089153222 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.817469797 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.960728556 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.915720383 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.742831346 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.989699534 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.788209946 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.982325835 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.848758809 seconds)
done (took 65.255927338 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.757501346 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.88847392 seconds)
    (2/2) benchmarking "String"...
    done (took 2.138119789 seconds)
  done (took 5.716237974 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.044315837 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.279916747 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.989545457 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.743189756 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.748824543 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.053290344 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.544067074 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.269380706 seconds)
  done (took 30.315570397 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.059268752 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.947039296 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.434357788 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.478819327 seconds)
  done (took 15.654106978 seconds)
done (took 63.261837828 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.768781881 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.746963457 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.759346709 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.727129456 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.798712851 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.75049241 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.327833893 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.914794679 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.741786004 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.72856314 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.741561788 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.171264334 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.75695001 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.233205178 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.743381991 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.744921115 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.753929472 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.270314961 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.89959585 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.760807433 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.750418912 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.801210143 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.744663202 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.777238153 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.745346809 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.741719642 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.204401575 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.74243311 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.727143944 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.740339697 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.814761442 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.750522111 seconds)
  done (took 203.568049017 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.740430782 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.585939908 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.698692512 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.789331309 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.081492947 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.938911256 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.883036773 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.175200437 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.745659111 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.76255092 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.90514962 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.744568838 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.917587571 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.697016932 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.748487341 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.847044021 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.916680938 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.937366958 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.743407608 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.985310995 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.76749268 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.888695296 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.837206923 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.889369376 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.766972213 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.792816396 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.758471879 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.758343728 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.934281564 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.882444148 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.757112561 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.745302801 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.955622097 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.610382469 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.749810579 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.748501866 seconds)
  done (took 168.370538159 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.137631906 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.737860779 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.737135458 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.739746242 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.744183742 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.737516568 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.862763447 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.869293092 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.212548287 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.242329611 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.790945309 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578103594 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.738851766 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.80537537 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.752227828 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.738063022 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.755997992 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.764499566 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.74091065 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739352408 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894166895 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.755206844 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.995377996 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.747305459 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.739620949 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.745401225 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.109207581 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.743767492 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746890583 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.981587977 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.741048629 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740543002 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.66487781 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.074325664 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840165625 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.739988398 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742918615 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.737925408 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.957847412 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.738202252 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.737993146 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.736163182 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.738608466 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.739439455 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916252373 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.7367539 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.863637713 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.739955955 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.251796008 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.737458548 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.73644422 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.985779381 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.438067748 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.740807456 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.737730301 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.73987949 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.738375304 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.739117496 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.744139251 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.596929847 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.815085706 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.740492935 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.741112761 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.745796793 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.739439833 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.738844676 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.933325867 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740473796 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.555946894 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.797868344 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.960135789 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.863458285 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743723328 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.807343094 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834430809 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.739207908 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.738925695 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.73904645 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.740444639 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.820328332 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.740426841 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.865021353 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748750251 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.739844335 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.740331 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.791133923 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.809736673 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.739779391 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.632624257 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.742883935 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.740337905 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.069059706 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.807821015 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.740836463 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.739086743 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740663893 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.868020772 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.869479363 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.539817229 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.741295215 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.82561616 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.740942981 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.877096714 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.740692679 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.916023669 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.73964051 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823415901 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.745883569 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.74244334 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.741478966 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.772753816 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.741485896 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.799376939 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.745063348 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.111108254 seconds)
  done (took 398.8200629 seconds)
done (took 774.643801705 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.460277131 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.411251888 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.487110375 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.397657394 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.372069985 seconds)
  done (took 13.813114406 seconds)
done (took 15.497841987 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.827650839 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.834240129 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.765938747 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.830221149 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762068771 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.830060877 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.811073225 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.76643218 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.797312125 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.767205495 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.799995166 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766954626 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.753576554 seconds)
  done (took 24.998317595 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.998529878 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.991976293 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.81634405 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.994865096 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791974 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.977878765 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.912280557 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.898975135 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.912736927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.762557029 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.756442107 seconds)
  done (took 22.50239918 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.983733439 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.989801501 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.819012833 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.986560124 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794711677 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.984952371 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.912652975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.901821982 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.900712944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.762688714 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.756804893 seconds)
  done (took 22.480504912 seconds)
done (took 71.667133394 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.750847256 seconds)
  done (took 3.438672157 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.774399164 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.909091776 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.755787722 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.756528413 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.752845884 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.753089095 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.755692994 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.752774248 seconds)
  done (took 15.898977998 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.749931056 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.748330083 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.750071825 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.752049287 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.753478393 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.749441583 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.75288724 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.751016656 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.751779458 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.750151649 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.752888795 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.752952043 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.752855149 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.750743234 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.749515899 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.752846848 seconds)
  done (took 29.710043853 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.752277917 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.749311271 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.750126635 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.75105469 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.750395881 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.750969114 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.753012352 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.750412974 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.750603472 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.750668375 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.750622596 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.750642316 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.751605639 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.751913914 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.750715257 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.752043192 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.750740599 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.750295083 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.757473986 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.750608993 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.750981803 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.750302504 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.751903836 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.751725384 seconds)
  done (took 43.72192541 seconds)
done (took 94.456859093 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.509368933 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.295429988 seconds)
  done (took 8.495067212 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.754519747 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.753932958 seconds)
  done (took 5.242394269 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.754399168 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.754333597 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.754678242 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.755467628 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.754135306 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.755063681 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.756013589 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.755239845 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.753524086 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.754924077 seconds)
  done (took 19.239282893 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.755201174 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.755304271 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.751648497 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.755866266 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.755322156 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.752493613 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.755768613 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.755365922 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.754939228 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.7528878 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.754985225 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.753159316 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.755808925 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.752850425 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.756135322 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.753793625 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.75289765 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.752661901 seconds)
  done (took 33.269337467 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.755795664 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.755599566 seconds)
  done (took 5.201954934 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.753201108 seconds)
    (2/7) benchmarking "second"...
    done (took 1.752493687 seconds)
    (3/7) benchmarking "month"...
    done (took 1.753614331 seconds)
    (4/7) benchmarking "year"...
    done (took 1.753434342 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.754257289 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.753277766 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.754492829 seconds)
  done (took 13.965507323 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.757406279 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.914232414 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.982660763 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.463320109 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.758393092 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.759654781 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.692588107 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.759793175 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.761663251 seconds)
  done (took 19.541110314 seconds)
done (took 106.645318806 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.562768123 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.752963688 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.127716694 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.818336283 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.804970565 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.049883724 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.785926865 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.987287974 seconds)
done (took 42.58176789 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.84585688 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.243770199 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.243036186 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.475445091 seconds)
  done (took 11.658251586 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.742353853 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.333627454 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.809828567 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.440498442 seconds)
  done (took 20.403014414 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.144150148 seconds)
    (2/2) benchmarking "read"...
    done (took 2.131123951 seconds)
  done (took 5.978748089 seconds)
done (took 46.581447993 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762954196 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.759679152 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.763059155 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.759874764 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.763398432 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.760639644 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.760310573 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.763122245 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.763935919 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.762414238 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.76287721 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.764237812 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764126844 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760921744 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760979471 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763773073 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.76205915 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761925953 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.761332203 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.764642057 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761452539 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764176377 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.761519789 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.762392457 seconds)
  done (took 43.995109858 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.765213043 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.760964159 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.7639614 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.765332555 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.762589141 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.765527039 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.764404817 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.762038638 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.763524836 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.764970319 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7610815 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.762843556 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.764775345 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.762525652 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765430023 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.762568204 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.76579059 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762583202 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764423291 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.762444394 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.76622024 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762818362 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.761990462 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765446817 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.761441493 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762063184 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.765987452 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.763238112 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765149871 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.763064074 seconds)
  done (took 54.611780864 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.771195933 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.773404988 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.765088667 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.765468122 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.765953787 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.765931601 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.766382816 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.76678747 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.765849713 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.765293489 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.765413842 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.76505747 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.764413973 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.766343092 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.766689278 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.767627643 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.766289157 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.766987736 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.768882042 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.767159137 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.767060038 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.767748753 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.767138118 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.769010861 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.766780203 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.766451286 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.768075344 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.767568277 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.767792708 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.767495239 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.766503875 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.768163637 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.766476492 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.767084584 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.768061522 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.76791236 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.773737817 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.774592366 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.76935139 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.768435903 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.767180364 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.768214136 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.767215402 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.767819741 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.768699272 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.769065312 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.767639003 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.767409724 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.767549289 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.76976158 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.768445661 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.768216741 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.768601327 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.770084297 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.768256617 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.768509341 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.768479442 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.769222999 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.768287672 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.769968995 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.769681273 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.767597059 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.768879398 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.769339402 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.769083295 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.769785048 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.769462297 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.769142538 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.770041563 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.770022377 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.769937739 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.770907872 seconds)
  done (took 129.006623425 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.768966153 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767253218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765124407 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.767257591 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767001632 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.769817386 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.767562349 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770139724 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769317943 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.770643563 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770466058 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.767017411 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767979474 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.771778988 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771769481 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.767812902 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.770040598 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767077911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.769461559 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.771576706 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.7699946 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.767028645 seconds)
  done (took 40.619510008 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772363494 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.769226687 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.76938061 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770464913 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.768502398 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.770482553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.771153135 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.770708468 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772964567 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768048643 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768444897 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770849895 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.767236613 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768093973 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768951013 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76822426 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770939983 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767956471 seconds)
  done (took 33.560197463 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.769582768 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.767457488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.770354667 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.769166865 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.769940008 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.770963979 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771385002 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.770883677 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.771926827 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.768823098 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.769714033 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771630374 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.772479189 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769101693 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772328154 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.769355299 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.77327625 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770181005 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772356598 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770461327 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.770108069 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771895091 seconds)
  done (took 40.660182475 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772069164 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.771953497 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.769963271 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.769680084 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.770563918 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.770986272 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.774398142 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.76969455 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.770949608 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.77278752 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768603032 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.774199226 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.769523637 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.771767388 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.770640599 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771043305 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.773622207 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.770935834 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773431333 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.771169301 seconds)
  done (took 37.136381615 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772011716 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773586106 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.774780041 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772985031 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774112893 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.772611857 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773775165 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.774844892 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.773199179 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772991357 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.775251815 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773409842 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.773741714 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.775223174 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.774843865 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774390963 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.773601867 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772836963 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.774616189 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.774880652 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.774161211 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.774207237 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.774433593 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.775050944 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.773516749 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77580959 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774342968 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.775316255 seconds)
  done (took 51.383834607 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775740366 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.775929629 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.772593128 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.772940605 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.772896906 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.772968635 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.77219349 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.773836357 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.774883664 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.772899895 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.775912766 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.775490858 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.776236775 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.774113944 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.776035139 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.775127937 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776732824 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.774458391 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772650063 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772891874 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.775605595 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776396646 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.776804185 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.772634735 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773528375 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.776624544 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773123387 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.773889827 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777470674 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.774456317 seconds)
  done (took 54.948970938 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.795297655 seconds)
    (2/2) benchmarking "in"...
    done (took 1.796109887 seconds)
  done (took 5.302240131 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.77436272 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776414251 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.776020298 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.772423418 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.774469629 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.77553297 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.776449768 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774031113 seconds)
  done (took 15.91173729 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.777741252 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.778049892 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.775602058 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.777472137 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.777580563 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.777332343 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784301821 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.77850289 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.777907922 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.779346139 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.784708729 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.786864288 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.78168412 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77852977 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.779022744 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779437989 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.777784836 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.777970041 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.778145755 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.778451928 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.778398936 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780740985 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780464777 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.776038775 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.778684734 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.790840578 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.78416435 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.77872409 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778926889 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.784039722 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.777859346 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.776468253 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.777320325 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.776442099 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.779683159 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.778133775 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787571085 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779015252 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.78596678 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778564998 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.779433454 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.776208128 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.780114951 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.782517606 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779743638 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.77934636 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.778707379 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.777136908 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.778069208 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.781516413 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.7827702 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.777742825 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.777729969 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.785061051 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.781118173 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786848549 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.779330626 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.782055824 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.789037164 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.78939898 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.795945033 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.786951776 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.781761255 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.780233843 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789976527 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.802111248 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787678583 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.77951147 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.777511375 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.782245797 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.790086474 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796801345 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.789985958 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.781905886 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782158166 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.78134166 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78154105 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780668464 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78989868 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.783720791 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.781686741 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78003978 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.791234971 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.799201064 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.78163266 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.78196037 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.780502138 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.781120166 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.781289399 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792514117 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.78232587 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.782396865 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.781907765 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.782412506 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.785804846 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.781973806 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.780241728 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784300748 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.77884378 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.783438983 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.783242224 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785950129 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.791220453 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782430379 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782396705 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.789878635 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.782172052 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.781149584 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.792070765 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.78325925 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782485201 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.782829558 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.790322176 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.781302181 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784935646 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.792627153 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.782904093 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.784035905 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.783284926 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.784730156 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791493405 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.808241612 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.783010319 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.784168596 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.787463185 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.794209878 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784358077 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.787912011 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.784303896 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.781288325 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.779792238 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.78546357 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.786016475 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.784927564 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.783448338 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78640061 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.781761343 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.784733739 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.785021105 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.785446319 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.786164859 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.784318014 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.785619897 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.78796273 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.783028915 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.786284699 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.792097799 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.784995001 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.786129294 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.785071034 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.783481867 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785322792 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.787620687 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.783152346 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.787473703 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784286923 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.783860313 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.785905197 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.784967003 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.786416674 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.785825434 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.786562147 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789378929 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.784981818 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.789307352 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.782982339 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.784106247 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.786003505 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.78566593 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.787203885 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.785597926 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.785125562 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.788361716 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.79349911 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.787468278 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.786039731 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.790976761 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786213387 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785439868 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.786143743 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.788473296 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.795989259 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.787288044 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.795721823 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.78665993 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.788178382 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.787545914 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.788084405 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.787028143 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78745722 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.7896293 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.79585003 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803006572 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797386488 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.787851162 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.791686125 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.787576703 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.79018578 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.793026904 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.787270854 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.788083344 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786801693 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787235342 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.788086508 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.790832842 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.78720203 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.786813992 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.787057327 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.787747985 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.786879132 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787343552 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.789722367 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789484304 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.786097604 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78800404 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787600471 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.788307329 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.784626892 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.787292347 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.787674336 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.788017797 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.78735535 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.798042897 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.787093725 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790493235 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790086383 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.788149528 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.787644758 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.789418636 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790327576 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.790205687 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796269553 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.791927939 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.791480601 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79653864 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.789928478 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.788512074 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.792581734 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.788189654 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.787277994 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.792963813 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.797966399 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.789700401 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.789754915 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.788881633 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788344447 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789718092 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.79767507 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.788025198 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.789104501 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.789493932 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.794239876 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.788883324 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.790057321 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.791194569 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.791693837 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792677703 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791101787 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.79059813 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.792735687 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.788830933 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.791290598 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.790125145 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.792784515 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.798604214 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.797022661 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.790891976 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.792907095 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.791989803 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.794089094 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.791778781 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.792535053 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.792317044 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.806093015 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.797200278 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798802197 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.795107005 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.7921898 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797594048 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.794227049 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.797910401 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79301436 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791262509 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.792337128 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.791655607 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.789553328 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793462605 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.791311787 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79365337 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.793780598 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.795854889 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.792290447 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.791109568 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.791244544 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.792932177 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.79352586 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.79215313 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.79432666 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.798303197 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.795115826 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.79344054 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.792480452 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799252395 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793693211 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.793430797 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.792158321 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.793662481 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.793562985 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.794061021 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.793951927 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.796171489 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.800422473 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.795933265 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.805384492 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.794027168 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803546784 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.792876542 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.79711944 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.801172904 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.790965055 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.793107695 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.792860721 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.793793738 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80136873 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.793686343 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.794251245 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.798492769 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794217603 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.793510366 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.792990314 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.795376411 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795008095 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.794106454 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803557482 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.79577909 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.798488028 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.796429191 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.791196827 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.793859985 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.795154414 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.79348822 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.801879771 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.794846944 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.796034295 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.793925595 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.796666815 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.793663658 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.793177483 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.795293717 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.792595162 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.797249078 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802645071 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.796741299 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799922571 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.796421942 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.806980833 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795885406 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.804096278 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.796042197 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.796659072 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.796681551 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.795059249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.79926356 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.797421209 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.799128528 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.796441792 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.797055746 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.800107505 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.796089019 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.800128148 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.795483365 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.796474301 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.795949363 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804885825 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819740595 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.798213891 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.801798034 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.79377063 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.798074773 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.80130021 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.79745361 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.796026868 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.79947734 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.807732733 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.805595856 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.797666631 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.798348574 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799116208 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797257553 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.797131142 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.797761271 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.796782945 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.796884012 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.800222372 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.798464176 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802641666 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.798494945 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.797983828 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800481463 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.798681495 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.8088633 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.799047383 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.799951189 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798124365 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.798630565 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.798824764 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.796830828 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.79767882 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799621174 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798913485 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.799403342 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805246106 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.805457475 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.800212898 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.799763931 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.799574879 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.798926668 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.801085038 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799806057 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.800354854 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799826084 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.800123602 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.800067107 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.801061488 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.798215085 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.799020684 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.80168939 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800374272 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802418338 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.80761293 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799743482 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.796373942 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.799429807 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80038344 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.799103314 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.800546851 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.812532278 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803169935 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.811328222 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.807167152 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.80469712 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.799602353 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802733868 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.809098676 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.79819974 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.802023249 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.800485522 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.803388612 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.801171234 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.803934972 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800015186 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.808999708 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.799923319 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.801470891 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809542527 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.802282788 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.802183441 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.801961493 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.805529549 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.80114971 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.798362585 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.801645279 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.799845037 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809040069 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.80560175 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.802674339 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803307764 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.800130101 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.803159956 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806077402 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801667043 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.803639189 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.79910576 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.802876428 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802147951 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802091724 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.79895045 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.802226631 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.801548753 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.804898834 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.81088071 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.800031863 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803782568 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.801881205 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.802865227 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80180452 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.803107855 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.799702402 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.800180513 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.803753885 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.803296008 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.803617275 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.804636202 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.803450634 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.803904548 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.803051575 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.802178102 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805789736 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.812236481 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.811709406 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.801143822 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.803159276 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.804115366 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.806384411 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.802565338 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.802627926 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803950909 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.80790405 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.803620102 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804094991 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.802263277 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.805647218 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821398021 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.806267711 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804898786 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.803760167 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.81102113 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.80441721 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.802302544 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.80496758 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.806516609 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.80777669 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.81127064 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.804547838 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811391355 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.804470398 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.806173895 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.809585858 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.807981962 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.815122991 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.808132093 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804960543 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.804956643 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.809744276 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.821555795 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805487996 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815117215 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.833307794 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.805350925 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.806929709 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.805179194 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804856738 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.804713564 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.808578187 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.805186232 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.804994938 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80475006 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.805013597 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.806355521 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.811279379 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.80815827 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.805374159 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.804279325 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.806270649 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.809277777 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.802874922 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.805869429 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.806698287 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.806165637 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.806146664 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.805743183 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.806148614 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821835773 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.816982557 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.80696644 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.806471516 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.804193488 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.809916492 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.807673715 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816587876 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.814341166 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.806627299 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.806927857 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.809248651 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807510995 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.80510066 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.807327843 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.806576772 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806443641 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.804099164 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.823033933 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.814202191 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.81319591 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.80841592 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807643241 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.807271451 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809421348 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807923709 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808326697 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.811345874 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.80905745 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.811316547 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.806631019 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.807303614 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.810948102 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.816166358 seconds)
  done (took 1071.339726758 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.804809535 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806293424 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806428202 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804864991 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806524333 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804285509 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804839505 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806234457 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.805121904 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.80425661 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.806926068 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805603115 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.806218098 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.806487143 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80774322 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806142587 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805920512 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.8064742 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.806698131 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806784402 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.806136953 seconds)
  done (took 39.666990004 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.809028734 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.807784556 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807273116 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.808818746 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806713786 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.810081422 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.806141514 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809314311 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809889553 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807130291 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.808953109 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810224338 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.806047168 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.806502389 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80753038 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810790728 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.810960768 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807702939 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.808471159 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.8081792 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809803715 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.808400978 seconds)
  done (took 41.530383655 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.81109158 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.810802888 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.809794705 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.808649701 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.811448208 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.807457053 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.810619723 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.809499615 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.810300266 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.811631925 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.809445572 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.81106247 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.818056265 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.815930089 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.813875726 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.811704556 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.95508649 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.811772581 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.810105662 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.810922643 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.808898102 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.816534776 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.807741643 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.809941801 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.80920256 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.81231311 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.81245572 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.811577511 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.810149073 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.812328376 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.816408217 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.81310811 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.812322564 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.814020734 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.811161418 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.813401914 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.815932086 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.812228359 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.808752046 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.811731151 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.823214717 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.832239993 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.811668332 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.818990866 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.812559761 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.811915218 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.816865295 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.819294865 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.810668188 seconds)
  done (took 90.713023035 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.814372348 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.813548295 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.811032395 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.813596946 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.812474257 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.813148494 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.812558492 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.813374994 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.810594579 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.811226103 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.811898129 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.810810362 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.809983326 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.81343823 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.814060797 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.811438241 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.810759158 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812129409 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.811231683 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.810093793 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.811483229 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.81367175 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.815102494 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.809854681 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.813508377 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.810812835 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.809865458 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.814792415 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.811248806 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.810045784 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.815032493 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.81566985 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.814316279 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.81143083 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.812060788 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.815212423 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.814480641 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.811459876 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81462005 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.812511385 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.814227611 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.815087608 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.813818194 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.815372751 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.810472754 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.811626671 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812476995 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.813303918 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.814162991 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.816141285 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.81624392 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.813341696 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.813714113 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.814285561 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.815974163 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.815973411 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.814504665 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.814365354 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.815382946 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.815115302 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.812417039 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.817486678 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.81384134 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.817025783 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.816824731 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.815331921 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.813412497 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.815821972 seconds)
  done (took 125.057258435 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.815545617 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.816547477 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816425318 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816418713 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816568579 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.816038627 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816941141 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.816851215 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.817201933 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81705529 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815741492 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.817397395 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.818542857 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.817650524 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818019352 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818114767 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.817266119 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825945108 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.865899771 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818075304 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.816985186 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.815498919 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.817420583 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.816683785 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818824462 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.81809647 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.818637637 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.818502488 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81932569 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.816443718 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817990931 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.818025033 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.819379948 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818463676 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.81870491 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.818883983 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.818330265 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819204637 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.818548526 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.818933077 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.818946938 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81888948 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.819558964 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.81961133 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81923309 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.819803587 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.818521553 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.819352466 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.818811267 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.817661005 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.820386697 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818987882 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.819959507 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.818572428 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.820554448 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.820429757 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820080474 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.820140211 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819053212 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.820258445 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.818766218 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.820506724 seconds)
  done (took 114.541802449 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819388585 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81921465 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.816536473 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.816794074 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.819521445 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.815908008 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.819281092 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.818911299 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.820140645 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.820641618 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820324975 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818491017 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817741427 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820064949 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.817427808 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819082425 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817612172 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817240542 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.818800592 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.819206795 seconds)
  done (took 38.126193859 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.818081435 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.820488759 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.81756977 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.819224368 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.821403732 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.818991198 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.821727401 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822535919 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817436579 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820822404 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822198889 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822153359 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82015008 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820526332 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.819267973 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.819935742 seconds)
  done (took 30.877687351 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.819713981 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.823344514 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.822213891 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.821616973 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.820205238 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.821405221 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.823503792 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.820705045 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.820422424 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.821463112 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.822531991 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.822501528 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.824751161 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.821412162 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.818772769 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.822572018 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.819942345 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.819485068 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.823194156 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.821822523 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.820038259 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.820441012 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.822729724 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.821728955 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.821466038 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.821158104 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.819715428 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.820925369 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.820652624 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.823317981 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.821159269 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.821050636 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.81977315 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.820683736 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.824197021 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.820349655 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.822611948 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.824838439 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.822922927 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.823791882 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.824620935 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.82118397 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.824671422 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.822179313 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.822268281 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.824409907 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.822464332 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.820684386 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.820524357 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.820870821 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.823953942 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.824596993 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.824896819 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.825668165 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.826109814 seconds)
  done (took 101.971357608 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825025357 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.823880422 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.822800916 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.825216542 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.82421989 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.823723313 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824327373 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.823008075 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822438919 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.825495749 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.821518076 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.825706115 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822852456 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.825561506 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.823680876 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823906542 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.82225134 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.823443358 seconds)
  done (took 34.587353817 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822988197 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823035003 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.826199635 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.823372893 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.825754107 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.825130741 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822038317 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.825526899 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825753419 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.820922135 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82526842 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.826043322 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826662475 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.827500943 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.822461154 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824755497 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.826653164 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.826103176 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.822856561 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824336603 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.826688327 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.825859506 seconds)
  done (took 41.906372222 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.826540627 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.827268762 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.843515519 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.869889659 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.860836921 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.826444412 seconds)
  done (took 12.815988458 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826286073 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827388833 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825470908 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829911986 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825655303 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825659876 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826267817 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825975714 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828557904 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825215344 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826542996 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827455221 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828256878 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825676141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829354557 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827203732 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82606637 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826291702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828552851 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827685041 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825234943 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82547409 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827435975 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825769509 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824245006 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825370113 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829227972 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826514455 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825125872 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827865349 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829952081 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82634372 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827535728 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828511344 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829094527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829901693 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826087754 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829056449 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830467297 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826885875 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830224361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830102594 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830341297 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827312958 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829069097 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82884269 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827343141 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829160068 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828184881 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829645003 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828672617 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827078663 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830084959 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830831352 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828810284 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829341825 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830526668 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828459771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831926836 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828651844 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827073303 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832772776 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829227103 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828758366 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830147868 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826583614 seconds)
  done (took 122.409183494 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832998905 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826436011 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826208876 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829432285 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829370334 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828698061 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828372939 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827154906 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828264073 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829674746 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829248037 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828482143 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828469136 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828620236 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830200622 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830539134 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829433293 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829808087 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828306003 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832131932 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828863808 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829121273 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828603262 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827603616 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828182778 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832674284 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827316656 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829792117 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830105465 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82885588 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828955029 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829118504 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827969992 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.831876212 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82812596 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828865398 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829729233 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830033683 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830545924 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834237553 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830002511 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831197041 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831423484 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830671197 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832300737 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832323087 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828249562 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831177764 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832493396 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832856243 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828849986 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83196888 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831274448 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828531859 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832366687 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830678167 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831441524 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832323544 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830133531 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833982078 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831404959 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830445721 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834701973 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831507296 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828462958 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832068288 seconds)
  done (took 122.550561945 seconds)
done (took 2496.928056769 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.844880805 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.887017684 seconds)
  done (took 15.498077563 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.992900421 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.946668288 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.826826315 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.873405902 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.828928066 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.848618191 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.844441673 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.829220474 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.829689533 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.828587742 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.828748179 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.015772401 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.831019409 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.828506339 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.828850239 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.922751246 seconds)
  done (took 51.67744334 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.832742282 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.833146648 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.84307549 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.83536892 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.831809169 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.844639716 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.863971939 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.835155063 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.867172539 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.853965178 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.905411931 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.842957188 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.83198458 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.882787485 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.843690907 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.8474901 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.931240227 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.906756467 seconds)
  done (took 35.199363955 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.909100031 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.832975741 seconds)
  done (took 10.515025435 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.844335674 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.851777036 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.860927379 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.851314367 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.857078391 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.886640507 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.847499559 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.839907957 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.846207759 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.849954199 seconds)
  done (took 70.303152367 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.837760336 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.834978158 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.832750479 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.830178043 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.824319845 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.830316272 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.831562325 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.824517878 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.523135363 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.869630823 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.838862941 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.838518965 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.833960032 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.834487251 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.831140591 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.857618336 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.94903166 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.830691803 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.83102948 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.838034742 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.833263468 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.925424297 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.845915481 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.835054202 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.863505352 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.517703263 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.841387088 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.839776644 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.969466318 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.832060843 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.833283155 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.833537033 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.835484329 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.232875953 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.139074672 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.831627585 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.843006438 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.841908535 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.833022952 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.006655695 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.834662947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.839491498 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.818556159 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.129843382 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.915922233 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.876630152 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.196230156 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.836840424 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.835156229 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.865104067 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.838372884 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.837324109 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.848429083 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.344364596 seconds)
  done (took 130.843385017 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.828695798 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.414620653 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993534242 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.831684392 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111375254 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073843661 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.829921931 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878681155 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.835568523 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.080635539 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.012718499 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.949977112 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.830572412 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.828822125 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.832327557 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.828705232 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.983586389 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.901948906 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.831326284 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.828924928 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865716247 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097735887 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.957721057 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.830931667 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.853442974 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.059437389 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.957577207 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.947845421 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.351432406 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.828962146 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904021378 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.831036283 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.829874745 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.830580956 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994897416 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.939658824 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929849133 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.831037649 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.829151099 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.828369267 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.494054397 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052654345 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941198212 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.968334512 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.078280025 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.059849155 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.480125494 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.829778044 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.467659421 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.027972499 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.040310246 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.085136382 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.960162542 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.832307872 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.081030891 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.830593216 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830714823 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.09484527 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05902168 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.946989279 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833728637 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.831296448 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.830408679 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.148902982 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.834043512 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.942241016 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833737308 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.830927307 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.945437335 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.959769537 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.062293212 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075572346 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.863818213 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.778482898 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.338300322 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.116775913 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.908301975 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097950212 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.834416401 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.835294846 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927118175 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.58274717 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.007436811 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.149675893 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.098997063 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875388345 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.438354089 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.832317307 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.083055558 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.084587111 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.063544978 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.079032175 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.999694519 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.159551345 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.831752405 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.831823929 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.042124353 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.965274836 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.836379513 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.194038236 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.090734017 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.561618054 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.863833666 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139157213 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.972715299 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.832415057 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.460260611 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.833642812 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.037683291 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.877810014 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.834383733 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.834603958 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.081667803 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.703746539 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833287242 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.606116729 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.901513029 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.837387611 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101260852 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.837565042 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077684762 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83597245 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.145362586 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.495457262 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.878844281 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.026330294 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.078590571 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.628301448 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.103305121 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.148705411 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960573667 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.096891632 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.660583731 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.835094372 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118938318 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.837804074 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.834600327 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.005457919 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836861031 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.991782881 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.837706018 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.097197914 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86260084 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008538378 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838847379 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.110158129 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.88368188 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888686198 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.839537485 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.95378453 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837442228 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.880992113 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.020377902 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.836217735 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.836051596 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.407780681 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.835833496 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986111918 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.134628779 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862468948 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.907690994 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.365067958 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.837060607 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932917246 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.865321422 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.435541154 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.837009413 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.008601944 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.83960003 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.795614767 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.837104895 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.147178318 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.061261943 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.839439545 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.837585392 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.632206678 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.542640666 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.836965875 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.013987574 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.079679428 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.482300499 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059556646 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838417595 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970851606 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.84065851 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.911750394 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190419186 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838422196 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.839349884 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.83688721 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.837444422 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.840377694 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066537398 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.867084428 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.5432014 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.975792256 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083189829 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.151036745 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.102193272 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.88743806 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.842541752 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107818185 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.84090502 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.906676682 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.840104194 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863720969 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087948807 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842806436 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069638014 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.12790327 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.890105959 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891660125 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.842379268 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84008969 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.838589189 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984011228 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941282312 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.842132254 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.840271151 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.958619613 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.967293935 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.029693461 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.436373725 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.013729083 seconds)
  done (took 896.592687294 seconds)
done (took 1212.393745599 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.838665262 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.838925455 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.828785945 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.842062807 seconds)
  done (took 29.128689172 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.849856487 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.846791911 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.847532537 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.846768102 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.84937735 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.846925937 seconds)
  done (took 12.867629993 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.940633716 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.843710949 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.842455753 seconds)
  done (took 21.407985742 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.915341458 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.255123729 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.951268135 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.292130395 seconds)
  done (took 10.195847205 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.849431489 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.847738284 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.848666329 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.850065936 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.850057404 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.852116884 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.848464048 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.850203013 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.852100828 seconds)
  done (took 18.431391226 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.139418999 seconds)
done (took 97.95030362 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.032833449 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.044553866 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.106283486 seconds)
    (4/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.960981442 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.828302727 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.000879933 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.800362155 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.844103412 seconds)
    (9/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 4.735502733 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.994405143 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.953772035 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.881437394 seconds)
    (13/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.474847835 seconds)
    (14/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.276078917 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.967231495 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.843071439 seconds)
    (17/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.913771944 seconds)
    (18/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.84320186 seconds)
    (19/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.163263278 seconds)
    (20/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.974926214 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.829981772 seconds)
    (22/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.962305806 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.223487932 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.355573994 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.970570639 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.859184741 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.348594647 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.935767279 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.057954775 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.83116624 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.977914353 seconds)
    (32/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.940649359 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.076604153 seconds)
    (34/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.831424994 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.05365059 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.897797207 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.983932933 seconds)
    (38/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.251387928 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.87098167 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.094384333 seconds)
    (41/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.362618991 seconds)
    (42/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.168016579 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.930412185 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.963469049 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.137023944 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.943195968 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.010809607 seconds)
    (48/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.021769607 seconds)
    (49/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.050892148 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.101622512 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.95767612 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.179219275 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.109367902 seconds)
    (54/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.845049893 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.88268514 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.0016855 seconds)
    (57/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.912292096 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.902932822 seconds)
    (59/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.981931881 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.295202524 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.62743501 seconds)
    (62/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.997679608 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.476117525 seconds)
    (64/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.027175953 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.213423055 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.142455059 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.438547862 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.186624803 seconds)
    (69/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.929986073 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.422742997 seconds)
    (71/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.985803786 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.950260768 seconds)
    (73/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.148345196 seconds)
    (74/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.875016307 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.47022673 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.842424024 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.117164765 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.514488595 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.290740863 seconds)
    (80/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.978340962 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.556099479 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.083725946 seconds)
    (83/309) benchmarking ("sort", Float32, false)...
    done (took 5.603596861 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.875774802 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.927845737 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.046486341 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.964503499 seconds)
    (88/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.870666803 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.829447173 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.280764147 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.844795728 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.087886154 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.905425536 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.947675499 seconds)
    (95/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.184296488 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.652730576 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.537848618 seconds)
    (98/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.952301422 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.986041288 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.014833509 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.850683183 seconds)
    (102/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.005087016 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.72084285 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.058743961 seconds)
    (105/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.024038641 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.051205267 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.948709185 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.848070381 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.156701791 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.496588955 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.953404786 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.845839858 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.851328291 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.847416895 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.615571326 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.010263128 seconds)
    (117/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.869609234 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.870100416 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.866766481 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 2.283045486 seconds)
    (121/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.896446822 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.866999177 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.889299654 seconds)
    (124/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.8434431 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.095320629 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.849299902 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.131772998 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.923427291 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.929976504 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.079728021 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.088085815 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.062955138 seconds)
    (133/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.977999663 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.107407351 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.919800292 seconds)
    (136/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.356143905 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.873022687 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.835490323 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.959603167 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.832244844 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.309067608 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.147256643 seconds)
    (143/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.859901763 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.845551125 seconds)
    (145/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.836115355 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.85163836 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.089485427 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.876356275 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.932990631 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.987421346 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.985428476 seconds)
    (152/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.732804434 seconds)
    (153/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.521054531 seconds)
    (154/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.764762316 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.875089403 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.091030964 seconds)
    (157/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.850258613 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.221123941 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.148270978 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.958528359 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.155979386 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.85368008 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.931990048 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.847258847 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.994353551 seconds)
    (166/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.13517728 seconds)
    (167/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.130661419 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.186437154 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.246366797 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.233162345 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.449847917 seconds)
    (172/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.955001975 seconds)
    (173/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.204128884 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.038467412 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.870924012 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.849251753 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 5.679498346 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.21806343 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.852903291 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.632112442 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.911682105 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.517043921 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.000315699 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.879026766 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.143744915 seconds)
    (186/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.844041906 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.045334724 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.919763738 seconds)
    (189/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.935194352 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.090503483 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.900612461 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.916545929 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.212448901 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.02668651 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.864850709 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.433238807 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.035411013 seconds)
    (198/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.372906912 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.461093969 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.752551627 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.239157869 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.83977876 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.971218318 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.839528478 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.754920442 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.028593875 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.965044744 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.853260532 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.601899035 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.070875157 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.853280401 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.757304955 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.841547705 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.950767759 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.87929965 seconds)
    (216/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.253039765 seconds)
    (217/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.024589273 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.887161522 seconds)
    (219/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.983294374 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.878778845 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.935383114 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.42435245 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.749906611 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.895380538 seconds)
    (225/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.395514856 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.195881646 seconds)
    (227/309) benchmarking ("sort", Int8, false)...
    done (took 4.919952266 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.980167092 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.140237101 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.466807373 seconds)
    (231/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.875237794 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.779611495 seconds)
    (233/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.887798013 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.371481327 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.854446287 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.354296779 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.777323765 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.662332472 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.889864229 seconds)
    (240/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.528906891 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.945177948 seconds)
    (242/309) benchmarking ("sort", BigInt, false)...
    done (took 6.860393784 seconds)
    (243/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.845759249 seconds)
    (244/309) benchmarking ("map", abs, Int8, true)...
    done (took 3.369780622 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.97283558 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.040310972 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.274083882 seconds)
    (248/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.858815408 seconds)
    (249/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.929648901 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.965433252 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.929665905 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.958397571 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.951961166 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.858064399 seconds)
    (255/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.9475362 seconds)
    (256/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.865360683 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.841858438 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 8.10357458 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.886259617 seconds)
    (260/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.88443966 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.21159331 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.013425194 seconds)
    (263/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.212919467 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.86115297 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.252388738 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.855503838 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.155847982 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.845768806 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.064798668 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.233734089 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.845956319 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.228017027 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.046606183 seconds)
    (274/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.677962854 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.862159388 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.835864256 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.860596792 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.899360383 seconds)
    (279/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.03566724 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.804969294 seconds)
    (281/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.989830817 seconds)
    (282/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.047400891 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.861347179 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.86986159 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.167217941 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.465066829 seconds)
    (287/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.998550461 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.948218653 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.94242031 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.224379316 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.862397346 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 4.211347678 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.081938045 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.207513843 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.906500947 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.98341089 seconds)
    (297/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.19597253 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.236535854 seconds)
    (299/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.944995766 seconds)
    (300/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.371691406 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.209685166 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.886720212 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.129957742 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.271660498 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.511339596 seconds)
    (306/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.973785152 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.527088298 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.167918675 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.063972857 seconds)
  done (took 1018.565689971 seconds)
done (took 1020.364179481 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.892568258 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886725934 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.870520974 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.891959527 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.984266059 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.904098349 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.880982925 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.87294003 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.918690202 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.922052567 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.870047321 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.903548656 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.872877693 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.871355601 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.871579553 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884892853 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.180380115 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.895586609 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.889309649 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.882457354 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.889000967 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.870858443 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.921369526 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.903820285 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.876220889 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.87551602 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.876557009 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.893566476 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.984376883 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.876734497 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.876597412 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.884179809 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.176906649 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.893218692 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.868101707 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.892085147 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.884026928 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.881323526 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.875973713 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.904775435 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.315800719 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.87762781 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.874861288 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.874145357 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.874007525 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.877851204 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.874893718 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.879269738 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.886803368 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.886674444 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.312019959 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.893668709 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.876560504 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.874160308 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.884044741 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.873600776 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.877365606 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889321391 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.893215869 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.88957062 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.167618581 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.902283061 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.875771802 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.891784248 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.882343297 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.349554893 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.874641046 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.878551003 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.315894443 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.884698617 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.349181369 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.889384394 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.87567446 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.888700231 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.907036621 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.179682293 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.893060389 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.873708283 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.881792579 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.874237601 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.884815579 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888759367 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.880570466 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.876444546 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889146473 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.907839415 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.885401016 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.876546121 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.883804067 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.8949169 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.88310971 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.887365791 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.879330938 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.87096911 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.884504362 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.880106757 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.878790818 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.879403616 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.880941578 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.88578661 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.315989938 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899170225 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.872672495 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.873344968 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.875058497 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.890059872 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.316127062 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.882120052 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.898171156 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.923912372 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.878440916 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.171007325 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.902976882 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89284204 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.885376799 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.87968278 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.873743753 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.171501105 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.337056389 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.898442782 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.878016804 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.876746068 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895239076 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.879136233 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.874593623 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.183131173 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.901927035 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891932797 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.998780239 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.888383759 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.909728018 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.876393115 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.880421846 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.907655449 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895727019 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.909917238 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.881640712 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.893947407 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.894530449 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.875148972 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.88852911 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.888000167 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.878735009 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.88299411 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.871637436 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.907039289 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890628704 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891768161 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.89895001 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.999531011 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.876281279 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.174033172 seconds)
done (took 294.738145188 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.944786556 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.872706187 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.979433297 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.875999363 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.960323099 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.96319671 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.87365691 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.874353173 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.874057761 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.257579976 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.874573406 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.874511435 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.876074198 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.873376392 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.96031387 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.876746807 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.874874684 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.220187409 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.87719564 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.95024048 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.871521774 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.875118071 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.877901943 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.263606699 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.87008896 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.877967824 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.950921384 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.877130958 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.225270017 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.875885271 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.870377071 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.225811843 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.966786048 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.896285928 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.888200361 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.8849044 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.962449177 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.882213617 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.958931116 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.958988061 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.981164673 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.917558759 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.871835318 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.869472147 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.881231387 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.878800102 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.875130732 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.916338597 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.87241156 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.877220539 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.222359985 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.888663411 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.886635861 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.876663421 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.877392844 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.900787127 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.87766378 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.880013229 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.968757906 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.879820335 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.942288298 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.263924605 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.260858096 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.879406779 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.871580571 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.877259575 seconds)
  done (took 184.899102512 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.944900593 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.952517226 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.946022731 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.882017346 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.928660054 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.950867366 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.881348869 seconds)
  done (took 15.297112726 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.884730219 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.879449963 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.92903956 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.929662343 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.880118382 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.029177354 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879740587 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.890153731 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.877768353 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.932295753 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.880813849 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880641986 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.887417128 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.87827437 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.928120752 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.891466097 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.99559713 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.881829075 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.880481534 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.031651029 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.878664756 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.88923715 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.941734016 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.891878181 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.88236664 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.886597133 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.463943557 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882007818 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.878149505 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.880868472 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.878499382 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.922006701 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.881467232 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.881496445 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.878758305 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.996960226 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.881271549 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.87861621 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.881401652 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.875511498 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.881809356 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.881965723 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.881999976 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.879265091 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.882135663 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.905333353 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.880863451 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.882330231 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.881437469 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.881952586 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.931725186 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.882270009 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.879684795 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.880026567 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.938377017 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889488036 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.882401422 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.879132873 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.882673151 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.880144101 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.033439557 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.929881655 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.883164156 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.929815211 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883697201 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.88325335 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.882815304 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.882940013 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.937139979 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.883540994 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.931663247 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.881099972 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.039148168 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.906876125 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.884807501 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.886452315 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.885789967 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882889371 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.878500199 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.890197972 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.881487419 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.884795317 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.89058015 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881361113 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.881474795 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.990949759 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.992380548 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.882127667 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.896026678 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.890449557 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.881387939 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.936017729 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.884664003 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.881913376 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.935710755 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.999279418 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.380601619 seconds)
  done (took 207.428010961 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.888648337 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.891535291 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.885744974 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.900401848 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.884351852 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.883560949 seconds)
  done (took 13.150392929 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.888089329 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.886537167 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.885551735 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.885035623 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.883703701 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.886289914 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.88478081 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885888377 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.889753973 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.885796782 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.885573941 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.887064489 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.887093141 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.885963793 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.887038023 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.887006378 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.887264315 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.883777054 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.885640239 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.887088551 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.037921147 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.886593837 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885944622 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.887238248 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.890312763 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.886096074 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.894731383 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.886079598 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.886080055 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.894003521 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.889147557 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.886816689 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.887683063 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.891484429 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.891304592 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.887731211 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890723556 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.887639049 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.883907543 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.887676397 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.887513141 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.886458541 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.887598705 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.888308052 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.888696883 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.891385494 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.892220532 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.89458499 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.888192718 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.888792479 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.888461282 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.887305815 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.887867918 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.888718234 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.891293885 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.891831643 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.892116202 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.887340258 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.888147021 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.888849209 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.889090569 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.887977781 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889253986 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.892051231 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.886187017 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.889007159 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.890376923 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.891773872 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888060718 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.888272579 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.889054928 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.887537943 seconds)
  done (took 138.917563786 seconds)
done (took 561.512636221 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.1883686 seconds)
  done (took 9.008188864 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.04104073 seconds)
  done (took 8.965918571 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.421914853 seconds)
  done (took 10.24581265 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.885444559 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.905303663 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.894921912 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.887396203 seconds)
  done (took 29.406877495 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.052006063 seconds)
  done (took 8.87640224 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.898822264 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.884198682 seconds)
  done (took 15.645505752 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.927289816 seconds)
  done (took 8.749955271 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.977946463 seconds)
  done (took 8.802583315 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.903441474 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.904763281 seconds)
  done (took 15.644902239 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.871935582 seconds)
  done (took 8.694414102 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.660549408 seconds)
  done (took 11.492354347 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.897121802 seconds)
  done (took 8.732128319 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.918392212 seconds)
  done (took 8.740151373 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.04972694 seconds)
  done (took 9.870783247 seconds)
done (took 164.695765101 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.886561332 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.883740014 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.882729633 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.883528304 seconds)
  done (took 29.357791013 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.924357175 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.939017004 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.925551458 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.935912887 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.928202015 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.925657557 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.917561167 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.917607195 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.935163072 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.928229862 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.926374154 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.927162906 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.925187914 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.916797045 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.926796864 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.926722153 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.935797336 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.926602057 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.91747174 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.928154407 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.89287303 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.937481026 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.928247994 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.892249864 seconds)
  done (took 48.008687505 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.088718785 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.96210953 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.045946413 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.945615164 seconds)
  done (took 9.865594152 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.943761779 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.946454007 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.957237437 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.996397851 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.028473589 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.955378045 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.920934453 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.914686863 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.900037753 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.945709838 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.021254232 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.962936782 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.029958714 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.893615784 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.08135466 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.893305795 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.894109623 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.945745787 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.996357093 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.026197442 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.894259209 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.94571515 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.950145271 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.961968281 seconds)
  done (took 48.830172575 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.892552931 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.900416685 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.899937733 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.89306783 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.893047074 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.893611415 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.899584485 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.895120934 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.914467042 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.894849578 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.892667587 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.893389575 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.892364507 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.893489461 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.892605085 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.90574095 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.906744552 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.894006605 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.897642706 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.901133926 seconds)
  done (took 39.771240203 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.887297556 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.828057989 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.239709501 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.144015096 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.887606009 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.890248854 seconds)
  done (took 32.702296701 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.906285156 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.956454812 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.900902315 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.950224416 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.030309183 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.900512785 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.895019997 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.961953053 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.00346943 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.964377076 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.91307486 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.921196326 seconds)
  done (took 25.130520138 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.889316031 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.891707416 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.892346148 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.907468111 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.904286169 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.901143263 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.902277204 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.887985416 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.909872708 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.911665526 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.903496702 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.90656042 seconds)
  done (took 44.638155952 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978019601 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.935410016 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.932151659 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584680143 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272935766 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103229505 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.8892101 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.225542481 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.898557957 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16380939 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099932968 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998269959 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.147292586 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373394188 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.921527085 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.371890237 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196776548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108850814 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922686564 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.650161841 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960654939 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.060096927 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.715920748 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.951797042 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102753603 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.024282066 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.151725025 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.891716531 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031643137 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933553088 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90261439 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892458054 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166691779 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282449813 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001123009 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90281797 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.510234624 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.611879716 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.886845507 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.728068916 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.726664666 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.027490669 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903541792 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893476929 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828362099 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.031991249 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272381046 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.902287148 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.605277162 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.893361994 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904559841 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988587139 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.896931629 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.712520657 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804675133 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.89941362 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.890254968 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899091199 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468247833 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.065653938 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.059245211 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.865826263 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.983126036 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.653876713 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290625955 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.048088186 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.898414556 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.897707619 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828604373 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.724239285 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956625513 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24378034 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.916136766 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544533558 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198925637 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.174202923 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841523904 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173038906 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.433520083 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.865496094 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123008442 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895072387 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830725487 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.839036593 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830091361 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163703578 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939099005 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.658849433 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937822817 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.224337034 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.910895188 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912297419 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91939517 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120189144 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.783145413 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895187974 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.866253101 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.081705301 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918328629 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.230326125 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835017109 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.90087551 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153548778 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.108010707 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.958297869 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.41884734 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057938944 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.449635674 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.946562341 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.024612495 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.941759815 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.174342826 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959321908 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.082257038 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955649093 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.897556268 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203069542 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.476771565 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.031705574 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.129523328 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028539968 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.226201338 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930537413 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979895255 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907131968 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.897269319 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.748689154 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455959297 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.89825623 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.900551742 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.957795651 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943086038 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.898075356 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84498113 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.528712325 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11877703 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.915590049 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122356326 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.454505421 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207299897 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833907415 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227131199 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.991359705 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.121805137 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.559378875 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.98387406 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159748504 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95905336 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.990529451 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943414699 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917764885 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997526635 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920765727 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.036681074 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190015442 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.903037954 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.903432968 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.746103866 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.9367068 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908294273 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.904447337 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.653689167 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180041322 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.929171034 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.906025095 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.788745482 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.913425271 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964177704 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905417442 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.910675446 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.445581034 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.613295816 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.911416345 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.490573024 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127343366 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911590904 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.641958044 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021417911 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.982518045 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184483207 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963931748 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.834778934 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.615967383 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.595469361 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90255784 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837505291 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901114875 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911470513 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912649285 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.097766629 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182321036 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94810002 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.651765929 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.949443245 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913130081 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.906701495 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902592602 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.414365298 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.077627358 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068204078 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.946277997 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046551266 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.916402959 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836894719 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.905577281 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908330003 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.903670903 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.903144515 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935316566 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.660490127 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282493926 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167094433 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.512255183 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921454872 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.684203593 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.964341821 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.902159014 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.896113118 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053911955 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.022822257 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918315977 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.914990857 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.7547175 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.605789008 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47501996 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215820816 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215669619 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350260348 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.107869052 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930750627 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246773579 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843156673 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.468081537 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962007509 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.24763789 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852255973 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994783988 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.567580691 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256804529 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918811356 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132911703 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296726207 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.821301123 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086367262 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115961771 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940823241 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.04615882 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863878408 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.192701898 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045668085 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.702607196 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119771587 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237288751 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.755642545 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.039324308 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.904183796 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.595727144 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993342972 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.618886977 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.077392173 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.072358104 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.015144537 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385456652 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918155074 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.131768843 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264176813 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.053298963 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.025113263 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847056962 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91770141 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.917627844 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.908100813 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.904416772 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.783596502 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.161544652 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917457767 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841192613 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.010134892 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202360576 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.811146441 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.911838222 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907318118 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207284358 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.447051 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077519102 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.998433261 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.429218682 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914891754 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841003613 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841319624 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.600276848 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912408746 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882684678 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121594125 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.013860517 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819301133 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97736322 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.169492844 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165447068 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.920877719 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.188013393 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186164204 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.606105162 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936196223 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.008621063 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.743410975 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.027176742 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.908965432 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143967655 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.660783816 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138408232 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.966827842 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.866390452 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.907482408 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125767055 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908617806 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.992886483 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151739503 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.632278136 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.919573559 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343126647 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985574612 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.992058232 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963758431 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.000143905 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919045672 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991928486 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920888219 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.920988194 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921214098 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957813834 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987808349 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.044420604 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.924551386 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003506898 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.092302412 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.436424523 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.915981258 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193318069 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27618115 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246033204 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972043211 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.910063962 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918415407 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844392066 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059913837 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.13643932 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183964807 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.040663077 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.026002416 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935278452 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.745679103 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.116741664 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150320103 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187292234 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.808147212 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417570074 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.95045199 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.912466708 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922906453 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.123753702 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125207849 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217719736 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061826816 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.98574936 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274324792 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188516462 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.911902848 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911955266 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505004743 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.918030185 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.722643529 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.957039575 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.979952924 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198631207 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923182244 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297137568 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.938936818 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.073420256 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.685821579 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65833418 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207753995 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.915371456 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981839289 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190364307 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.302884057 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231722992 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981732548 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924469964 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.024740078 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061229011 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.783045534 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.916214327 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914244282 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962416059 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.623875112 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.923504916 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201047355 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228837366 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.911084782 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.797230453 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938010016 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.924488764 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138136551 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191669116 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.17426092 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925362889 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.921261982 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.730150612 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19516046 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975906466 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84892925 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.919039191 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015377146 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164025322 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935456249 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.367950999 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.627415322 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194835988 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.921153169 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937692838 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.059960419 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288706671 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254005531 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.457443114 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20212755 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.507998157 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.481191951 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21496685 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.92069366 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.056565313 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219866098 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.91911453 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.996914716 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955261049 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.189367081 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229717597 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.066230519 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.668890296 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.887273119 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.25822715 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.476297631 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858532318 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925846484 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.97657194 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920704618 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.045054782 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928801154 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.791898624 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.057688404 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.701376948 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193496025 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.922021942 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.91210181 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.796799252 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.206853005 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949830485 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058752725 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922461788 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.593468228 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.265617679 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174950157 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.997036119 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.926618724 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.921476244 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918076008 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.90432641 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114344406 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.113041658 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192990748 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.023213879 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.955865362 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922318107 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.134595162 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12941205 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.994863622 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067757134 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.995755827 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960595157 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.824362745 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.427485876 seconds)
  done (took 1696.673396338 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.917397345 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.956607803 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.918966411 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.934453248 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.988983977 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930357027 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.939166771 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.98631597 seconds)
  done (took 57.427290447 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.926213418 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.146385423 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.92886596 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.919065815 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.928699882 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.918802455 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.086130355 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.927456205 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.927785941 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.928616366 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.919119652 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.918050739 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.243039696 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.941078506 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.918988266 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.903342503 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.92808998 seconds)
  done (took 75.268123211 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.918000379 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.966955021 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.943187481 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.933780902 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.951632965 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.932304033 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.755617854 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.942805029 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.921901973 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.06450929 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.552347923 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.925318051 seconds)
  done (took 87.664568003 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.927904936 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.925819528 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.925992342 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.92632606 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.926290886 seconds)
  done (took 11.49112352 seconds)
done (took 2208.676986026 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.17459099 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.138685038 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.152789613 seconds)
  done (took 6.14872587 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.06657612 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.115806059 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.234983256 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.257097465 seconds)
  done (took 10.532385597 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.208519033 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.306349765 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.128200079 seconds)
  done (took 8.49865046 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.321453373 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.931648693 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.032350811 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.919822616 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.923424618 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.923606096 seconds)
  done (took 22.624533345 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.923515823 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.926028247 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.924490741 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.927437419 seconds)
  done (took 9.557872542 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.905225812 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.669633004 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.909152364 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.922318202 seconds)
  done (took 21.261959381 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.670263879 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.681651419 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.667319984 seconds)
  done (took 9.875090434 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.717877344 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.858187982 seconds)
  done (took 9.432019439 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.181673665 seconds)
  done (took 4.038622631 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.054925263 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.187225006 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.492270085 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.44264005 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.498418279 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.805004983 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.231991644 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.167404243 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.329659576 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.373144303 seconds)
  done (took 25.439197113 seconds)
done (took 142.725110292 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.303613496 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.161334996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.120058291 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.300241448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.146776149 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.12050357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.33866244 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.284117013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.771892425 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.768127301 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.261383561 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.146751463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.073825797 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.158712497 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.073700228 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.290788503 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.146415756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.325868077 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.993347676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.154062199 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.341913222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.899772455 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.102722831 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.912120305 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.148172691 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.073327229 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.475106462 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.292494777 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.147140987 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.4872877 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.074684834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.306491057 seconds)
  done (took 173.060815944 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.833632304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.923090597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.922417126 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.933045642 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.575192726 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.92407848 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.925317326 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.922965188 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.178392013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.172335456 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.923170482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.563849342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.923034037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.923754393 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92311702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.922213469 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.283158424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.874184764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.924752072 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.923525684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.923650649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.486613911 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.923841537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.54583255 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.292184997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.924367506 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.923884161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.930370406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.924097672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.932361482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.93623945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.924763401 seconds)
  done (took 211.024533931 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.923491066 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.926310747 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.922990825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.925543517 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.937011294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.925724978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.927329417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.925047523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.490001248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.478809164 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.934447633 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.933890983 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.926050153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.938544444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.932923964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.926429226 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.939989892 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.966063066 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.933976322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.935460674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.939226302 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.73426084 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.964960623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.736914642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.968949649 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.94013883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.926454976 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.941565108 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.945596905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.946713494 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.944498033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.927045176 seconds)
  done (took 222.541587714 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.128805418 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.933966354 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.934460074 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.891086093 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.93363709 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.933043529 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.928756116 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.130463238 seconds)
  done (took 19.702776736 seconds)
done (took 628.199347946 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.350349916 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.203662659 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.110182157 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.957439537 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.190823126 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.993025055 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.95415368 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.016207643 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.150733406 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.026890992 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.630926815 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.968436175 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.727678473 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.975047551 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.081507293 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.010405334 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.487349872 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.574677097 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.131970319 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.004142372 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.130817405 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.89111461 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.027123634 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.189801646 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.753217063 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.935159154 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.15372035 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.493861508 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.963057933 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.119991978 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.698626008 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.369781915 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.964221766 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.950154458 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.004259315 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.985732493 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.329373189 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.962084387 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.076126219 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.690114696 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.016290539 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.031045562 seconds)
  done (took 107.146732285 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.924482139 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.92441532 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.923136782 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.924111614 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.925460953 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.924014439 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.924182993 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.923455342 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.924547091 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.923418716 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.923818066 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.925456432 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.923459955 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.925659106 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.923664741 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.925248533 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.925153973 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.927437435 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.924239883 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.924096786 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.9260668 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.923889812 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.92572767 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.924429849 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.925682036 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.925102073 seconds)
  done (took 51.925064794 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.938373097 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.079383477 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.156368123 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.953737344 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.937642581 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.940748448 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.956206565 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.942809226 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.940293444 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.939643712 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.032193715 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.943644274 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.958261993 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.160239982 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.951706 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.938838294 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.940052407 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.938879178 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.087063147 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.95279579 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.958924908 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.943006823 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.956788173 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.950733018 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.941772045 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.937766085 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.941121831 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.403991153 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.944561511 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.031805721 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.979896424 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.962395424 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.369272325 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.167930975 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.988472385 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.945565432 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.938431263 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.043268808 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.943624261 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.939296515 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.957059321 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.942214416 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.159158697 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.44460522 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.949491283 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.940973973 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.412494544 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.043072479 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.978824251 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.950061471 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.164398935 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.954260261 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.941361518 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.939633518 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.976047945 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.948956105 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.939524589 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.299080452 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.950654995 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.957692515 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.945093346 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.94085411 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.092469554 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.947589192 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.081846221 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.947646741 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.948477374 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.942056399 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.161530965 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.953862641 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.448317807 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.95120352 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.94051423 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.035953955 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.085889282 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.441719528 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.952208458 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.096822441 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.385058069 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.962653361 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.947701036 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.394448745 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.96676992 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.948078314 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.943217076 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.943256633 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.942125205 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.985595815 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.957357005 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.381661498 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.450192281 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.311765267 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.966357809 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.957352439 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.941228502 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.300473325 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.94885233 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.94273841 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.156159806 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.474404776 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.952987352 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.950414068 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.437138098 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.955897709 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.961443216 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.951051609 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.166795742 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.955304648 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.986492739 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.943726043 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.949245043 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.945495244 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.960982341 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.948847567 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.944436267 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.425856931 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.051922748 seconds)
  done (took 240.308413341 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.936601051 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.937646807 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.935800261 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.938157636 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.936752059 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.941217874 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.936929843 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.936948877 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.942879367 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.936008252 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.938293584 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.941477859 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.939729177 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.940974946 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.490917939 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.948865514 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.55218043 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.94644128 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.941233626 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.941398168 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.626069048 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.950078385 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.94095119 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.946775133 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.944190921 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.941283744 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.94232455 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.966849233 seconds)
  done (took 170.095040909 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.950785426 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.144344785 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.966164125 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.986650176 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.957232178 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.948188471 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.973066728 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.970309987 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.955247422 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.947342671 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.949688839 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.010376553 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.961284701 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.094896181 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.981378423 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.981581212 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.055460812 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.958286112 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.948927494 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.947687527 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.978476844 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.944791133 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.011262417 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.074796843 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.967421571 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06425723 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.955510185 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.950940999 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.948495935 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.065772938 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.966316882 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.012211319 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.979181421 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.967816275 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.070603945 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.069265409 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.059263032 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.982466614 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.95354297 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.949117963 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.949650189 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.939581754 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.067448712 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.968940975 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.951121576 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.059028739 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.96969979 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.953680994 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.961653707 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.950393212 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.964739434 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.970828947 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.020053043 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.081640291 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.986781645 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.977423117 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.977324921 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.262440424 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.962162996 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.053343106 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.948730835 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.069285468 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.972042232 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.940616108 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.952144603 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.956857065 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.981627077 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.984511288 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.057741702 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.95925153 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.053789244 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.98900463 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.958015927 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.951013079 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.954400372 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.07085546 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.073137395 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.988921687 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.989919617 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.983402702 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.949105523 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.95177566 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.941509061 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.969358927 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.955847088 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.068030538 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.070928924 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.960888615 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.954489782 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.954644874 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.954692669 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.978087975 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.078279999 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.988562218 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.052303228 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.021280229 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.027340584 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.966834642 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.965918458 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.958966373 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.017209519 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.968089708 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.965071342 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.31871645 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.028181051 seconds)
  done (took 211.473057946 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.048269651 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.418174361 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.008212295 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.011191233 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.240938255 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.399737175 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.788661823 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.002086332 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.005054626 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.027756398 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.160959616 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.063971201 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.017274886 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.989660002 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.415618987 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.992511918 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.004557906 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.022384984 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.008193518 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.591132659 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.301212043 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.123551311 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.000838288 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.225811564 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.983833361 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.276754356 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.49532449 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.379460855 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.037432744 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.350223285 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.3476097 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.684402706 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.214145294 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.252864355 seconds)
  done (took 77.781128174 seconds)
done (took 860.591625933 seconds)
SAVING RESULT...
DONE!
