cset: moving following pidspec: 16758
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.277043031 seconds)
loading group "string"... done (took 0.603522427 seconds)
loading group "linalg"... done (took 7.306718109 seconds)
loading group "parallel"... done (took 0.169606602 seconds)
loading group "find"... done (took 1.15465754 seconds)
loading group "tuple"... done (took 2.060253695 seconds)
loading group "dates"... done (took 1.305798284 seconds)
loading group "micro"... done (took 0.242329599 seconds)
loading group "io"... done (took 0.978002823 seconds)
loading group "scalar"... done (took 39.897358351 seconds)
loading group "sparse"... done (took 12.866156883 seconds)
loading group "broadcast"... done (took 1.029918132 seconds)
loading group "union"... done (took 13.703167072 seconds)
loading group "simd"... done (took 4.483707105 seconds)
loading group "random"... done (took 9.005125292 seconds)
loading group "problem"... done (took 1.951886221 seconds)
loading group "array"... done (took 21.263084935 seconds)
loading group "misc"... done (took 1.927053801 seconds)
loading group "sort"... done (took 3.222922131 seconds)
loading group "collection"... done (took 18.272136365 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535174262 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141437662 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116930032 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13847879 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184459339 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131870323 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143570949 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084819304 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.040587282 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168379386 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139107429 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.479745897 seconds)
done (took 5.064387915 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203224941 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086507008 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095769273 seconds)
  done (took 0.885121183 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065625409 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126976385 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080370701 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068118092 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066440864 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080593479 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066718719 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065776984 seconds)
  done (took 1.265449941 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074056703 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068860128 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08379624 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068067111 seconds)
  done (took 1.006616404 seconds)
done (took 4.147602509 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.897960926 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.233678095 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189154564 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.454948121 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149576048 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189338801 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.658795702 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328886283 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216640575 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102737602 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10792795 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378467529 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107217774 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.660119794 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07454381 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106110499 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158172672 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.46139571 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08128174 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082652797 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10378313 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144150859 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100377117 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077124732 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168445535 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069668862 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148396696 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095281359 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067843414 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.243704883 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189626044 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682840632 seconds)
  done (took 10.47798436 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098028772 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.116021912 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069172736 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139510964 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102904398 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086228393 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07089282 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082912588 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09104463 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.15759344 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114307651 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106113784 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081594567 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06957445 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100296175 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211100414 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106298027 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085511057 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086495089 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076023644 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121618688 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082820228 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093909018 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078259412 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151337125 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194832568 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114207729 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114003587 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071436313 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082868744 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133342248 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144557814 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06831219 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083211896 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.14227238 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113328106 seconds)
  done (took 4.565382134 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.040595414 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159686238 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090888829 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151796848 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084707229 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109872937 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082661444 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098991561 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246711857 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.09267039 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.457542809 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12869414 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101099492 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067968017 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083339274 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067365164 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.516417985 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14431337 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103063523 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102469975 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073690435 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08578009 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357480829 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070649665 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065893156 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084722386 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05918202 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146312043 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067918946 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.226401273 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088622307 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087837768 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101051493 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195664354 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093995094 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123347275 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065981426 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.128620489 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16955538 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082753911 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074079034 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066054856 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106830831 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117955689 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104776553 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08373051 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067420884 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181404496 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066146626 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099337209 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.904535478 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165508679 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08154576 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067193707 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083628106 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.272358878 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102129371 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065373128 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080929136 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.266877074 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.167805822 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069272249 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068032095 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083789459 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067792837 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368670465 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082707138 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.924051689 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068664845 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076313463 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085172857 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066883026 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088018834 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071947292 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101249371 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066333995 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067177723 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082524752 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065627285 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083493207 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084729249 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202939925 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083291599 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066859117 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062821316 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081704956 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085463759 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111995776 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069636312 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081263958 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099343759 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079048971 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068419496 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083843628 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106210397 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083867796 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085052723 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085522608 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127624555 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067428097 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.143845551 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081209415 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097586016 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086274173 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113533916 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078637412 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082351698 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152377422 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065354565 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06368921 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083768142 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064402991 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083353081 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068733533 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095879396 seconds)
  done (took 21.124438523 seconds)
done (took 37.920709895 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291493652 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091547309 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091678908 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077514911 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091283922 seconds)
  done (took 1.431616908 seconds)
done (took 2.196326584 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119866689 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116785809 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063046359 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112514669 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063686169 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116876171 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114056588 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081358997 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115229587 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064491098 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112213548 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064880195 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063371666 seconds)
  done (took 1.995423506 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082573663 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084419837 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085269983 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082493235 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078754319 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081981682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079924964 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105050506 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079477296 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087533655 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064628439 seconds)
  done (took 1.669521357 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082882695 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083755523 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085209361 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080842866 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078349575 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081473301 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080210041 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102255453 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080502958 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088604738 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063992712 seconds)
  done (took 1.665921883 seconds)
done (took 6.082626721 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078188378 seconds)
  done (took 0.830488051 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.702856691 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.610034485 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084039902 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134300706 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223033843 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154255092 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.447344992 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112391112 seconds)
  done (took 10.39599963 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103845274 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084999944 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069739531 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087087314 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068357996 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087546822 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070947345 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068589481 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084397457 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072679668 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08705238 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07278733 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086755717 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069622784 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069813535 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085008139 seconds)
  done (took 2.093453755 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093540604 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092185581 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091026617 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076120571 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089046701 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072968269 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091342032 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07522194 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087384987 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072938106 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090987883 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074508585 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088389054 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066493938 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090382534 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077478967 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08796039 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075949449 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091135059 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076623623 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090983579 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065668356 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088585176 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075371153 seconds)
  done (took 2.846542666 seconds)
done (took 16.926533622 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131509416 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076608098 seconds)
  done (took 0.968987036 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081857064 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098377422 seconds)
  done (took 0.947585625 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083532286 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081063633 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089566599 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092598891 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081458512 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065768035 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103279177 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067125123 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081160686 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06637249 seconds)
  done (took 1.578854824 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068056406 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093606668 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071054271 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097242652 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074496508 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081089196 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073267332 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084235282 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078231 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078936334 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071992843 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099362082 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071971022 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100824425 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073531394 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084492278 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088293848 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067628115 seconds)
  done (took 2.22811321 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066376908 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066935733 seconds)
  done (took 0.903369166 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067383844 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063892987 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081463358 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066578657 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079304606 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063398327 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.0796782 seconds)
  done (took 1.272472643 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400209169 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10870096 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.244054332 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087738941 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103885435 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261760837 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082545545 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071070803 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087974402 seconds)
  done (took 2.255213799 seconds)
done (took 10.923242955 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079359193 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085929296 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110110713 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.42175979 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105851157 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066232045 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.13416327 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.220306818 seconds)
done (took 1.996659397 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125591463 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611184468 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401011874 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212467513 seconds)
  done (took 1.998642131 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.373901718 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091262274 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075381288 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069067978 seconds)
  done (took 1.389362265 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065370585 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069199645 seconds)
  done (took 0.91455354 seconds)
done (took 5.203349761 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066129387 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066297013 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.101701909 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063978997 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083363569 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063449925 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063636313 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08297449 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065820935 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066009242 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082438803 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068270779 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.081707219 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066930119 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064313262 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079496279 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063795153 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066196964 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079215262 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063962076 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064259893 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081414656 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06387957 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063601422 seconds)
  done (took 2.52431525 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085900977 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082823523 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071845102 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088258455 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070349462 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08780437 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071989891 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067382411 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087307956 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068695887 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085855625 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071119479 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087822048 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07108105 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084733581 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071645443 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08783213 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066862205 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068660218 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086523247 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072523099 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08229869 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070470365 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08731423 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070462589 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085569393 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068461115 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08263084 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071979472 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085993457 seconds)
  done (took 3.124100885 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070574905 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063996811 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080438028 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070750011 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064837585 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080543469 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064184598 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080024874 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064467808 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063549275 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081362211 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063846711 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064238449 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080905777 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065183146 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067719044 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096855432 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064307425 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080499457 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064125669 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067243332 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.0800803 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064512318 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080251734 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064527077 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063845319 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080191432 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064640166 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065074326 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080349215 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067301847 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067531947 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079831846 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071113734 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084087407 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063478993 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068474279 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080036526 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06448166 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064219602 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079782991 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064369798 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064141811 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086100862 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064285366 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081386363 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06434483 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065988664 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081107904 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066926124 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063449832 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08104346 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067462867 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081094927 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068240397 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064060309 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080880079 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064269925 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080896854 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064224013 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064379118 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079639484 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066540668 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064902788 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095504155 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071070723 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06405706 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081479358 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064957565 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082603906 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065921396 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077712495 seconds)
  done (took 5.949326494 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118511677 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092504648 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082386687 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065973997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079247247 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064988926 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068214213 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079975275 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06619426 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085772368 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064990203 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065739663 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082111075 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077504455 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080790573 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06633548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086908574 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063269559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064981454 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084126157 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065484092 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084406657 seconds)
  done (took 2.477477407 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187745681 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088022893 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111039329 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091087036 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084629683 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074798329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070139243 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086252878 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071439381 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085444217 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069132834 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08702015 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069646491 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084969296 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06938196 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085269888 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07159741 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085976803 seconds)
  done (took 2.359338843 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078662649 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066574644 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106134041 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066362506 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083872266 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069579924 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088613003 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075043046 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086119359 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067616192 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091644615 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069158699 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085277419 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066830922 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06915719 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083072131 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068938228 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082664127 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076147381 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087858063 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07175389 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09124352 seconds)
  done (took 2.519196997 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081477817 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06821396 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100801445 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085724903 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06230907 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065216664 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089319632 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066913095 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088412857 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068875998 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067423173 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080788556 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071654446 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08299062 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071514895 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08266042 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068682958 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066679071 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084259177 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062457339 seconds)
  done (took 2.305237995 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087860126 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084061148 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.177780634 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092256221 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06833759 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084493545 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075953921 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083818375 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068281386 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108572118 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068474336 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083791794 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076455173 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089561551 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06805887 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09225606 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076366633 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092138661 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068213251 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083491963 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108730891 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067940115 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093019351 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068145721 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084379951 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068260081 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067846234 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089390547 seconds)
  done (took 3.171265533 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066429035 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067081122 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08041762 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064055566 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064481048 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080821385 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06402182 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063660459 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083548738 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064231283 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066442192 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082419776 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066155744 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082097266 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06618907 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066396205 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082880014 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064891563 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064299179 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080455351 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066846108 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065925729 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081817994 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064423725 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080177415 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066953899 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064838126 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080129494 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067086144 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063854069 seconds)
  done (took 2.915276105 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076445165 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090740612 seconds)
  done (took 0.963519007 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063765953 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081545024 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080843465 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071062339 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08785432 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06835644 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091393522 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071598567 seconds)
  done (took 1.40963697 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082546393 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078437084 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08450249 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07839058 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094525817 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084300643 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.151432899 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085152963 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07413045 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082491161 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081160164 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066246707 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090066183 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06750066 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09006349 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073660405 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064980647 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08819991 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070189708 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082033747 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068210339 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091876018 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069121759 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063598756 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085393016 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075730667 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094800891 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068147812 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087028593 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07401412 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071856942 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077724461 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067321836 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08439399 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066052644 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092573504 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081738673 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085699673 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074847382 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067979595 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093505745 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062274325 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087935422 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072975055 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092607409 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067197503 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067392624 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078700357 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065718269 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085434319 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.0624486 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067138531 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078028834 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073935185 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088809439 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077515407 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065093732 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085087946 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069673542 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08662828 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073711332 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085495702 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069619598 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066395582 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092290905 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072147076 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091971218 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062061923 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060971688 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080642254 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076031445 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10590051 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073863886 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083654684 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068008816 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081764195 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070022049 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068608806 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088752397 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073155505 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083877765 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073327469 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090963487 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067480169 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069679799 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091615561 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065758079 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085426823 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064701308 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099637465 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0666362 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064907621 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081894972 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077527164 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086715141 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06668026 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06450999 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090285267 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061705521 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084106357 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067857148 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084830113 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077701615 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089059065 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07259068 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091604367 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074510169 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066710488 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08711349 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063892208 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084344846 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066239154 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073939308 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077992307 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070155756 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084405136 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067763944 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074594321 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081728488 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066880202 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090598335 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072963799 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082259747 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063559522 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069509435 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083022885 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070871812 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091286971 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065467929 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061686139 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078359883 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070529777 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082933097 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070261668 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088034969 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069987475 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062097678 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081498851 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07153541 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092282266 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067419403 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067388133 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090239518 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068515523 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082295589 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07388601 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086138512 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065992848 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072799423 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084076925 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062474078 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087027302 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069707857 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065611636 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086968841 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071140945 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086254673 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067425741 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065087314 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090413199 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068158588 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082697637 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067167948 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082267377 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077603124 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068622818 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078653318 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064693333 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090531948 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065547547 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066106425 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083024735 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06980983 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084761974 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065273752 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066175902 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085231373 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078245117 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088841975 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068014123 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088370653 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077981563 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08373443 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069356309 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066641259 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085107345 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068275776 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092195735 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072138645 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088527888 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069302301 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063252955 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08894242 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074507739 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082947389 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064557722 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065571296 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087732428 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072491173 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08715535 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06860833 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082004704 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067635167 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070443737 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086393508 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066960977 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082208701 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071522392 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065921197 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090779782 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067735008 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093347855 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07030829 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078820569 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070589515 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082356444 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073273383 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061998364 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081852869 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066308335 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067783736 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082655139 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070237216 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078214779 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073706654 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091735798 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067466176 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066157128 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083911259 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073456859 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085108813 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070788247 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069959815 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090158275 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077858824 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082859483 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070111606 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094298195 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067647222 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061373088 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089437068 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066226259 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082910112 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065388798 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064574599 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086708804 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075297369 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090171619 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061507173 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085883016 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065662049 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066395179 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080099986 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071736565 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086035676 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067932348 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073926394 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084602987 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067911764 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087362533 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066047388 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067598563 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085637139 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070150335 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084770242 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069069212 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066030305 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086738666 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065746178 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081854275 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069403934 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066256903 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083925447 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072976308 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083389139 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067507864 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069203678 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084896947 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068633633 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084488841 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066566144 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069511647 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084368417 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067688312 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086372775 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063217258 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073183997 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083790579 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074705825 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084235304 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065003302 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090324712 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069396497 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071857613 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084274599 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068105442 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085872313 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067339306 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068345901 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090767566 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064998127 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094261322 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074963941 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084247844 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070107429 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067826413 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085805262 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066445923 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084628779 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067877951 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066704035 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084216811 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072068281 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086299601 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067079854 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068227212 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084450759 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068042589 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085133177 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062137613 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06600825 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083674955 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067458542 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093115293 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067629969 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083781047 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065904997 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068026576 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083065291 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064102965 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0916926 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075607063 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085024367 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074726067 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065508225 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085879304 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076990436 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078166066 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065399521 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064687405 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083107406 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074064309 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085068973 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075832069 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083897649 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066436082 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064528477 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085170663 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066335776 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061093244 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081322782 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070832526 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083285332 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065733253 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06735044 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086951601 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069028048 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093056034 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.0665756 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084606784 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067489074 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06448743 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08357946 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06656124 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069750321 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085383145 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064802545 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081060877 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066630656 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067936504 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085236091 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067068735 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085623185 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073673813 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069713376 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087101414 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070538305 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079639523 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069442634 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084525804 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066265382 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065553031 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087350532 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070699921 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085477529 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075577167 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066184314 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085245633 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067911973 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082335267 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066672086 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066133164 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084156346 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066330721 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084954061 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074731972 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064795054 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087535834 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066715939 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08431426 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073228623 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084967936 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06995342 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090791093 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067127616 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069681473 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091804201 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070788573 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08795198 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068243628 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0686601 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090066168 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066913804 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090309435 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.0678352 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067404028 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086853761 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065711276 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085150741 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067308824 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066106172 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091594318 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068260536 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084339537 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066698787 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064391906 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085665941 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070934183 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092010851 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069859334 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087269188 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063226263 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064818721 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085348382 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065675242 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086308497 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070776763 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073480719 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086614726 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068312309 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083464663 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075479442 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072485269 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088818124 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06594139 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088472149 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068127059 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08630447 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068379555 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06777021 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086132494 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070858859 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085224876 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066569512 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074357302 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087788029 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068083266 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08593293 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068344262 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067118897 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080529066 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068297125 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086442874 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072308375 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068749994 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085099485 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07737054 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082780401 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067345904 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088251452 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066328047 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071310372 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080562262 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069007613 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085597841 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06819593 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062160137 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083860624 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065969149 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069014069 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083931239 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062117447 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094172118 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075418842 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087141626 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06664731 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065597644 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080080462 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062926434 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083488089 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068333753 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068537724 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094140793 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066727943 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083120976 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062314755 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06811128 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087682201 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07039537 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081728577 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062626161 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066118075 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087371546 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073044085 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083231598 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067699075 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069690101 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086938448 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065609031 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088391462 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064241405 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070544388 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097736441 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067501033 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085784264 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074076097 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092323011 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067788809 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079983066 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067277642 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069912048 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085983501 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069123915 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085624039 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08255769 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087653751 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066640619 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066077573 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087439934 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067279312 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092829398 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068409183 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067208004 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089027462 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069767881 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093183269 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070376091 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091912873 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070666098 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087566278 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065800485 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068091765 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083100289 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066653057 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068299546 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085493286 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072031442 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092288434 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066246435 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095423595 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07611117 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086905183 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064619239 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066459799 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084704378 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063199276 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08605194 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065866408 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065555579 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082882948 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066511271 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067540142 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089873408 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068496096 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085253214 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067223274 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060883726 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086877212 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069279303 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085066212 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064655078 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066759436 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086259813 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071451015 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088269337 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065715343 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068402703 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086385672 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068681871 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079807038 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073062488 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065546887 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08728256 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066882066 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084900234 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067511628 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069802271 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089829937 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068216167 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087537116 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07641153 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087197373 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064911342 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064384345 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090816501 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066078007 seconds)
  done (took 46.20017424 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108337577 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081936959 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062830398 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0804961 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075617676 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082353232 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063183899 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063651301 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081377378 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066002112 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080517446 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062869226 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089894388 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086442766 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093144227 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067523566 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080637807 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06416198 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080126937 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064350031 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090148352 seconds)
  done (took 2.469158082 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075632877 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089621413 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073894238 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094920555 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068423235 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090113012 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073148819 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08928739 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094858554 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067965256 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094658705 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0719548 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08586382 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068167112 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085631293 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072037625 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09437209 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068889063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089498187 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073716724 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090125276 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083407636 seconds)
  done (took 2.635665097 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067391333 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06633521 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085655666 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062181172 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065587381 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079944516 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069838444 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081773926 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070647672 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065181695 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083476065 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066260215 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08600906 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062061151 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067275582 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082209039 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131891389 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070464532 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065896641 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086705279 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062473368 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08742511 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06284031 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062085378 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083864462 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070365744 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08596753 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064835984 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066156609 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084363502 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067495598 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082115625 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068695411 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066444935 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083584922 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065539454 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066408937 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084182958 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06215977 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082706095 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067659558 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062646338 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084686055 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068173425 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063866791 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082083879 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068404382 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084486413 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062139778 seconds)
  done (took 4.46677485 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084896584 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130502451 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087744713 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090646299 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101875647 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09222346 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07301936 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110655589 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064062113 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084227151 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083180276 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.100684716 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085556884 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071626159 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091596618 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067041511 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067312177 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084109686 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070237382 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085393741 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071748339 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091193483 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099434798 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08050245 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088090533 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066274303 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083802659 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07191242 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097915745 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072088622 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089378337 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072005477 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100916627 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072539322 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085158186 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069053169 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101667527 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085350087 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070354603 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064626431 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086902123 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071905079 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091467637 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083262066 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085860363 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071797692 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08496222 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063710751 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09819968 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06881655 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093041232 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099706518 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071374591 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08469017 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07199091 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100827636 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067421507 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08383465 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070148719 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097636548 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064601252 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088482918 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081242593 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086592823 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073845108 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099828283 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072773017 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089776041 seconds)
  done (took 6.635384811 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075159217 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091273486 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082363179 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100270449 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091588672 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073892045 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091262748 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073616808 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090843291 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078509993 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091389614 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113680431 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069194919 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094075997 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073176012 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091898369 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073352235 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092668403 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073247996 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092558464 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091462309 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081711677 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090604441 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10026107 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104334446 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086879433 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073901966 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090386731 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082444417 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092135211 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10269362 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073029472 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091501787 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100156758 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084972675 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091486537 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067006356 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091575553 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07375058 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091608654 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068543889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100188185 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072304508 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086549664 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073858915 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091650422 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099686634 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085113842 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094835269 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096953178 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073881643 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099569221 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072621573 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092493337 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099500897 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105998517 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100310792 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098561724 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073592206 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100067274 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099292617 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107826487 seconds)
  done (took 6.324677041 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087620177 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09448708 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097098453 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062094139 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064953057 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090065768 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065253538 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083186222 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076455601 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094737909 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078040633 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089133005 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073785806 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097267174 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088542505 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075197954 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088442619 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07123369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093789518 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070956414 seconds)
  done (took 2.497481573 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075592931 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102524311 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068051515 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072235766 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089307338 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072351118 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087930389 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069876091 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086209397 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070363526 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095714146 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07719049 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086536352 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073443168 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095512997 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072793579 seconds)
  done (took 2.155272283 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078375554 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095269713 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081753927 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085622894 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066086329 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082258282 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066381062 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063114124 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082231283 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081493477 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086049556 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07011322 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085361717 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065784368 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063357012 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089014868 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064098536 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083136984 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067299311 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099992977 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078501468 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084088374 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068141804 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067884158 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086702208 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072494784 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086981049 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065094421 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08437038 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067811148 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085806325 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075459908 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082885393 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066277313 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065227722 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083382205 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.0680179 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086379041 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070340043 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066795742 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083787943 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067050318 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085468572 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069004578 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082089842 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067529678 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063535172 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092083397 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065761192 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085767074 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067267071 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088009501 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068525621 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077468328 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090507197 seconds)
  done (took 5.08517196 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081044503 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069997198 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081820655 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064678526 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089271437 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069710697 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07046215 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088409813 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0693972 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084062982 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069491327 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088282951 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069043622 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071086407 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087401944 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071254061 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081601821 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068922777 seconds)
  done (took 2.239735328 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073095133 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066822798 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092944738 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067044881 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085547207 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069192654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06307031 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084542824 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066000914 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085106679 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067206832 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069145334 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084435137 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069909814 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085327576 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067472123 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068758524 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084642218 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067501834 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081793179 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069802664 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066223819 seconds)
  done (took 2.501636265 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072728685 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093647513 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162994551 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107455406 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08361944 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099756496 seconds)
  done (took 1.487260029 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09204192 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099626187 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067759267 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107810494 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075637002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088264169 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069541137 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087999754 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077945807 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101865943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068646069 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096722099 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096096558 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078602394 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093977324 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074653092 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087426662 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068574002 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086630534 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107418813 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069987512 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095809275 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069464575 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087064013 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069188217 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096127737 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07804737 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101917085 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087197089 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077584489 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092878595 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070267955 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097199691 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101976467 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07136384 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096706185 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069345185 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10642344 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075115417 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096660075 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069858307 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094716029 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096440026 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074738626 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096653902 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069460256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093188794 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068510759 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088360309 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112998243 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075760431 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09618236 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093853666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078213734 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096620283 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113854765 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083035732 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09686396 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093590047 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082894992 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099006223 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074979602 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097141055 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102091115 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075668595 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096576518 seconds)
  done (took 6.627595995 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083914957 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106294154 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069366121 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102185093 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096592453 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06938428 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087852057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069901319 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088248434 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069089086 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130284952 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069523886 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096975921 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097344757 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069224903 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088239 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069457665 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096633494 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069393212 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114098992 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087711753 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078609359 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096962298 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096929422 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083620775 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093464428 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068995472 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08844447 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069410745 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087867552 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074545995 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088452249 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096895498 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069077203 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097018242 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070310601 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088013226 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07523586 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087445086 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074431289 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097331881 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106152772 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069584375 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087616504 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082901935 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088163331 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06934542 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087743792 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070241963 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087141565 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08206018 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102718401 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102161887 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096735723 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070152394 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088527546 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069681945 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088307914 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070079139 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093521795 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077407251 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087666676 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114285945 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070028994 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088498051 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077842562 seconds)
  done (took 6.516344059 seconds)
done (took 128.340334959 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203238377 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186502086 seconds)
  done (took 1.258284352 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069180197 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096118924 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098389241 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12885777 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086978441 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101257611 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119381521 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079821952 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066775659 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086603444 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067887197 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08827637 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131565146 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067404926 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087397783 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069970427 seconds)
  done (took 2.32130503 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102568296 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196712528 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108958407 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066163047 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099506194 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079117391 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085744842 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077339506 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094895751 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066203259 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078030373 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09679115 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065800759 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095775523 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074858992 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098864822 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066450665 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098322239 seconds)
  done (took 2.532511163 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104290407 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142242317 seconds)
  done (took 1.123480423 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200537206 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122619346 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207411523 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.41829894 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205626847 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277814956 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173317913 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171777577 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.155052131 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169273267 seconds)
  done (took 2.974669039 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09943147 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170997483 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312418054 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138338885 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086394018 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11650741 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138479603 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089104209 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101944928 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.09991762 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081560508 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097374523 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097831559 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096610995 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074814712 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097482024 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120738198 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074345658 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076453732 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096674494 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117133819 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067670864 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074736446 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094538813 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07774112 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098423108 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066507513 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085877164 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076128259 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09454214 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079817537 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11522279 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098622442 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13316641 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082575782 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131553882 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098083587 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073007741 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095364951 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072949336 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098241861 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077831384 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10425749 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07784013 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086116137 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078983111 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086065151 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066999619 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099182529 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077535036 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099543008 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079066188 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131587768 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097959174 seconds)
  done (took 6.237477147 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.748737601 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110168951 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094048898 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.812769078 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089031537 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104789756 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.714951363 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117631461 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208641322 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.774171585 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088976571 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098774827 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.182773218 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.21633085 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94196016 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288238399 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.636593422 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104647975 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109290999 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.133409687 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13978749 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177966059 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15101385 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.401174129 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075758525 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092267151 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138405932 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075546119 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138843061 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105482055 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09339451 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155742714 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.227952583 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156973021 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096301206 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070331573 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090941869 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149118198 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.22307848 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194784488 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15798189 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068855814 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090447996 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141460607 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131761558 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068719905 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14036676 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152724385 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169274707 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074119909 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074406273 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.162961806 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138853334 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142279611 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101128179 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.275834346 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286735855 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069427025 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119649717 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10279049 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217194939 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103607036 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20081257 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140788001 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.17025791 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090610956 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.732284744 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149333713 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091128632 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075083207 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119310555 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073941496 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.159451635 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.123857671 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370096185 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142224772 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095423749 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069664902 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218974973 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084182992 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091125044 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141692918 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07611537 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122101474 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143756474 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164132303 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.148825685 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.215145646 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143019971 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138877848 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094494741 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123917594 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076260679 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19042681 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196468439 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.141158804 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.18853155 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139053551 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162587266 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147855635 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077255637 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.151527698 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118695983 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09976994 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140195323 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19331144 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102999121 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104281948 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072507352 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.160349859 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.105611278 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107613198 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.14051261 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149528883 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.451437507 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.148816033 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067954651 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107410082 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140660114 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.141847414 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095412048 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214993718 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123222441 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.14724732 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121243641 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067592324 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119582831 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141161716 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099780454 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122002984 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138371223 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097752402 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.213903003 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.17159525 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098060352 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195029024 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164139774 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095138016 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149299786 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120020983 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145925757 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078132318 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138119541 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096358278 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743567964 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.164092437 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100689219 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094641467 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16356419 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071207435 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10269971 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083410547 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08982463 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.72801555 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106756214 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07968006 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104417649 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074759282 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121473526 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136200202 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094778934 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139606498 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202323252 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075488504 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119099301 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103461495 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140497733 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075450493 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104636176 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103282043 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084166299 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123060472 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072117295 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105167976 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147470151 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140788723 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.194341461 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542967809 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091652241 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082278403 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202868989 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069564738 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.267127132 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137273066 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.200587325 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141523486 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100105202 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.259685809 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142106237 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.165594564 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106085702 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152964931 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067756598 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135920623 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164895794 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071369622 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09502262 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142400107 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146104415 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141900156 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.938631058 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07078859 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203600958 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089623513 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151029303 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075442156 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097685651 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27259907 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071643841 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149557067 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143613208 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094418005 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082674052 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.693773492 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084348858 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138313622 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095347977 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.195512805 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.145630223 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141411509 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140430197 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097149049 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.141992742 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186773702 seconds)
  done (took 40.420887766 seconds)
done (took 57.746671277 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260150657 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178086811 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.244101624 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14528973 seconds)
  done (took 1.800019944 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144069408 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106652817 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118039093 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085941022 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102932679 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086305084 seconds)
  done (took 1.543585337 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.408036257 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266434796 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231280781 seconds)
  done (took 1.807799917 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262113921 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213159963 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.449243339 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299626031 seconds)
  done (took 2.254897257 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176394428 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114438368 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067065316 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10608452 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159659 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254217636 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127985322 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188263462 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079257435 seconds)
  done (took 2.224442701 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199144163 seconds)
done (took 10.735887984 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099113815 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.211036167 seconds)
    (3/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083002104 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.215723594 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.257159136 seconds)
    (6/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.203076477 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.137875235 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104831774 seconds)
    (9/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089955043 seconds)
    (10/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.219085467 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.2004801 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078175135 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.195425853 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07663856 seconds)
    (15/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.22760207 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074173939 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129811726 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.191855314 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191134995 seconds)
    (20/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105189695 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095156724 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.121308664 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.180423586 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.220019917 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.150551083 seconds)
    (26/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077268799 seconds)
    (27/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.1897196 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06681005 seconds)
    (29/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097600128 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.097023092 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.172794492 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117522473 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066097742 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066694078 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09449357 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100541195 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.099534818 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.178006712 seconds)
    (39/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.156013561 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.19715187 seconds)
    (41/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050981891 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113938629 seconds)
    (43/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070181018 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.11407211 seconds)
    (45/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072706352 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099783534 seconds)
    (47/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.1862482 seconds)
    (48/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.218399104 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111248285 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159127062 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07255995 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169137731 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.211838327 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073314625 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.190143995 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074231976 seconds)
    (57/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.120089493 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074189627 seconds)
    (59/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.199797682 seconds)
    (60/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.072533222 seconds)
    (61/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089399878 seconds)
    (62/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051802965 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097093647 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.189750882 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177582806 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087928948 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.131961542 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091631818 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074457235 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05150904 seconds)
    (71/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.07475956 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102558953 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094755148 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074026648 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200351917 seconds)
    (76/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077006485 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097017452 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.135716223 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.158375492 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118848033 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053290287 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067468789 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195756741 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.175005771 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052169699 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.117878026 seconds)
    (87/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052946114 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076568329 seconds)
    (89/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.106457608 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068506411 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072376998 seconds)
    (92/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07524166 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07423194 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094348801 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066163027 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.190839016 seconds)
    (97/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073091867 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067170237 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084992264 seconds)
    (100/309) benchmarking ("sort", Int64, false)...
    done (took 0.067028429 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.152418579 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.179613578 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.169648441 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.10000174 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052205194 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066205898 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.102330548 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09013783 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112251215 seconds)
    (110/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080329135 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.184705837 seconds)
    (112/309) benchmarking ("sort", Float64, false)...
    done (took 0.147954914 seconds)
    (113/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118239501 seconds)
    (114/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114068475 seconds)
    (115/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099893836 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093966877 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052421804 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099260669 seconds)
    (119/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158558572 seconds)
    (120/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.158108876 seconds)
    (121/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170316012 seconds)
    (122/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099611572 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.144164753 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.089682885 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071789579 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095804569 seconds)
    (127/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05267626 seconds)
    (128/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.136552002 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.073658253 seconds)
    (130/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071746985 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095281693 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053330159 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164151184 seconds)
    (134/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05297326 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091997571 seconds)
    (136/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.122925983 seconds)
    (137/309) benchmarking ("sort", Float32, false)...
    done (took 0.127701468 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166343735 seconds)
    (139/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062461962 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087920623 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09914143 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088275616 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07565223 seconds)
    (144/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.130790303 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06598913 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095476359 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115570579 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.187597504 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072168964 seconds)
    (150/309) benchmarking ("sort", Bool, false)...
    done (took 0.159733677 seconds)
    (151/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073992635 seconds)
    (152/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158859575 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073362738 seconds)
    (154/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.098602603 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072590268 seconds)
    (156/309) benchmarking ("sort", Int8, false)...
    done (took 0.165669898 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091824622 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07388251 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.124752581 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053987351 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066965464 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075098265 seconds)
    (163/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074348344 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065975066 seconds)
    (165/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.085203817 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052195644 seconds)
    (167/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073788092 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.170659326 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065188943 seconds)
    (170/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.091119982 seconds)
    (171/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.098046004 seconds)
    (172/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095615853 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054647697 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077370796 seconds)
    (175/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.136335491 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074520451 seconds)
    (177/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088058957 seconds)
    (178/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074452374 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.166827781 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067592977 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094335174 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051404717 seconds)
    (183/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075807847 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.149015037 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052321116 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051012653 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089661829 seconds)
    (188/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06889233 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.309459185 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.142038953 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.092287575 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05371602 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092399691 seconds)
    (194/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.099206919 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067262954 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.137104648 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068098051 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089344138 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076391984 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144785846 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053361514 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074939501 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090025165 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068331292 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069636244 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139882682 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051526586 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200969773 seconds)
    (209/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09824316 seconds)
    (210/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053241001 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052150732 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.129892614 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088334803 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051788753 seconds)
    (215/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084092917 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066433605 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079523163 seconds)
    (218/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.122327175 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065650974 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.074114437 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066547039 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053887295 seconds)
    (223/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102989947 seconds)
    (224/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.145751204 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08961218 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074270127 seconds)
    (227/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051847009 seconds)
    (228/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087272305 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05213275 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051516859 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.083380471 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074860999 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073924891 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110975192 seconds)
    (235/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063460986 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052701704 seconds)
    (237/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.08320258 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171904295 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096976507 seconds)
    (240/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069715769 seconds)
    (241/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103871654 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051863074 seconds)
    (243/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062211974 seconds)
    (244/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093575272 seconds)
    (245/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.133091666 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088521956 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090614016 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072894183 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091215936 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051942226 seconds)
    (251/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064544426 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120106666 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073263937 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075472494 seconds)
    (255/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052283558 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162841694 seconds)
    (257/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061532888 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078857431 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112299048 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067252117 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090261307 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067333224 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127717339 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06632508 seconds)
    (265/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210262179 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051796221 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.074245901 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072837596 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070539493 seconds)
    (270/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113017924 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074923574 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.075308053 seconds)
    (273/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068606356 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074592769 seconds)
    (275/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095430463 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133808279 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102663 seconds)
    (278/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074377322 seconds)
    (279/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.0514485 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.159651519 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.114699865 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090385076 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090267438 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069044327 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053975752 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.166630554 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066519795 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110910235 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067783031 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096819319 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064791288 seconds)
    (292/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062497076 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156963153 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065664899 seconds)
    (295/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051401656 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097407453 seconds)
    (297/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071083202 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071458247 seconds)
    (299/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102233775 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091015598 seconds)
    (301/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.074421481 seconds)
    (302/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051668101 seconds)
    (303/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052032717 seconds)
    (304/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.085769547 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090818366 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095809564 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.103661831 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052939128 seconds)
    (309/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079096327 seconds)
  done (took 33.16650771 seconds)
done (took 34.08257216 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081987333 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11513797 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075023299 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.115452507 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081053259 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10182196 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073068223 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079692864 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104310045 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083170283 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102325555 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055470609 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098249726 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076623656 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098378353 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093226517 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103030456 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072882955 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07520656 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088493186 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074959625 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088446988 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068281405 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05535323 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100442951 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073187868 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073178591 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.09800181 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066602259 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088816083 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068934015 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07383671 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088443943 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079510856 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09455252 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074426216 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076141994 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099518987 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068333923 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088836552 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074091055 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066342688 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095149149 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074343774 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07258225 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093690608 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074118233 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102943569 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093015767 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092101929 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074793284 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099776495 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077413507 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073304545 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092814677 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075049482 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093697042 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093029732 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09720956 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068465513 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074810971 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098059895 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07238675 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096802099 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074330745 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076716316 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098748996 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072161362 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098165433 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07156583 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065777911 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09731566 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070353657 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066012858 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099134061 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077904899 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08766125 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07221455 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072699932 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094783539 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066253364 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067789702 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090757168 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073079813 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09080402 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054996947 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070788131 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095290473 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06564998 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074809078 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095365671 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073275788 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068208767 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099939584 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066656971 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094546444 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066826493 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067170717 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090622669 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070559222 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066712531 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091753582 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075391445 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090964807 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072511258 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081005101 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089381639 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073259527 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087960792 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065922936 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082699968 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099496203 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067562711 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091680959 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066558407 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073779782 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088365978 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066656262 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066467824 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090217993 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072223187 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066372906 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091933755 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073916098 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102969724 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066152357 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070479988 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091216211 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066792895 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072152445 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089446047 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066765961 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068630845 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087376587 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069264096 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089244014 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073968594 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068565513 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096519902 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068371174 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097791155 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071161247 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072495035 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094334491 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064860542 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059907344 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091521268 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06868698 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068193314 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089979346 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068396908 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066051234 seconds)
done (took 13.258609571 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066835027 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170476679 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127485428 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096465963 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111039461 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06743276 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.100370566 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104212168 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091050932 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12835441 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088330985 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108394522 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114829232 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088723253 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067320423 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071209507 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090599264 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08999117 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125036443 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086553157 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140929203 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088233244 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121963534 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091339272 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112991181 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104551999 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090076437 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071513627 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069249934 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116479633 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110332196 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070336578 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067861202 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123727554 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121737787 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085885409 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08999723 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085551047 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089512325 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066449053 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115465322 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10119723 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105252514 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083388934 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09338792 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069929085 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090608202 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087239335 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114382247 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081821878 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112285877 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134745907 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069283788 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106530253 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.0658468 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111591903 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105184539 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069566298 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067324176 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092176789 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065941973 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070683066 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11234409 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117550619 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070104562 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105644573 seconds)
  done (took 7.294924624 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085850815 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118046285 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085552401 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108959654 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066411298 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067871173 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090775242 seconds)
  done (took 1.59605072 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067801477 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088883009 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113129586 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089965424 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110005845 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088106877 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100209552 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067610195 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108407491 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068272633 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088412226 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12805341 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068533793 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097590429 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091388872 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090754559 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092333541 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0906498 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07059042 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11498312 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07152332 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088174003 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093024059 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067656989 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10606574 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068121006 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139828728 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07261888 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092459822 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071009358 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065595019 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14212525 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104988628 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078505486 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067606178 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10589828 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082690591 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088953118 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084954208 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096195565 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082065859 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068587914 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092122397 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066000162 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072249324 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101827722 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069108435 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091599569 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070907036 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087741392 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09147078 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082122396 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091031173 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071983436 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069162806 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097044055 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078150829 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092192903 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088138667 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069674157 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108504886 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084176279 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105237377 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084073199 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093980312 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081719346 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105645621 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070943888 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069642449 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094234502 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084908749 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089121318 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069605459 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078758822 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092393489 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091415367 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114153015 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069365878 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101410605 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067968066 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068066389 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091922881 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091899812 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094614567 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068380004 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07200571 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094976197 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066014292 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06730825 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094672029 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066514797 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092179769 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071111334 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068114348 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093753783 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084989076 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068525406 seconds)
  done (took 9.345845172 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069397029 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069235692 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093333708 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068675686 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069252884 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092500244 seconds)
  done (took 1.451780318 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098730777 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093664525 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082301998 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097050252 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106846554 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106074082 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083660383 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10771148 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085843864 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103243734 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083227754 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106725357 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088910311 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097830067 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082792285 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096379141 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083348897 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10081985 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080527075 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098543901 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089232398 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098297102 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075235805 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083878104 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09528067 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073500404 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10092431 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080046108 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103292127 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084276736 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097370642 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071843222 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096458806 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083754342 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106728345 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072647123 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097195374 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072477795 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101427979 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071256315 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107724669 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074480358 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07926784 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095673078 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107440802 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072930912 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072503986 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100938418 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082938654 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096099538 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072715669 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096274116 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072091079 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096221949 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072703501 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107415723 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072308812 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107557359 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073907092 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073229689 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094994031 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071954363 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107560168 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071549083 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105325701 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072393887 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095770321 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074549759 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098138862 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073222112 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072653414 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093930155 seconds)
  done (took 7.391201993 seconds)
done (took 28.050437876 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.659053221 seconds)
  done (took 1.642055202 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.772645123 seconds)
  done (took 1.75898652 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.896907352 seconds)
  done (took 15.887798571 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.627799601 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.791296499 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.833670651 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137022053 seconds)
  done (took 3.376158993 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.88714023 seconds)
  done (took 1.902629654 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237204017 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226411955 seconds)
  done (took 1.459021237 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.735254746 seconds)
  done (took 1.736055892 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.290571152 seconds)
  done (took 2.283497019 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32326714 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182735931 seconds)
  done (took 1.50710863 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.519143723 seconds)
  done (took 1.520057041 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.611866429 seconds)
  done (took 7.61721928 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229443128 seconds)
  done (took 1.246417328 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.26981615 seconds)
  done (took 1.275417099 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.174719676 seconds)
  done (took 4.181537869 seconds)
done (took 48.386103321 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077783191 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081896344 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105211564 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079576966 seconds)
  done (took 1.345613604 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078316276 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073537472 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101323491 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073026257 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101617603 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073251486 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.09963321 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077705988 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073726753 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097876158 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073995965 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096271115 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076257307 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09947932 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070498897 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076300759 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100794802 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073872522 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100060349 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074911315 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071536615 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099107138 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076915405 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09664442 seconds)
  done (took 3.051113062 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07769996 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073472291 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098466515 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07317414 seconds)
  done (took 1.33262781 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077239499 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116804779 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089790064 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101960348 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092706644 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11140757 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070348805 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069898333 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096471433 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080313037 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09254673 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098208559 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112577241 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078104447 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103647695 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067015674 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069477837 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111499367 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078499371 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101999495 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071895349 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077608924 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092383412 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091308119 seconds)
  done (took 3.169185033 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077857086 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104659818 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103553818 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090328625 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116996905 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065864678 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101660983 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092564057 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149800944 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066012193 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094898027 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066965904 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097925659 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066037954 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077787742 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133111564 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113014469 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093175741 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098377338 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.090505884 seconds)
  done (took 2.920181046 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075399864 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070334604 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09019893 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069134805 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076766211 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09739737 seconds)
  done (took 1.495910665 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069089299 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067836639 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091903042 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067344964 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071796907 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091420246 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06656459 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06793802 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09206345 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068054949 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066986793 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090114263 seconds)
  done (took 1.927169538 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.423444471 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069004749 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092696761 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066546297 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071779775 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091144593 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080811553 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068651026 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116003533 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067175453 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092756089 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069609616 seconds)
  done (took 2.329608668 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264986007 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07866305 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328624992 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169957753 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142256252 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156305294 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105886049 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140288098 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199848698 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139490364 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205270632 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230878617 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138193815 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174831155 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116391209 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108428896 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212993422 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223973771 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105722134 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225757322 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20873435 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158790521 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184948359 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129919475 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136453741 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153316098 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072518087 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106553268 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234978654 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162628391 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203341043 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140317184 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098392075 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233446312 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231157743 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199764375 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164594107 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085357526 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158473959 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165941649 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257950837 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114487821 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194383488 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134589589 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106204638 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174329386 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147650322 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147447337 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138731237 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115516843 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174102267 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242386812 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165210174 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112270935 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138491318 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143263642 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144325439 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103790372 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242996916 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21915142 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158128452 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096112716 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098671611 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213058266 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160996871 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142363146 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155717892 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119644115 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169622419 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212321683 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146461908 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176432773 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181225194 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08921132 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148244236 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196191167 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157806838 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20530778 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178824597 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074366654 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154205571 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132332815 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083468899 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170271821 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077075813 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235268398 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125225803 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140050596 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140552759 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138151274 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112164976 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221402384 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204075627 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10562467 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09172954 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13174341 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150190715 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178250983 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114150745 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135976496 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14852929 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080523747 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167916809 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.10065845 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155870407 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079785247 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178797363 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166236268 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077321642 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154458939 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129137737 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12891369 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16426555 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221400506 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09161277 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10846775 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20164442 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180896451 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108174546 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201211102 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191112623 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128745858 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130117531 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207862973 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249452007 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093657251 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224848802 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136259002 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084735952 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114629499 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156003627 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141320217 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150119334 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084577324 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179457898 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203174024 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100251427 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097197235 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191329589 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082650721 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108226218 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142161475 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128720473 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096877347 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128203463 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135027929 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171076756 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155477545 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134233686 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155143602 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126633943 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228679887 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115019334 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132010611 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105620182 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095336903 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166695286 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193296667 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105979385 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228093827 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155458894 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132103666 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148245177 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084354553 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169850231 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104729854 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071751079 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200816328 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139465418 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111750994 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210240005 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130938358 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156329852 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152521315 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163021811 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160701077 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.187838819 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108774373 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113198559 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140891782 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154709068 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09943015 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09669019 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109377664 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131794013 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12333661 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084527868 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173328193 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182396536 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10003621 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139886458 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123914483 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179682989 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102838905 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160318515 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148443083 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121004133 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186557657 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214017831 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166100582 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127952985 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175734577 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097461072 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075585399 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117230879 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156885067 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109994577 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085075684 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146628173 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20489868 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158318165 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169255859 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138856291 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150984397 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187303367 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097158538 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117835844 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205103394 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155024547 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156426367 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091940423 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125653192 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176170803 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135404078 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247007858 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143302214 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156110317 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208796225 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130964195 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081614003 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130612955 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167698447 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133118994 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208245529 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127282501 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090527977 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138247221 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107552892 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13167373 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158133123 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150061023 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1640546 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145471098 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188428744 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07870767 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145055647 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151989686 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152312765 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.09029125 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149678068 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220864569 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097206859 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146623838 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213709643 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081627322 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157318364 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240185687 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201149798 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08610495 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138406874 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150145951 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160233656 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150466834 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202916038 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143680656 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170393564 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140636371 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08884654 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115025332 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099414753 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134075259 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122056219 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140057598 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145838468 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121257013 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161937926 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13997221 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139760277 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148085424 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099189341 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118161018 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124962042 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209883863 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150433578 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239425474 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.133578843 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.214457286 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208387282 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106053932 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083433924 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110890863 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17723084 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116025805 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168257763 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124489615 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107675377 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159713322 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2034614 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100453886 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098868322 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141976398 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171136626 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141865376 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125718816 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108699207 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22432911 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13199676 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080460576 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154123729 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132906063 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131913006 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238298426 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063239583 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126127717 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076550782 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10719126 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159019429 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220534425 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086731057 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158654631 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153635737 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154916705 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165123901 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135171464 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10222364 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14506132 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214890297 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164251251 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121566986 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118572787 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191681792 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196323917 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13895535 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128319193 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240757434 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192840207 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232616782 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.121035519 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150113078 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148908218 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114398188 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224286566 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114413161 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208061992 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11401336 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174467444 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138527034 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125197001 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165097417 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12968831 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118922109 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187569036 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155034654 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113284163 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083708329 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151940997 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157066406 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139481456 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.106580192 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17566273 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076895477 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201911612 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209788244 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113329969 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140311825 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128200113 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085982253 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143093858 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136851995 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118003897 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.126884221 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238569213 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122982606 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189548461 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206209401 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14792522 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173482806 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132205061 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669743963 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082283878 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221248546 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152169488 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248753672 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129887165 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154916641 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143748539 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158576113 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182332515 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137194871 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209963967 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169355944 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156157785 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108874364 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134951031 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144808301 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095712499 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137646861 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145650978 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148487985 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132031658 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153307233 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157028535 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110681456 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096982308 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218621418 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147304662 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202845732 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177880958 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088852185 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151378514 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202784904 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083202213 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.184686856 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196650112 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141190508 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132215875 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084971596 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138579022 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240617562 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103661618 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203198143 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162347663 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144040214 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147223818 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.179096586 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167957995 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139029992 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15911485 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124000541 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.144435087 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148594712 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088915223 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.109720671 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136858179 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144063908 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10077356 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131203146 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145811653 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185551961 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098237405 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099060744 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131885975 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204164274 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216303337 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117041899 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110808693 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15080412 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143654937 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149256322 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156636943 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083871648 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112616995 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110433167 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.114077553 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138723494 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14364187 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131771367 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11411148 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235054458 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.116126295 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.25765419 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099834792 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139005411 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070653042 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107492583 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125808242 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102937398 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141548046 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130057156 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241362088 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100824444 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118690385 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121456123 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07419168 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110549341 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161183648 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139837488 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151663723 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126641929 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064113749 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13885927 seconds)
  done (took 72.456279893 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131924155 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10329702 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117324054 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172154573 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14562644 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239150631 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181474977 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224215718 seconds)
  done (took 2.417024897 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069495935 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116990352 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10295045 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117158136 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089711872 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068485055 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.301510313 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110291431 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06698271 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11574812 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.121137545 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091889142 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.471508092 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065967983 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09423731 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084795954 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067863401 seconds)
  done (took 3.250440108 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.433069405 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.64668415 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452201673 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07290629 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.904446348 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.106573082 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.426587235 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162851415 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092002737 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.432430889 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728296812 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.1538712 seconds)
  done (took 17.713844492 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074631436 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069680402 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110377816 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083703647 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100081289 seconds)
  done (took 1.543971217 seconds)
done (took 115.958853319 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079415116 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.347737139 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053300052 seconds)
  done (took 1.537476069 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08373306 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08607726 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111994659 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083857627 seconds)
  done (took 1.477657248 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075068693 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077198353 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111229357 seconds)
  done (took 1.374718062 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.28176948 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16604021 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.0895166 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082580475 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077954555 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104869979 seconds)
  done (took 1.377321048 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073223408 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075651907 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100054869 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076795993 seconds)
  done (took 1.431421753 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075974613 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054545728 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056524229 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084281033 seconds)
  done (took 1.382140364 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090051954 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105981688 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081145059 seconds)
  done (took 1.386111137 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107706991 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113642581 seconds)
  done (took 1.332602801 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081957809 seconds)
  done (took 1.188715932 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091409725 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141054666 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156838358 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137937772 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167691148 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138016542 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08739806 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115206722 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104704282 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089421815 seconds)
  done (took 2.341731965 seconds)
done (took 16.548730307 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077582454 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.488259119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360437452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117593904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669287246 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357389134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030167839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12079292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126562796 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096891202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086222575 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679225227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.9945309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.442995854 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983393236 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32685999 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680235254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070145363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067588678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094241795 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.987079426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094286941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067712393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068232402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675671155 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372348556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094540341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324324373 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068321742 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096499964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355579736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094912359 seconds)
  done (took 16.27391615 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070167898 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145256999 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07402647 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083632567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097207006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070170804 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099002217 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069184808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154055552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067781229 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111621496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06839253 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098255696 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068876938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086577869 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095244691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069358631 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068768924 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095513441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069043764 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112803767 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067798153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068548927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094913231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069040861 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107111648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06854226 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067965233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094933449 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069787324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097437726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069159567 seconds)
  done (took 3.86326603 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114749953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152597526 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074176726 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129421028 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114149163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09732819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171628864 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093113875 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156274385 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068973857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111771367 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068089612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127332488 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069772356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114361682 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068357806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069529004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09543127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068916405 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095715008 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087146692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094552186 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068916242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069085005 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095384124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081665409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094961143 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068728388 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068944275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096899489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072026548 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095795353 seconds)
  done (took 4.177505867 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072880831 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075775335 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11024124 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083498141 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096788995 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072642977 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073046915 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096915066 seconds)
  done (took 1.797341332 seconds)
done (took 27.228135438 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079574174 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072088915 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101585416 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082213853 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100916557 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080194298 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06859139 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103443539 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078012355 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073318099 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10351589 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069240551 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098512359 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068484562 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.0748044 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09522102 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079291464 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098898469 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079006735 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080531494 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097303593 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07738678 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101366778 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080091518 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106906629 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079551741 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083207334 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100314196 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069983128 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097558658 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076784934 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084970184 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096076114 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080690017 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09571711 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068479364 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068588864 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09542721 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080377278 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102271213 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072014989 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104589437 seconds)
  done (took 4.717744293 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089219163 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094812422 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118112919 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067963265 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102935912 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06768286 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.121099916 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066454249 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061593172 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121153219 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05777434 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061976203 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.093752998 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055252273 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060451221 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058294395 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089163713 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056619188 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059902823 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087342454 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057789353 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054970187 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087426605 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062943958 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059824739 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.088866972 seconds)
  done (took 3.128102623 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075136554 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084417721 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114757801 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128352792 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133529932 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077454769 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105854391 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087882427 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113439345 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067363962 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071868484 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.12359199 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087793835 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101917859 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068158712 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112495275 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082791269 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070105 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102090873 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090187985 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112292863 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078611787 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119944883 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081348699 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066944999 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09815234 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071852725 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109031321 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07368226 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078033013 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.108669227 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072319664 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097364678 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079467951 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.099610263 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069882833 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090589074 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105318595 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077908362 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.096103242 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071803229 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068602161 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116229185 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112136338 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09577987 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075218584 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.102796056 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077194478 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068066727 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113790311 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077179229 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094860165 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070935785 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067461773 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095603709 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081378279 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070443208 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097734402 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077195852 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099088136 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080014065 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071837032 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111397648 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06770684 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103060705 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067412193 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068262465 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094968971 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091400318 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096861934 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109045727 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099692456 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070908684 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.0794934 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.107987373 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076913699 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100133897 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086283187 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080391805 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.103181049 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079775004 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102553783 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073351841 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089912551 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09930657 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070476826 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069027092 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102716618 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070962445 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097788969 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082057278 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070350941 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.10243853 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088730831 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.099095364 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072245656 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076803594 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.105240686 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069092139 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112456595 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074899589 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100545994 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079742224 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070642145 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.103461159 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08028765 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.10398475 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069074187 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074233513 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.104720932 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069920388 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070856686 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098618659 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069987872 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105470215 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07353777 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072654947 seconds)
  done (took 11.471266947 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192180712 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.185652932 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070768926 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179557498 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076753815 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108606417 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180205847 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095608816 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098739205 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06821345 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069469624 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.132133679 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124986202 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106352042 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106280363 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06884099 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115577267 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.103753249 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183567504 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.180827429 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120145872 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07918216 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072700592 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.102550333 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071795782 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080538747 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.120039182 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076259747 seconds)
  done (took 4.310632365 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08409939 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.134852005 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076281806 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091929734 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.124440376 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070615231 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.106211218 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071591103 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.113811929 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082491359 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100170762 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07659347 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.0771189 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.11182078 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.0712874 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.111498098 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081078013 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071983903 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10354795 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076499131 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.110790653 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083578669 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104279166 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070400206 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077577127 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.100264575 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066669201 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116145036 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06780728 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11953241 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066612472 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074927229 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.112118007 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068757339 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096542618 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071248982 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071346294 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.10100098 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070068227 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065912383 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095966641 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057708874 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067122786 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10942692 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074077806 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088954092 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074137085 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072933915 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101035578 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065823461 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099798771 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070991768 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070295819 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106033876 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072875539 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073399089 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100822284 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066107133 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104016168 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071940006 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064386747 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095483415 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073078148 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067337384 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103828444 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072126858 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095850375 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071348333 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073402043 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10375016 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071093753 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07122478 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094363069 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070678181 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101962596 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07333604 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072126226 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096800534 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067909715 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069018255 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084871459 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068625595 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054667792 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102201958 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06812404 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069355242 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.103583242 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076140883 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.115026213 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072586661 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107018644 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070942508 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069551992 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.104145552 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066085164 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073642925 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.117370529 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115267972 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070853784 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068462175 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.116241197 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074687572 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06988206 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.088985056 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07710943 seconds)
  done (took 10.057809756 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099456634 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095479995 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.103398462 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086355683 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.129146797 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09650596 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108624981 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076980139 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072860823 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118511958 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069997076 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109137061 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071327422 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080025069 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.131121027 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077872074 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103271338 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079529956 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074733088 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.142296772 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.0859308 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.115022297 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083207262 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.101332171 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075025456 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082903098 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.130111271 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082395932 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111688821 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086811662 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081575762 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12762931 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086560908 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103319525 seconds)
  done (took 4.433034089 seconds)
done (took 39.236748354 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.217315539 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.414958347 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.194413802 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.088080378 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.220786161 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.23161246 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.204650723 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200361329 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.381146632 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.200392162 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.464139182 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.822275403 seconds)
done (took 58.782100979 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.204680757 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.336944844 seconds)
    (2/2) benchmarking "String"...
    done (took 1.461789667 seconds)
  done (took 3.937613266 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.552818358 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.093462752 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.451383045 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.194283524 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.203564525 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.491770606 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.79468645 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.049658841 seconds)
  done (took 27.418395811 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.204205869 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.549064131 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.560049774 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.55950784 seconds)
  done (took 18.007608069 seconds)
done (took 59.263570226 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.1879583 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.241556922 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.206190537 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178409631 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.30742554 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.232621829 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.473475508 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.400712339 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.195352066 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.18712434 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.216620718 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204953708 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.193267514 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.505050363 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.201214409 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.197672717 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.243414316 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.709035038 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.58961035 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.202518784 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.235544611 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.225324955 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.203099656 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.199300377 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.241406503 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.190260289 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194953316 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.200898431 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.431724906 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.202908841 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.280857114 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.694893344 seconds)
  done (took 191.308531165 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.196663299 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.092097516 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.221510435 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.225022373 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.592457792 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.375056321 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.3288088 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.744896083 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.218856652 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.218277356 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.54390016 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.196574824 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.578028954 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164881099 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.206610938 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.277482997 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.407201755 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.577788224 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.216385251 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.468085918 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.22031991 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.373752847 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.28851568 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.487103598 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.195217321 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.208408604 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.206191117 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.205776878 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.393926644 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.347218282 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.214178964 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.241495774 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.772280999 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.059330602 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.224556131 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.208769807 seconds)
  done (took 149.639129065 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.473577547 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.200876697 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193231183 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198471139 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231429723 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.201225349 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.731027183 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.733698658 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.702906747 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.586016463 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.258827236 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.421659708 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.1991491 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296884654 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.206013215 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193885389 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211671847 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.222500816 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206010557 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197256397 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.732680415 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20974568 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.297774486 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205152546 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.199745781 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229887527 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588836903 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199019678 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226432976 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.517631092 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243562779 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199915279 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.500040206 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.362026346 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30690816 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201642253 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230321824 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.200999044 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.467476203 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.19601331 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199952972 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200238202 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203499169 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.786473939 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202994224 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.733084882 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204892236 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.084697993 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.19409512 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195363059 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.579067217 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.704447272 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.197707617 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200445021 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.200254676 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.202325971 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.203694913 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199650114 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.230926334 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.530584555 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.303257719 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.200152082 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.20493726 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229408412 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.199919177 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.441350124 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197656751 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.390571601 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.257525108 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.303700625 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.735556137 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204085478 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297527623 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318461315 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202136027 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203786014 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20390669 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200418822 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.308243887 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.202005213 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.596896309 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208413087 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.203995152 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.259318098 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.202415112 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295795089 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199895541 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.508573079 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.206839633 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.20222183 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.893242359 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.201887132 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2941419 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202307661 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20223151 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20286408 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.594715386 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.7366643 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.387991275 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.202221606 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.548213629 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.205478108 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.606748872 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.734586266 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.803289818 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.201057456 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311233298 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206272693 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.204820263 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.20194771 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.230160366 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.202609519 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260875001 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201769402 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598129282 seconds)
  done (took 344.837429751 seconds)
done (took 688.39662274 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.858934462 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.849369186 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.958155719 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.844886967 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.82916938 seconds)
  done (took 10.487799152 seconds)
done (took 11.634095084 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.383030548 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384727566 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261094802 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.384473861 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232402901 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.40306304 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360488706 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.219823141 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302334176 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.277778132 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.300601307 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253279758 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23437399 seconds)
  done (took 18.143425486 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517600656 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.537499525 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272191612 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511556078 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249454076 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.539061113 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403821326 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.403475437 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392616359 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224628098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221855525 seconds)
  done (took 16.423502813 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510924189 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.509732218 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276445946 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.518463868 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244841465 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509925658 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40379857 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.407122085 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.393466714 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.219067492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220443106 seconds)
  done (took 16.365945154 seconds)
done (took 52.080157315 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.214016241 seconds)
  done (took 2.36403773 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248731805 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408721721 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.230416433 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.218904096 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.216398071 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.216185756 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.222759253 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.21905503 seconds)
  done (took 11.132439852 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.215706434 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.21278954 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21453117 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212954559 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.213893923 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.217382515 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.21605931 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.214315145 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.215311518 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.209964119 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216531738 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218810243 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.217963783 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21703758 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.214916254 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211868917 seconds)
  done (took 20.592267214 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.214402847 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213832694 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.212704356 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.213864184 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.213533602 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.213117635 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213530234 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212844577 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.213256106 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.212228414 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.214721244 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213575968 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.214061536 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.213691603 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.212691277 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211359257 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.2112415 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.212598209 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215880469 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.212596023 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21246161 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.211127848 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.211378547 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210669445 seconds)
  done (took 30.26492207 seconds)
done (took 65.50301128 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.270708274 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.826991305 seconds)
  done (took 9.245981191 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.21212116 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212923795 seconds)
  done (took 3.576972562 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.211368939 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213352354 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213839329 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213028796 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211674987 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212607967 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.212809313 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213114228 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212180083 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.212676745 seconds)
  done (took 13.274940433 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.21189772 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212294488 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209572028 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214074833 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213248394 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209011572 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.213100902 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.212256706 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.212630851 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209760287 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212563126 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.210221049 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.21237317 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210599672 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.211848919 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210143695 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209992454 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210173036 seconds)
  done (took 22.955697474 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.210802967 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212943879 seconds)
  done (took 3.570936045 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.208645047 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209996311 seconds)
    (3/7) benchmarking "month"...
    done (took 1.209532149 seconds)
    (4/7) benchmarking "year"...
    done (took 1.210239543 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.210749956 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.209988247 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.20987407 seconds)
  done (took 9.61664956 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212006276 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.38213814 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.45774841 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813369318 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213562239 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.2163465 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.023312215 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.21717803 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.219976581 seconds)
  done (took 13.903729305 seconds)
done (took 77.29391991 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.213449262 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.208982473 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.093774748 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.225590643 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.221008985 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.502646673 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.243089 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.328325763 seconds)
done (took 37.185650843 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.221536468 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.918063847 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.918451164 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.218210816 seconds)
  done (took 11.204413953 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.188621084 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.121786882 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.208621293 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.187612726 seconds)
  done (took 17.858025505 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.799598658 seconds)
    (2/2) benchmarking "read"...
    done (took 1.536897525 seconds)
  done (took 4.484203295 seconds)
done (took 40.916797507 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212886296 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212899007 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.212132837 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.210510049 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.213231528 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.211641141 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.210354342 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214298461 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.213685718 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.213959191 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215061297 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.21548946 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.212602589 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21363821 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.211367109 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21188176 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212729963 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214342169 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.211309902 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21184638 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212867157 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212800512 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.210937216 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210586214 seconds)
  done (took 30.253338668 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21290463 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.212751153 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214309555 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.214101136 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211494295 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21346021 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213558325 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.211165024 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.213656115 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.214236837 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211499885 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211778665 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215179115 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211674413 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215195147 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.211712398 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.214333292 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21310566 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213585748 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.212646944 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.215020922 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211056508 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210783392 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214921635 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210988769 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211233006 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214465555 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.212845574 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21491374 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.2129918 seconds)
  done (took 37.54238158 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.218917841 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.221864762 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.216263777 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215274888 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215541733 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215199231 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.214159001 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.214538992 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214377835 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214404185 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213551891 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214312644 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.215072277 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.214904992 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214097822 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215114158 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214889354 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213998259 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.214823946 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214998986 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214747266 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217136657 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.215927492 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215658941 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21522785 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.214762697 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214626084 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214334559 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214826928 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214819286 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.215912578 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.213659148 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214504228 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.214983832 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216113894 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.215437134 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220267806 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221330391 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.215711832 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.214178366 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214157783 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.213152693 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.215005175 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214338355 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215561581 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215272323 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.215200913 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.21589327 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21509297 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216010287 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.21679391 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.216450082 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.215688297 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.216563414 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.216607388 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215527697 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.21657952 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216403936 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217548133 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216496474 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.216839588 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216128328 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.21577695 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.217664572 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218862168 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216436124 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.217031129 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216959825 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.21659154 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.216868261 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217377659 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219420066 seconds)
  done (took 88.693918535 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.216028878 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214548958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215091333 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215287507 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215191415 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217128437 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.21498807 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218327343 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21778265 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218830181 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219309959 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215538276 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216507245 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219293432 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218918706 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214000096 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216457756 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214542946 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.21720345 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218137816 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217222347 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216601069 seconds)
  done (took 27.91893724 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216927948 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218449793 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217548929 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217842802 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2168286 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218797907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219099952 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219068795 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218742215 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216917865 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217277478 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21914748 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217241592 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217338621 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21655 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215887856 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21926741 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218307609 seconds)
  done (took 23.073085158 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215405015 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.218368805 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217729383 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215205309 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.215496003 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219018771 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217374288 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218791932 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.217668965 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217787347 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220940487 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219989966 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219220013 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216124522 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217858293 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216659713 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.218599583 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215026136 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220874578 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217097321 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214674044 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21902349 seconds)
  done (took 27.943684249 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216855642 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219236913 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217093482 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.217540593 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217637408 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221413829 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221023527 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.216889478 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220388487 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219302506 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218630957 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218234131 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.214815463 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216246419 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.21510354 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21558098 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219196038 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217494651 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216598555 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216183548 seconds)
  done (took 25.508226345 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217111597 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218718218 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220629992 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22099888 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219261601 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.219561801 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22121795 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.217339027 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.218782973 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.219151692 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.219756975 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221581946 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219759129 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.219217362 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220547039 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2198762 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220797908 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218657249 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.21808294 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217844438 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.218463599 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220802864 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217440441 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.218711041 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221724527 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219958486 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220667476 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221069179 seconds)
  done (took 35.302174027 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21921147 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.21923366 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.21855673 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.216235403 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.217859657 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.217744434 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.217562737 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.217203387 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220868848 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217671744 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.220296858 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.21901372 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219308838 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.219046009 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220027873 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.215952396 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221062398 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.216228644 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217700378 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218303927 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22074545 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222650504 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.218474398 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217521135 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216323505 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.218326914 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220317309 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220157036 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21729429 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217600901 seconds)
  done (took 37.712779532 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.237889577 seconds)
    (2/2) benchmarking "in"...
    done (took 1.239071209 seconds)
  done (took 3.631268335 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.216919269 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221687533 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.221177058 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218511593 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219172521 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220134765 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216649673 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219303625 seconds)
  done (took 10.908412547 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.218930492 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.223541647 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.221384073 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.219329137 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.221038662 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.221026925 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226739963 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.236026348 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.221521695 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.220042255 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.22541231 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.226860435 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.221306826 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.220829528 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.221915357 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22388014 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.22442387 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.223758259 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.221235145 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.221166985 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.220929066 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222436956 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221000076 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.215666643 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.219098664 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.232530407 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.22695591 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.22130474 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.216861031 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.227760402 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.217988289 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.215753218 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.221647175 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.222298078 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.223331069 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.219795526 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230948403 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231446418 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.22860142 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.221673847 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.223216991 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.219831436 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.221694254 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.223527804 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223913479 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.222488459 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.223727148 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.220511485 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.222100331 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.224165596 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.225249981 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217356732 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.220448996 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225601974 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224178222 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228734318 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.239127142 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.226843156 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.229038823 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.233553429 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.236495174 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.23089182 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22608305 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.223949463 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230397024 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.247891457 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230451712 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.232524803 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.223464198 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.225731265 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.226506072 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236194934 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.234184151 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.224984275 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221691375 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.219256203 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2221328 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22781321 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231471595 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.243577206 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.223234638 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224025785 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231729582 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247535386 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.220832124 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.224582915 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.226141838 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.224408982 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.226209269 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236355166 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.241249941 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.225979458 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.225125054 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.220581059 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.226113987 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.225956822 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.223390401 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226635254 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.22629448 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.222299694 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223501785 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.227768303 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.233765775 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.224323627 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.225937958 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.232013648 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.228472884 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224047675 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.2296752 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.228515618 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225435813 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.225631229 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.229865515 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.223319984 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225072206 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.22779327 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.223717309 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.225485967 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.222126497 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.227166447 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23513971 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.251633831 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.226633666 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.224620785 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.229033866 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.232498003 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224423514 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.227447755 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.227288401 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.22157119 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.222958157 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.227572888 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.22614627 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.223617586 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226018933 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225332266 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.22253836 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228377843 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.225546859 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.227909119 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.226145138 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.226959274 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.224780693 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.228353509 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.224893861 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.228250214 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.23300264 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.22661209 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.225233648 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.225371714 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.222887909 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226439093 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.224294886 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.223809026 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.22323163 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224574019 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.222799561 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.225697418 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.226828186 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.227353101 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226713621 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.224579388 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227258078 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.225718288 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.230238981 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.223852807 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.222629469 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.22625894 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.224399073 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.225120931 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.226522835 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.224402145 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.225730929 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.230359182 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.22611472 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.226225219 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.228328621 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22698787 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.223788013 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224472512 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.227823906 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.224593097 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.226789806 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.228121012 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.224047788 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222873562 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.224862563 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.219873894 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.220829481 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219724298 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.229590864 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.232594759 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.229196481 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230779583 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.224571925 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.229941523 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.221841641 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.222803283 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.225102589 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.226992343 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.226863441 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225947635 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226263835 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228453354 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.224715434 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.225607115 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.225191281 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.228503145 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.224282266 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.229924604 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223704956 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.224536295 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.226178848 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.227113386 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.225543533 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227392355 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.224940887 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.226989934 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223859787 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.227050141 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.227132911 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.226446152 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.228685054 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.223337394 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22597971 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227158644 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.229941965 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.222567859 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.222088695 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228511804 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.22507476 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232902951 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.239593953 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.224852714 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233970948 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.241878172 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.224014777 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.231221808 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.230062722 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.226728638 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.227345073 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.233865724 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.22968108 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.224990375 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.225054227 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229212731 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227503112 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.234513048 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.226284965 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.228654278 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.230542058 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.229986432 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.223916466 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.2289696 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.229697983 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.232340133 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227121762 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229268007 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.228562646 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229924407 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.230038237 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.229719272 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.23164043 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231172707 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.233230074 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.234305652 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.229509879 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.232141839 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.22967413 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.231934899 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.229792872 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.229925817 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.229706209 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240927922 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.237203994 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235474357 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.230997821 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.233049592 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236202128 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.23069224 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.233525482 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225204128 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228593446 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.228550716 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229319141 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.231398123 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.232582264 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.231642006 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23038134 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230861007 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.23694479 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.229944639 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.231055181 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23086993 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.231995452 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.233553121 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.228958259 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.227934354 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.230568801 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235557183 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.23212786 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.232169708 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237139882 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247199875 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.231968545 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.224532748 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.232398756 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.232889489 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.235225826 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.229352782 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.234970565 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.240395398 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.233305111 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.235849258 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.234496047 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235524966 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.233382489 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.230170715 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237088877 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.230011309 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.230154973 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.230858623 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.233250811 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239783681 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.247834931 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233317226 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.236477535 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234878227 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.23231912 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.234279152 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.23213788 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234440031 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.233400974 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23986179 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.248351015 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.234550098 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233869981 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.234081509 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231839761 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.229375971 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.231124416 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238781667 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.233022673 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.23509587 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.234940829 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.23538645 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.234353641 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.23471025 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.233789618 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.228627584 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.237176866 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24175696 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.248171096 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239050743 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.235694739 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.241107471 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234064957 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240224539 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.25016667 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.232632464 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.232023508 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.236157884 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.229148695 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.232702735 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.235347193 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.234757324 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.233199755 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.239063899 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.234578752 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.234528539 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.235655087 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.234020299 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.235450996 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243228234 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255489116 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.236256643 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239764847 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.234213667 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.233148843 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.240640596 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.237770583 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.233555469 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.237739745 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241296827 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242275604 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.230024153 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.232319429 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235146996 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235085862 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.231496216 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.233956038 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.229426486 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.237078969 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.228360014 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.235193385 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237852731 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.235671254 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.231514847 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229530346 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.231147066 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.247394129 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.236415275 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.235914108 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238157237 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.237195146 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.230322397 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.231689204 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.233158066 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230460811 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234419133 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.236173519 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235572513 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.235459763 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.231072702 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.230451929 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.235277513 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.233510527 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.234939927 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236535348 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.230823935 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.230960029 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.2342024 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.233766582 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.230716821 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.228320758 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.233513024 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.235595502 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234916399 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231506021 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.240281974 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233684542 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.231167154 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.232007259 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233580654 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.231410788 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.234555206 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.242098607 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236618311 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.240971107 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.240628807 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.235086547 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.232104259 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.238766904 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.242095218 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.229919762 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.236912707 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.234833467 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.23800583 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.232720407 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.234460131 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235052583 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.245100355 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.237307103 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.235465596 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244745457 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.248020166 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239076496 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.237070981 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.237667669 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.235597054 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.235753806 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.236396185 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.234608224 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244080635 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.253599848 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236839347 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.239147549 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.236867103 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.236690764 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238366655 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238949047 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.237565776 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.23818293 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.236512332 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238098978 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237671623 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.23541467 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.236106878 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.236259631 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.239026672 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.239878977 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.236579134 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.238557388 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.236650979 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.237462204 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238182797 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23853657 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.236121759 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.235602479 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.236335113 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236929332 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.238416148 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.240084743 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.236150501 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.236790042 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.238975107 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238635236 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240350945 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.244604711 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.243472109 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.235564303 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.23758926 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.23929825 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.239918167 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239304284 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.239278327 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239561807 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.242809616 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.237891989 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238180398 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.239403095 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.240998598 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250169711 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.256158484 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23946817 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.238673766 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242435376 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.240551093 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.236973216 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.2412577 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.239516999 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.243192976 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.24405362 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.239970443 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246298325 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254940186 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.239892581 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.24219742 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.240603454 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.243408708 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.241137559 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24032515 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.239409709 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.242636322 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.252722933 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24254635 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247361366 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268240875 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.257316749 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.241465766 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.24033767 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238921312 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.239341251 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.242478607 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.239436706 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.241077615 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241058255 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.239743235 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.239370877 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244589988 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.241779927 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.241104734 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.240149757 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.240760296 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.240837968 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.238445658 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.24222669 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.24205906 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.240787969 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.240921303 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.242262878 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.242775053 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251338328 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.251822466 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.244396066 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.241992837 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.241218793 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.244325329 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.244173067 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250729277 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.247091586 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.241830446 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.243751027 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.245267166 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24403658 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.242422804 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.242125809 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.241770279 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242360881 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.241219621 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.254402301 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254054898 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.247087654 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.240151859 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242362413 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.244338373 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243841568 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244918234 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243871233 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.243583265 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.241922548 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246632129 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.246293131 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.245187297 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.245381034 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.250486679 seconds)
  done (took 735.886400928 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.242784445 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243774837 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.242054804 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243201335 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24236251 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242355477 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239527999 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244149153 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.242311965 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241175885 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.243112434 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241914186 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24227802 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238707926 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241885138 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243335693 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241915816 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243161469 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242944738 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244327181 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240512272 seconds)
  done (took 27.266560459 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.245816669 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.242530111 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.24339216 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247209455 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240296904 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247108433 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.242852826 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246168628 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246082469 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243166706 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.244935898 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246394356 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.24243934 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.244169863 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245059313 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247911818 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247837877 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243745645 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.248717711 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.24576904 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246542463 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.242279191 seconds)
  done (took 28.567490779 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.246109868 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.243318423 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.246885887 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.245330331 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.249227088 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.24675391 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.246678471 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.248677859 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.248316429 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.245890044 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.245767382 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.243642961 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.252961304 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.251713933 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.245261014 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.248114787 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.394410204 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.247807576 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.248431843 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.249363343 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.247420558 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.251135868 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.248733692 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.246902728 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.243222488 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.24552785 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.250989927 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.244453353 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.24809796 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.249026285 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.251601072 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.249899019 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.246816082 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.250934804 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.249018639 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.248286197 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.251908513 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.248460083 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.248069868 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.249774229 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.25471427 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.26969608 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.248353933 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.254080419 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.251001496 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.245435044 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.250691106 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.253369571 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.245182471 seconds)
  done (took 62.520614278 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.248767103 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.247426558 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.245219323 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.250556452 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.251368302 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.249156136 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.250466107 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.249705078 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.247067541 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.247784874 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.251198913 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.247396778 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.245999758 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.247721424 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.250707762 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.246078141 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248756938 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.247948755 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.248408459 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248947118 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.241368074 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.252657998 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.250256142 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.250290406 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.250100101 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.247082839 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.248765212 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.25198331 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.249077973 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.247784223 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.252640055 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.250308333 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.250622036 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.250137197 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.249763015 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.251589085 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.252847153 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.249873512 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.249699703 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.250505295 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.252467503 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.251527773 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.252588657 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.251781691 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.247368902 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.249196873 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.250221712 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.250661275 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.251359707 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.252607251 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.252943813 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.249843541 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.248890512 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.251278975 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.254654949 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.254305241 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.250112808 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.250522553 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.252312743 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.250228331 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.249886188 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.247452933 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.252371905 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.251717555 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.252749391 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.249661886 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.248945224 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.250917263 seconds)
  done (took 86.182036099 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250601429 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.252964283 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251997176 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253500615 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25261874 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.25297567 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250918375 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.252893978 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.253753434 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253416705 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253681906 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255803222 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.251640008 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256109206 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.25357517 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250092864 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.252320982 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253500245 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253292639 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253390953 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.254501913 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254141115 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.254047594 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.254316005 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254492038 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.253733259 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255342583 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.253590099 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254286619 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.253660063 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.255038033 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.255668393 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254818593 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255381827 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.250884541 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.2519001 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254410825 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2552817 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.252851694 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.254381288 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.253849853 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253963504 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253897884 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.255653875 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254300576 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.253821842 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255260282 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.255667953 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256204614 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253730546 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.254321626 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254400655 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253298191 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254240724 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254121401 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.255065298 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2524622 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254832693 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253912132 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.255582592 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256787587 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.255721225 seconds)
  done (took 78.930902803 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255578928 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.256787371 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.253680319 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.250974378 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255940229 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.25524054 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253837591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.253255251 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256373579 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.256582757 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255542971 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254143195 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253213463 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2564574 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.254074529 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25379781 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25490972 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253514189 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254779785 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253842741 seconds)
  done (took 26.282739145 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.250413783 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.256391489 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.255868192 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250895186 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.256725679 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.254251499 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.257272257 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259000588 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250080647 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258667427 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.258634622 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.256706563 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256486218 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254728218 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.256849499 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.256261669 seconds)
  done (took 21.278356412 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.252786364 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.253557487 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.25756497 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.250612465 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.252471361 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.257203679 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.258411014 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.25534407 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.253677316 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.259670292 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.258304141 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.260183503 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.258552416 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.253783732 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.25600379 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.255340494 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.254223236 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.258271414 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.259353589 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.257846008 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.255372607 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.256901732 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.260686692 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.259966278 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.258330709 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.25735822 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.253876591 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.258425837 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.255722752 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.258462405 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.259406366 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.256774162 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.259256639 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.257171181 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.257007863 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.256111163 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.261030001 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.260988998 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.262693728 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.262324704 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.261083002 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.257565234 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.262616776 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.259037523 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.257750014 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.261658247 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.257178236 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.257382063 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.258694118 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.258014444 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.262216276 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.26035557 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.261404686 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.26125425 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.260913219 seconds)
  done (took 70.381218106 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260347844 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260852611 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259026771 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.260508036 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26183911 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.257144595 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.26327452 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26065741 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256071165 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.261335616 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.25894489 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.261986525 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25939882 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.25957879 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.257379639 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260227223 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.255958905 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.256179018 seconds)
  done (took 23.864981999 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.258266992 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259092922 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.257064277 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.260919505 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.25643099 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262118526 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257306473 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.260861216 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263846938 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257281404 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259251889 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.261358086 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261861512 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.26216789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261376404 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259566596 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.262652447 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261872616 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.261033658 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259453348 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263974788 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262252174 seconds)
  done (took 28.924438297 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.258929291 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.261190417 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.275042536 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.297220911 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.285286204 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.259960033 seconds)
  done (took 8.83281901 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259646602 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265190266 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.259231932 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265032041 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26183986 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257696791 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263406266 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2599274 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26091455 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258430253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261923866 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263278054 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261202343 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256531168 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264940842 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265372951 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258812362 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260998804 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263285158 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262172959 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258555515 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264534011 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262252799 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261186989 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263953204 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262152201 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261083975 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257600727 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256227261 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259357377 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265266924 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259088435 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264550755 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262000161 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258216868 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259362689 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257147809 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263182909 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264065909 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261917251 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.263645996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262532254 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264889585 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263306352 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265842081 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260366261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260639021 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263400883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258030507 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261230416 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260607256 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258463926 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260802607 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264405216 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26738474 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26746301 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259511916 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260216168 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261185593 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26217822 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262786555 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260766522 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259423567 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261205352 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261760266 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262070316 seconds)
  done (took 84.463571573 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257027942 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260261686 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264011253 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262723889 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259364199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260190495 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261423352 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26475867 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262378005 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259996221 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267203756 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260684485 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261957491 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263579314 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260059227 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264514649 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262214622 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26050604 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262509362 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266733306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264597951 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265264122 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261982957 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260551805 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261462842 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266859605 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265212492 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268290362 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262838996 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261792836 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262031695 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258433695 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261488543 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267087528 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26481573 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263497591 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261249356 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262721126 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261759426 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26252823 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262201565 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266968687 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263959742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262021339 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264314217 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264759434 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264387039 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264963115 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265924794 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265038802 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263833899 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266265461 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261372388 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266661409 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264638243 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26522431 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260884656 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264513936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263506403 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265088977 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266152131 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264221519 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265223336 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266441962 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264536251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266447301 seconds)
  done (took 84.577300266 seconds)
done (took 1717.597302268 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.249350069 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.30538006 seconds)
  done (took 13.746499056 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.418139298 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.369146873 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.255114978 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.252915924 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.245778429 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.269856803 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.267180832 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.235420392 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.235370102 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.235508942 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.236185285 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.416414286 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.285419654 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.231805896 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.232345395 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.324158259 seconds)
  done (took 41.704434002 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.254016442 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.239598142 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.336276431 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.256580622 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.258870014 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.399251742 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.28275831 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.237259187 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.381783197 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.27683889 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.572483328 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.260524892 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.236154394 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.187037854 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.25107374 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.39619365 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.452286678 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.599611947 seconds)
  done (took 28.047389584 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.610137575 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.249399687 seconds)
  done (took 9.030607206 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.245438304 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.270787228 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.265452171 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.231248197 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.235639908 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.289678017 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.251263207 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.252874572 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.223478694 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.286600253 seconds)
  done (took 63.724528671 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.243107576 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.227287907 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.228313606 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.224630257 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.217991962 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.216437703 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.219588125 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.214677476 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.279683514 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.326775584 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.232902581 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.225720489 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.218935323 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.219874191 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.216309587 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.250596316 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.368371761 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.213567353 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.214077726 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.222211698 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.216742055 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.306169312 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.255404987 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.217723737 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.323407411 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.294324452 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.223893201 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.223619419 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.334876004 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.214722129 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.215948391 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.217997765 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.219183687 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.771435032 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.686339428 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.229547743 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.239363883 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.2254446 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.214861327 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.336035482 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.218366399 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.224252482 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.211074714 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.670350861 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.374031108 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.320151167 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.334179412 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.222113074 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.219368074 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.275625366 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.220475153 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.218653761 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.244640801 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.923606572 seconds)
  done (took 103.590453225 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.247440901 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.697650374 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.377620188 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.231664299 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.033896696 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.825674226 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.213040374 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.453817565 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.217965775 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.210080506 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.479387744 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.672084357 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.212331788 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.244278712 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.569165514 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.277733191 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.209891681 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.075789487 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.211870005 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.212324453 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610217175 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.229149863 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.224915113 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.301695165 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.248135067 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.63418514 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.431192233 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.729735619 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.213452139 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.210824994 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.640317254 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.220657287 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.250018247 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.208745403 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.461946787 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.5193059 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.497878838 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.203494629 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.207271216 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.200203992 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.228952378 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.616044227 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.504174558 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.20144977 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.195942523 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.621156696 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.196975649 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.199701065 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.202605444 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.400084602 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.110150388 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.200166717 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.426237405 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.201307523 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.53924415 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.261617904 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.276336037 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.648441934 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.200077393 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.251814581 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.247728855 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.197305922 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.201146976 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.196418506 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.197640231 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.504449866 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.602496208 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.202050911 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.506510021 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.620500657 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.207429523 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.687174703 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.103790146 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.208595597 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.236043343 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.19686767 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.884984634 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.6448036 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.247782707 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.197441341 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.488137746 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.201722063 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.458525468 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.212504139 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.203075305 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609139156 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.214592165 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.236590107 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.197733973 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.198612869 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.980889023 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.204840468 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.446495775 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.257272229 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.199071505 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.198590015 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.243711246 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.198180242 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.211333227 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.200340122 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.684873355 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.199096669 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.327313197 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.219259514 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.206953431 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.202969636 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.199906736 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.20142994 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.419517768 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.690730849 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.204975833 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.199122523 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.199381585 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.209576572 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.303772949 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.202768316 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.465136776 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.199849312 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.199664378 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.205738878 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.830169154 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.223490796 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.200998861 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.204112915 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.039640717 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.412073794 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.217620049 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.200626741 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201794566 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.212709242 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.383559927 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.200143742 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.203363367 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.203292286 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869764828 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.233494342 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.23744719 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.756925439 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.20473298 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.094364032 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.220639426 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.20166931 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.497321214 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.458934691 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.505281271 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.207410521 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.202211901 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.861716341 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.217273411 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.347273849 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.220416144 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.235495921 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.396240272 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.377855208 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.201092495 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.771035303 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.201280982 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.415025636 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.204882678 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.509749273 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.656047805 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.202085199 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.204593068 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.870700362 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.850642084 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.868862506 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.202740795 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.462033873 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.200133385 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.656351864 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.201800076 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.202688083 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.786150828 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.206753183 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.20586901 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.202477203 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.202068785 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.272473618 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.375925494 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.979152903 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.209361103 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.622206219 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.263964269 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.203458957 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.206378098 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.203939773 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.557223006 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.283949197 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.206824685 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.208276331 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.20447296 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.207218773 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.635461034 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.143146085 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.206590478 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.355847116 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.794687002 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.204489343 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.204514715 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.858990157 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.456198082 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.711400732 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.220677576 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.472032697 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.205543286 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.242383415 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.960783878 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.266001019 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.633754238 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.206341374 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.204748645 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.763177045 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.204892183 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.262810233 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.205017576 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.203891931 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699078194 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.204582358 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.205051677 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.39292408 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.205354831 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457653081 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.207710226 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.239034192 seconds)
  done (took 1080.361610154 seconds)
done (took 1341.399169549 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.205691372 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.206864266 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.196540275 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.209512957 seconds)
  done (took 25.967999651 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.217614211 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.213767726 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.214911313 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.213166909 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.21615924 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.213776623 seconds)
  done (took 8.442435887 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.257689713 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.206417118 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.211071889 seconds)
  done (took 18.82767206 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.404042937 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.359984794 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.538585787 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.133727804 seconds)
  done (took 9.590200527 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.214479923 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.215537207 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.215497931 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.21754563 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.218161948 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.219293807 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.216965579 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.218014841 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.218882505 seconds)
  done (took 12.107972872 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.681632697 seconds)
done (took 80.766869765 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.317359156 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.264320022 seconds)
    (3/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.234674802 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.850669199 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.198568003 seconds)
    (6/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.202823768 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.220982321 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.469963834 seconds)
    (9/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.276095506 seconds)
    (10/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.19583522 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.199924269 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.254256914 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.210072386 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.276720545 seconds)
    (15/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.408170269 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.204301361 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.364999287 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.432346547 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.215530339 seconds)
    (20/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.422926156 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.617836342 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.02532634 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.959277138 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.793748019 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.046700989 seconds)
    (26/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.227024878 seconds)
    (27/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.695715386 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.610686058 seconds)
    (29/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.328958357 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.037682714 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.771264413 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.606430869 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.622310549 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.06130983 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.316869623 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.223508964 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.215877079 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.216667562 seconds)
    (39/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.549638286 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.61694136 seconds)
    (41/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.511208396 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.910522727 seconds)
    (43/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.278932452 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.535232706 seconds)
    (45/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.313558004 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.237554072 seconds)
    (47/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.197676643 seconds)
    (48/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.763089034 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.230703441 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.364499178 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.973581927 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.215163143 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.423892935 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.325755748 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.598795569 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.48516837 seconds)
    (57/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.751618093 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.295914284 seconds)
    (59/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.200103055 seconds)
    (60/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.893458215 seconds)
    (61/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.216319421 seconds)
    (62/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.668457039 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.748679727 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.438790267 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.724589501 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.562816496 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.252002283 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.275368681 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.237951425 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.431275701 seconds)
    (71/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.362414834 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.281040568 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.910931117 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.240217744 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.214873874 seconds)
    (76/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.335504517 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.213485815 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.555419692 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.203053805 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.058521342 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.198795073 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.329626271 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.214428763 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.708859479 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.981530748 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.031425296 seconds)
    (87/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.030141068 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.272818846 seconds)
    (89/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.38887257 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.222124586 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.452045512 seconds)
    (92/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.769893235 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.248703435 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.244734194 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.054155122 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.026286805 seconds)
    (97/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.240148692 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.213502983 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.311605664 seconds)
    (100/309) benchmarking ("sort", Int64, false)...
    done (took 5.343546627 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.211292751 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.188628463 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.969962635 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.340396665 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.66276701 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.217720983 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.325225302 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.922944174 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.233278334 seconds)
    (110/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.898892481 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.80128238 seconds)
    (112/309) benchmarking ("sort", Float64, false)...
    done (took 5.452122732 seconds)
    (113/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.215361542 seconds)
    (114/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.24143496 seconds)
    (115/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.391303003 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.622756404 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.786360219 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.264273604 seconds)
    (119/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.475617322 seconds)
    (120/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.346735599 seconds)
    (121/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.214406369 seconds)
    (122/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.224898212 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.321524164 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.199961506 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.253466451 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.877486559 seconds)
    (127/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.181595783 seconds)
    (128/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.34753227 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.615213492 seconds)
    (130/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.300976249 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.438351465 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.206907106 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.220082289 seconds)
    (134/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.624482873 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.238014145 seconds)
    (136/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.559286631 seconds)
    (137/309) benchmarking ("sort", Float32, false)...
    done (took 5.181333869 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.21709574 seconds)
    (139/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.363822799 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.957920082 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.848495567 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.560187451 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.256692914 seconds)
    (144/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.393732131 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.946055878 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.265105387 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.580602336 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.704191713 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.254891299 seconds)
    (150/309) benchmarking ("sort", Bool, false)...
    done (took 1.713508132 seconds)
    (151/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.241924142 seconds)
    (152/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.725881751 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.477316454 seconds)
    (154/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.216256786 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.889249957 seconds)
    (156/309) benchmarking ("sort", Int8, false)...
    done (took 4.226541612 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.248279914 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.480688674 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.649460381 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.515009677 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.233073941 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.505294852 seconds)
    (163/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.232825478 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.494600501 seconds)
    (165/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.357696656 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.425263339 seconds)
    (167/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.239436195 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.316714253 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.336919832 seconds)
    (170/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.340855721 seconds)
    (171/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.394813451 seconds)
    (172/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.320573835 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.225475226 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.232545805 seconds)
    (175/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.33513377 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.226360475 seconds)
    (177/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.890471913 seconds)
    (178/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.244399114 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.323796312 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.216577593 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.306685502 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.918270989 seconds)
    (183/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.240856506 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.335965543 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.710640906 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.52828442 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.253691015 seconds)
    (188/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.346873925 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.255968296 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.02968747 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.823930953 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.742011595 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.266238242 seconds)
    (194/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.315413337 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.808424659 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.295932745 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.221449242 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.226146249 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.307695522 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.242680084 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.423400118 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.245568199 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.010201157 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.459463759 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.279049213 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.205009927 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.745695768 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.231410048 seconds)
    (209/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.261418062 seconds)
    (210/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.504537699 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.415963347 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.571291825 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.471152615 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.589489954 seconds)
    (215/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.522900044 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.902889488 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.224156379 seconds)
    (218/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.7697621 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.279460002 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.346592118 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.555704037 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.51843086 seconds)
    (223/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.474295179 seconds)
    (224/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.420459911 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.758531487 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.246357048 seconds)
    (227/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.424387696 seconds)
    (228/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.303251694 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.979904125 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.717753871 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.550171742 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.863132381 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.424813694 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.528234017 seconds)
    (235/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.38261812 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.746951344 seconds)
    (237/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.519392423 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.239051083 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.247867727 seconds)
    (240/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.658914841 seconds)
    (241/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.742182838 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.342601985 seconds)
    (243/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.895046242 seconds)
    (244/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.243936935 seconds)
    (245/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.931635572 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.730356451 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.370628212 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.249482618 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.286538442 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.319222169 seconds)
    (251/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.262123646 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.216698079 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.242330497 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.22185464 seconds)
    (255/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.766274754 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.230995813 seconds)
    (257/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.562919266 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.229095028 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.45799515 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.008796582 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.307553718 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.327881282 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.295554102 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.415589748 seconds)
    (265/309) benchmarking ("sort", BigInt, false)...
    done (took 6.236047865 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.812575013 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.207785946 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.262781329 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.286736041 seconds)
    (270/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.304671865 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.24899192 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.213405353 seconds)
    (273/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.333783452 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.613366259 seconds)
    (275/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.250355469 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.224503427 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.422521833 seconds)
    (278/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.331727481 seconds)
    (279/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.374812883 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.913161482 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.3461307 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.228356911 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.228397472 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.290063341 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.209952353 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.247047239 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.675050606 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.481893872 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.227814646 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.351469188 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.306317458 seconds)
    (292/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.399897092 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.229079262 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.358983666 seconds)
    (295/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.513344791 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.002807696 seconds)
    (297/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.310103805 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.266334943 seconds)
    (299/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.904435027 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.366640212 seconds)
    (301/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.212595803 seconds)
    (302/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.628643265 seconds)
    (303/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.512534899 seconds)
    (304/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.55594608 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.206328851 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.259862798 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.296917255 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.212981529 seconds)
    (309/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.698467265 seconds)
  done (took 871.283155969 seconds)
done (took 872.439454669 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.256494104 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.251424432 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.235069279 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.256753935 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.347528218 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.263904683 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.245448238 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.237473256 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.283324639 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.283689482 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.23424188 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.262303615 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.237438598 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.234914017 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.234769161 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.248936009 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.141318773 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.238864165 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.252802336 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.244909921 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.252037789 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.233917503 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.284960106 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.263338012 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.239742667 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.238804271 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.238494355 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.254863178 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.347541398 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.239027489 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.239430749 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.247422155 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.14179693 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.238257799 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.231021153 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.254906146 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.247445695 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.245739364 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.239876525 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.267987266 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.48924697 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.236084646 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.23794419 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.237526662 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.237997809 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.242040814 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.237390996 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.24424966 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25077862 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.251506968 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.48067736 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.251892591 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.241163178 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.238227855 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.247919351 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.237456384 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.241731208 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.253301956 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.257151424 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.253029905 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.138002318 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.245346357 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.240037606 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.254829738 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.245523794 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.522662949 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.234329114 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.244300748 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.509548937 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.245367086 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.553569994 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.248750291 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.240701763 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.253101305 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.270499849 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.148469914 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.235912785 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.238505091 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.245892874 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.23814016 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.249061388 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.252292242 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.243906091 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.239684543 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.253183114 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.267853839 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.249248496 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.240412538 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.248658023 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.259303487 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.247058659 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.250355219 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.24280831 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.235217567 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.249950502 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.243392757 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.242387652 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.242763873 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.245464694 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.251089536 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.494272149 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256243407 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.236859644 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.236294506 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.239051767 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.253899898 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.493965508 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.241169587 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.261979609 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.287962146 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.241487642 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.142187773 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.247073335 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.257210183 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.250525506 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.24389354 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.236688559 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.142669739 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.492867715 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.256025388 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.243656005 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.239834853 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.257541689 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.243733904 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.238360303 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.153382576 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.24579948 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.255227751 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.363452366 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.251432854 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.273554895 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.240359068 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.244917635 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.270486243 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.257610604 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.273360131 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.244643726 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.256980895 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.258464733 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.239044122 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.252739829 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.253128737 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.243749488 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.248860146 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.236718489 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.270768883 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.254872925 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.25374338 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.263725109 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.363908065 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.240341586 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.147929832 seconds)
done (took 208.582583742 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.301578567 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.236446897 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.3330744 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.239563328 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.335930662 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.335941869 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.237183225 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.237084181 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.237798759 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.61691748 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.23694671 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.237827094 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.238501045 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.236825928 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.322225522 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.239912927 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.236913512 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.57998004 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.239890247 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.309517 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.2380775 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.23786471 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.240882509 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.626069655 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.237594596 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.239041656 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.31069627 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.240021918 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.58905196 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.233551811 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.236590933 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.588651025 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.33071407 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.257864851 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.250990138 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.247922322 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.337755992 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.257275774 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.325382143 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.324797977 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.334824657 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.27836951 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.233279882 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.236866422 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.242345945 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.241311406 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.239282388 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.267631069 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.234770888 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.240928765 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.581759175 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.251292727 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.248756696 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.240420045 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.239652854 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.260996492 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.239985333 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.242544319 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.330422862 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.242955086 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.304724535 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.628083902 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.623383735 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.24267419 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.239307513 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.240345606 seconds)
  done (took 142.225059733 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.308793989 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.314836077 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.347833734 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.242885321 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.29284972 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.35228694 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.243128326 seconds)
  done (took 10.281225095 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.248145291 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.243938332 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.29441392 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.293885919 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.242178361 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.389794488 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.243763162 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.254430942 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.241388987 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.305597815 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.244132511 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.244088016 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.250810069 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.243591933 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.292021127 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.254297651 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.357436961 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.244970487 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.244171839 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394588099 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.241202227 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.250105272 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.294370051 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.25536568 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.244923489 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.249270547 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.829713297 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.244521204 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.241290557 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.24418207 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.242516927 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.281880399 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.245585013 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.240557766 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.242217001 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359235037 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.244509268 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.241706721 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.244578351 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.241762785 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.245217652 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.245634395 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.244925046 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.242738239 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.245177411 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.267279411 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.245097128 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.245347535 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.245410203 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.245980893 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.303562532 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.245616908 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.243381865 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.24305004 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.310548974 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.252486386 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.245176272 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.243672268 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.245556208 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.243775882 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.396650105 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.294475801 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.246474672 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.295313563 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.245944565 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.246639832 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.246269978 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.246121595 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.305963679 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.245985428 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.296525609 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.243705033 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.421495563 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.26897845 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.247361916 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.249070475 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.249588821 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.245816691 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.247016239 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.252315931 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.244317362 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.247658926 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.252680363 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.244163074 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.244740488 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349028476 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355910812 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.244873852 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.260594744 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.253913139 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.244870328 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.306972123 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.248045725 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.245244451 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.305431315 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361848942 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.300667093 seconds)
  done (took 144.642020389 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.252127015 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.255274232 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.248991277 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.263854366 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.247375509 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.248293528 seconds)
  done (took 8.699969251 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.249874541 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.248886763 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.248413721 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.248748395 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.247496398 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.249029825 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.248071233 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.24871246 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.250549548 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.248859486 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.24915772 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.251214578 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.249667172 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.248714936 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.248699912 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.24924304 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.249115324 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.246486174 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.249887668 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.248352751 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.343943692 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.248589035 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248804974 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.250407054 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.253822738 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.25043674 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.257220526 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.249803415 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.249297468 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.255100126 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.252070135 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.250453644 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.250224445 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.25441982 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.253149959 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.251196559 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.253187838 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.252066889 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.248669135 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.250931732 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.25174364 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.250404896 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.250837505 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.252551734 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.252311012 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.253937691 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.255422134 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.258242389 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.250637765 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.252524792 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.253931136 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.251911485 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.252171918 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.253518056 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.253683403 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.253648317 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.255853929 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.251706213 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.25149828 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.252425953 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.251982795 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.252647205 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.253208642 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.253665842 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.259504947 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.25332573 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.253055829 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.254745579 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251932332 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.251593356 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.253476588 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.250258099 seconds)
  done (took 92.38816679 seconds)
done (took 399.412196644 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.428453131 seconds)
  done (took 7.61715579 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.413402628 seconds)
  done (took 7.604769863 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.177050402 seconds)
  done (took 19.36705327 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.300798615 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.3276857 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.256758969 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.247361406 seconds)
  done (took 26.322430385 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.403206387 seconds)
  done (took 7.59216012 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.256940349 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.257027948 seconds)
  done (took 13.707506025 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.481473996 seconds)
  done (took 7.671119177 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.272345115 seconds)
  done (took 7.463100218 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.273406428 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.266706173 seconds)
  done (took 13.983799653 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.233740395 seconds)
  done (took 7.423245233 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.864610362 seconds)
  done (took 8.057938725 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.251626341 seconds)
  done (took 7.443102301 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.321187125 seconds)
  done (took 7.511717844 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.381330003 seconds)
  done (took 8.572472098 seconds)
done (took 151.526028633 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.24726822 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.249223096 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.248953111 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.247043246 seconds)
  done (took 26.182941827 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.289619033 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.288263079 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.290117659 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.299425228 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.292472342 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.288986222 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.28169786 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.280861357 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.300112148 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.292157842 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.291193701 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.291214433 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.291966404 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.281681412 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.291904235 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.29108015 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.299906944 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.29093416 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.281686269 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.291847023 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.257052693 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.30012096 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.292016293 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.257365649 seconds)
  done (took 32.105490926 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.45297861 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.327146907 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.409005331 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.307343116 seconds)
  done (took 6.6883921 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.307889169 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.310269246 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.321155545 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.360378309 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.39037554 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.31969531 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.283083552 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.27883834 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.264464844 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.310358412 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.385844472 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.325639825 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.392375976 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.257170639 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.434147806 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.257098475 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.257480148 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.308733094 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.360294466 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.375570226 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.25728807 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.308846606 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.313415985 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.326967178 seconds)
  done (took 32.900479607 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.256405109 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.264532336 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.262941388 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.257142126 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.256805622 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.257229066 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.263218873 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.258213514 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.279237662 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.258950329 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.256218128 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.257295656 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.256439702 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.257831533 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.257078483 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.270251881 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.271193516 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.257598426 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.261058301 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.263887423 seconds)
  done (took 26.41743222 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.251720185 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.107027793 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.602992852 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.507594577 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.252018661 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.252580178 seconds)
  done (took 27.168756476 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.320062736 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.437333191 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.258426145 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.57480911 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.651561656 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.260279586 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.258776788 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.467956359 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.737293755 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.742587065 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.311867011 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.320352236 seconds)
  done (took 18.538664781 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.252002139 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.255774951 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.263092886 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.270995402 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.307274708 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.262777379 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.26582496 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.251852723 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.311865775 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.315294307 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.266932642 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.309249864 seconds)
  done (took 36.529309792 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340608363 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300331339 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.130108334 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974665085 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.633038859 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.465981621 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.992933233 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.67572468 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.263487265 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528855469 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.905578474 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359766634 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.511399843 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255051407 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.272984622 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.193637777 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488433297 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703951647 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259564914 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909333458 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283754112 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.259742685 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.070995476 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.285047687 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466401079 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384124561 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.517383146 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.255077777 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509427918 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270238373 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26532118 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256434175 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528933261 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898735884 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351142485 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266880586 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.937638122 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.970721823 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.245930083 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.923326521 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.685089611 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.262777547 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266085784 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256351182 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.19009452 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256785236 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679687473 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.265699298 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.968336854 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.25678877 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.267794433 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350524711 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.260038769 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.07279055 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295190885 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.258847749 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.254166364 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263512357 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827187452 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.372498991 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.26413183 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.19530081 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.620251154 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925902302 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831494903 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.360259715 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.261425699 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.26147647 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192418382 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.978479084 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.27795859 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606696982 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.279645636 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908107538 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897379662 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.937154958 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.200835798 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768534051 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267739621 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.196725532 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486156548 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258039844 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193870602 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.209163437 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.191877515 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914279002 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267787494 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.601472634 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.266670018 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.677082306 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.274298136 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275702662 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281764109 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.482520386 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.142870953 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259088132 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.693638464 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403727536 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280372917 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.677181906 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198135512 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.263382738 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516681239 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.470457953 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.26752745 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.206125621 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452397026 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27437091 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.27701814 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.261293984 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.273208499 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.78503865 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275156051 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.385948683 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280462311 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.673939672 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957087897 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261471065 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.363123059 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.942565365 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503202028 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.994581374 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262438148 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342812028 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263521359 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.260335161 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.026613844 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.777890921 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.260743782 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.262569401 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269093983 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.273333186 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.260919905 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207020789 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.266305828 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.978421725 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.264165492 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.485751816 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267701653 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538944007 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195675032 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609298998 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.352867373 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.48391041 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.364563671 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.261555815 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523413515 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274657679 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.272532834 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275720171 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280550878 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360054285 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284479365 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.274988777 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.520696875 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.265802126 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.266593528 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.0212444 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.267550378 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269084313 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.267937503 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.09100758 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790849002 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240244128 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271137391 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152819084 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.276143138 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.326914677 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.268929963 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271862277 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.913845658 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.063457302 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.270657135 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.261649764 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487076287 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273186847 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.020240965 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345973749 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.445953337 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.793066488 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279987349 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.197101487 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.974737192 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.957284418 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263903066 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.199859142 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.264317658 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273029186 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274506534 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.774558712 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.793801913 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269515609 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.943343079 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.273084104 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274428362 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.269049879 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264440412 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.906971617 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.40260868 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270500801 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.278127848 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408683628 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.278372027 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.198380461 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.268418431 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.270320937 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.264432149 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.264592554 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297918657 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.945040606 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74272125 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526410898 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.982343488 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279396648 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.101767064 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.297568995 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.265044831 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.725897315 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291468509 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.287170211 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277674329 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.276159732 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.002514349 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.927470636 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837456135 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948567102 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751298411 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148083155 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.2678571 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270535217 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.693591503 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204587514 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.823200755 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.438127193 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691146226 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214858739 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451775073 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.386719121 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971621868 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276599188 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494769762 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138552994 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.728578373 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293682607 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.477920845 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302001225 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.268297202 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197685047 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.016690791 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486936563 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.743907023 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348272821 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68993788 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.737340046 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.284564184 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.266859212 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.55195707 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429624286 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.985072244 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.439982139 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272541596 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.966653949 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746776543 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.276926705 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.493525823 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845624575 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271504384 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.455459928 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206975445 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.2791123 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.278657849 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.268891152 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.40802752 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.260056315 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.537490083 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27923948 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202452952 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.26885555 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756305724 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.124295729 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.273527655 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268590116 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968285984 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275864276 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530197253 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.277343311 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.897565455 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274315376 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.203254224 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203779316 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.962726789 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276455135 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245115961 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720136324 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.61915314 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.26439788 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292115682 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489355456 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.525304967 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.283471208 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.799695065 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500566497 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.049681755 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294613292 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.369645188 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.777913294 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.269195999 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270016151 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.505589178 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.094537727 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.495744798 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.1852705 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.18221771 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.268510608 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484456276 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.270710553 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.988862977 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512042236 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.985722452 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.2763756 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926779595 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299715257 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.997215365 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.20002967 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.633721012 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.281165135 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350155294 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281189392 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.280866493 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.281475453 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430554039 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.010767174 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286578149 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.285015086 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364847887 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.428044749 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.89228353 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.278385414 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805542533 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944672485 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.817478709 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287773217 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.2722385 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272000653 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206684734 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420857155 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.498526175 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545776349 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403485526 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.742649386 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297053456 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.782073186 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299049889 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487076338 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546879532 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.167310754 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272141043 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.304423623 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.27433731 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283968793 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.484691929 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727865615 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788576341 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390655641 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278032016 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.695885587 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551125103 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273341315 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273460184 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.864373309 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.285881184 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.567582914 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.279802028 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.032507432 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424983286 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283844161 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913565565 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.287274894 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.430537365 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.04738189 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.976444196 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.533654516 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.693960368 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.28838529 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808115328 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917621901 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540707475 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340630279 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285233483 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.391210122 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420477815 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.276480929 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276793026 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275164172 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323431365 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.985870401 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.285222886 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812608516 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543024219 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.272302146 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.275396995 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301662119 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.285356201 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.498458684 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944649398 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.500140582 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284925361 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.281818399 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.092947524 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815293814 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292222762 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210051498 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.279438777 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498855534 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.514526892 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299108824 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.729046624 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.987361321 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792304704 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.249149073 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297721139 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276368367 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.922929249 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821820043 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.916915425 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731762176 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.835291648 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.283826707 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552433715 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.281536988 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.288546085 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555025915 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.280785027 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.279329175 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290931924 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.811943058 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986075371 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.299876215 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993653197 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.217533247 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618530603 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897599306 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216024616 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287175129 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.447768012 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281508927 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408371496 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290143382 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.282748118 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280177714 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.040384907 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561934918 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.283720943 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.282197265 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.83634249 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.282775235 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286470893 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501036787 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287009431 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.952947053 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.627847638 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.533597887 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.286029822 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.265193339 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.281955321 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279281905 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.265710684 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.47771023 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.775439143 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79762362 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.287959772 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.291968482 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283191606 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.494683837 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490500354 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.033013858 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306515542 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281270942 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296865309 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.184826261 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.781484385 seconds)
  done (took 1546.868870285 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.281797531 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.30092776 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.298723672 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.292667326 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.302231703 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386628436 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.329641218 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367708636 seconds)
  done (took 51.781361733 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.289237457 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.4981718 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.308530176 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.279919268 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.29212134 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.292541 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.696453074 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.291135436 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.291626531 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.291059824 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.291014239 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.286938284 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.863584146 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.291395817 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.280527145 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.277052356 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.291128859 seconds)
  done (took 64.334944257 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.280003683 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.478703488 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.361986884 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.301620354 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.970209138 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.288566326 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.46460722 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.318278634 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.282358198 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.302524188 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.93456661 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.282701022 seconds)
  done (took 82.490492027 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.287802752 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.287715792 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.286899691 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.287287066 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.288535522 seconds)
  done (took 7.661934644 seconds)
done (took 1960.863181316 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.534116864 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.907016896 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.882047078 seconds)
  done (took 5.010728558 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.427828803 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.476876509 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.596028967 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.601976488 seconds)
  done (took 7.325901624 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.557273347 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.663215537 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.460670115 seconds)
  done (took 5.904083655 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.550478303 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.291469956 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.399921568 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.278999218 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.283348045 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.284012706 seconds)
  done (took 20.071932918 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.285596904 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.287406199 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.285368483 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.288439151 seconds)
  done (took 6.370433826 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.268096891 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.031261608 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.271462408 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.284547758 seconds)
  done (took 18.078972767 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.03196965 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.044493358 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.029113405 seconds)
  done (took 7.329387628 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.285778867 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.128724074 seconds)
  done (took 9.638032644 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.584490273 seconds)
  done (took 2.808582921 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.417245385 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.555118626 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.233196383 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.177601828 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.240812176 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.684538362 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.73217654 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.362928016 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.156760364 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.205392489 seconds)
  done (took 25.990890609 seconds)
done (took 121.527177811 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.792400993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.649836868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.483590758 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.757109752 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.507548115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.482959264 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.502269388 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.721251935 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.25704647 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.253635407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.805124779 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.509530236 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.447410673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.644975869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.452833434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.519954879 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.510134237 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.813941966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.442005505 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.64102178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.503580193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.393865308 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.632007179 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.410092425 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.508827668 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.432867156 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.967448701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.521328533 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.610554482 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.98190788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.433375563 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.809419968 seconds)
  done (took 185.625763988 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.283734344 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.295939542 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.283712908 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.296435994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.283276058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.287799063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.297586174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.297482343 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.285127171 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.287293627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.296085265 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.291972794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.293278558 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.290819952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.284486609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.305357384 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.288984154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.295395426 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.283979601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.284228683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.285033784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.285180073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.286070274 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.297698646 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.297576705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.284322735 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.284915884 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.285124641 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.284059175 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.284633952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.287661729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.28749679 seconds)
  done (took 202.489565383 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.287098014 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.285750434 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.286269652 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.298671724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.2966821 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.286844512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.286002239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.298447016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.28584006 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.30821825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.286194243 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.293696425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.288825493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.287539362 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.285639377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.285953202 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.299406592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.286245805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.286125095 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.312593098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.288663507 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.286497819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.298904053 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.285851977 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.288813012 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.301935618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.28689129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.287462287 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.287510383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.298733809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.289335749 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.298597184 seconds)
  done (took 202.560374548 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.488855063 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.294547467 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.295512759 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.248544607 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.294935792 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.294643616 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.286950547 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.491009028 seconds)
  done (took 13.924560769 seconds)
done (took 605.825060921 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.447443943 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.178583659 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.484799035 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.315417588 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.984896119 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.319149208 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.315462894 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.468533568 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.178645089 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.469792068 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.467445412 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.314246746 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.591272692 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.312686161 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.548043405 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.403675173 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.116304666 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.228853326 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.608943562 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.749637826 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.555411646 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.68566389 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.472416999 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.171557139 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.593328199 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.668377828 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.916196948 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.121084759 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.317732844 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.609904632 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.768866082 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.155895804 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.365378997 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.348025245 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.4060923 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.387124518 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.147863444 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.34985739 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.488408077 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.44432323 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.756777963 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.00123079 seconds)
  done (took 87.466479168 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.284358867 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.28393687 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.283031983 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.284857013 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.285577196 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.283965544 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.283806568 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.283265963 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.284163165 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.284233537 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.284009915 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.285522953 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.283749741 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.285286925 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.283730442 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.283811808 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.284647126 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.286726739 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.283930567 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.284131296 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.285268904 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.284163988 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.285020892 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.283969741 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.284793919 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.285954061 seconds)
  done (took 34.629191828 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.298432341 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.516934075 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.681408781 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.3038422 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.297144599 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.300920352 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.367056118 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.299378631 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.301319237 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.301448433 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.444571241 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.303077528 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.33352527 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.688546984 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.300712483 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.299055945 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.300138624 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.299405379 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.524229437 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.30945094 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.369779159 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.302498583 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.369145388 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.311132254 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.30270662 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.30014694 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.303248367 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.815569369 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.300982881 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.446199175 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.992405486 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.368441211 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.781656926 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.693228893 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.987769061 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.303692369 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.299825477 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.449845417 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.301220431 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.299841661 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.368683443 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.303298455 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.689839701 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.9169591 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.317083066 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.301336821 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.837575582 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.451456459 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.517486734 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.311558631 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.710439422 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.30306636 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.302508162 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.300935717 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.517835321 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.310846199 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.301310644 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.855331428 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.306260472 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.369509467 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.30231991 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.301852992 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.539452499 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.301880302 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.521886226 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.303576365 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.310531851 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.303659833 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.690239977 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.304413826 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.931240429 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.315212812 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.302216776 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.446646688 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.521711233 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.865390275 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.305333785 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.543641593 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.793746284 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.369547995 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.306606158 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.807779837 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.374211698 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.306663943 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.306225599 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.305480261 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.303766805 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.348152521 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.36953383 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.863348117 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.934156592 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.871826052 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.37434819 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.315053242 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.303846187 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.861047533 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.305539079 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.303066887 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.685693101 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.93436639 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.318419576 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.312378283 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.921258788 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.319953225 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.373783821 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.30930551 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.696097098 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.304806581 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.348293742 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.303587752 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.312235456 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.307561085 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.373122332 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.309967014 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.305484725 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.904017582 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.468629064 seconds)
  done (took 170.944779244 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.302613108 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.297561584 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.306524559 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.29716607 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.29800341 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.303254554 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.298821376 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.298666121 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.303980325 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.297635031 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.299135796 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.298100234 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.299125493 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.300872318 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.30913274 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.305466322 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.907980916 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.299682254 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.298556414 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.297934349 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.07445529 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.302417697 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.299556475 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.297434275 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.299139845 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.295835328 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.299288724 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.296116068 seconds)
  done (took 151.024800376 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.301062885 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.800837258 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.300932504 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.416414709 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.317502233 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.297467038 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.41269638 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.349276315 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.302828567 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.297534164 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.2971423 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.566961285 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.299956566 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.761247789 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.468082383 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.418321235 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.757189616 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.301061899 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.297965968 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.297755057 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.417279901 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.306464999 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.568001674 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.80114876 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.300169437 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.803109052 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.288813842 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.300814175 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.298803852 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.805411537 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.299512928 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.568954024 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.367577782 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.354181011 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.807683431 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.765698333 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.769533043 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.432249468 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.299284752 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.298143199 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.298695797 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.288722002 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.805231631 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.301308462 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.300688324 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.800239039 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.315402614 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.301582286 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.309280421 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.29967726 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.353315039 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.356145861 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.57613312 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.81126652 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.368754595 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.320733483 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.41612543 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.653029055 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.305955267 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.763122943 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.290288921 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.812980219 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.305720792 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.291818164 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.30276564 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.308461436 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.436388616 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.421459433 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.765329335 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.304664871 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.765502376 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.437407689 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.302365416 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.303130149 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.306431537 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.811044441 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.766719147 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.436579888 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.425066735 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.475863997 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.296075345 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.303464482 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.293181159 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.372595453 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.303495959 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.813846854 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.767745711 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.306223052 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.305614362 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.305765417 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.305944435 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.458685912 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.81675762 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.373413686 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.760792437 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.589258473 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.576088203 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.30659928 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.35651021 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.306392067 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.578703238 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.306190937 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.354963443 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.721348031 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.579597263 seconds)
  done (took 154.029545738 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.519754151 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.396706097 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.388433648 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.409767345 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.796390418 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.846351718 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.412849415 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.423207892 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.402966566 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.531910167 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.371373602 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.394015932 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.470526414 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.371267452 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.976878908 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.364303201 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.390257687 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.427977422 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.406017096 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.247480892 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.901236042 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.578887519 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.462236756 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.267090329 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.390029959 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.040636707 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.820760844 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.789215191 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.457635735 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.465259148 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.795515934 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.360927315 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.168142898 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.916402487 seconds)
  done (took 62.204156289 seconds)
done (took 661.528360073 seconds)
SAVING RESULT...
DONE!
