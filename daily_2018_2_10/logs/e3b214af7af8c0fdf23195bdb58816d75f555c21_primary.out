cset: moving following pidspec: 32043
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.179240152 seconds)
loading group "string"... done (took 0.543085693 seconds)
loading group "linalg"... done (took 8.722109497 seconds)
loading group "parallel"... done (took 0.167262697 seconds)
loading group "find"... done (took 2.485539999 seconds)
loading group "tuple"... done (took 2.086958791 seconds)
loading group "dates"... done (took 1.418615241 seconds)
loading group "micro"... done (took 0.194935696 seconds)
loading group "io"... done (took 0.518297336 seconds)
loading group "scalar"... done (took 48.038383229 seconds)
loading group "sparse"... done (took 13.586094231 seconds)
loading group "broadcast"... done (took 1.144896112 seconds)
loading group "union"... done (took 8.977799666 seconds)
loading group "simd"... done (took 2.994496274 seconds)
loading group "random"... done (took 11.333238608 seconds)
loading group "problem"... done (took 2.176311648 seconds)
loading group "array"... done (took 23.295825277 seconds)
loading group "misc"... done (took 1.09889173 seconds)
loading group "sort"... done (took 3.728656888 seconds)
loading group "collection"... done (took 17.955226072 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.745101432 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123359182 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203142258 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.203274352 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.275298591 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.170692076 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166161994 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.162563809 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.563808117 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204986572 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139106601 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.378302028 seconds)
done (took 6.027701467 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.286315206 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.065087413 seconds)
    (2/2) benchmarking "String"...
    done (took 0.194625969 seconds)
  done (took 0.901860557 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.082115462 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.162485754 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110852142 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098710226 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097753136 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.116249147 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.099348568 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.114154334 seconds)
  done (took 1.439032869 seconds)
done (took 3.346869853 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.485949784 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.895382521 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.514834369 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.190346555 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.306442885 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.30850867 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.275143269 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.234845451 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.097037047 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.092687107 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.262819809 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.436662348 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.422190084 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.959600753 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.074636079 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099810562 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.164732039 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.781415432 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.086059533 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129647162 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.516857749 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.231771233 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120229615 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.113102429 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.192428047 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132887535 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.147560697 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105516374 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671945523 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.138998437 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.218567583 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.089173865 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.145946229 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165249727 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.220153046 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113437535 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689601958 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204732647 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102812177 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.106820195 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.709263891 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.129118765 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.211782165 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108282939 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.072039442 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.165298864 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117246778 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.082498892 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097416105 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.105549364 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164444903 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.510845037 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110961334 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.199935141 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096229104 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.735147396 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099365933 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280263385 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.134253455 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.102054473 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095295067 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.09524746 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.173272593 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098504883 seconds)
  done (took 20.602856086 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.19125071 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.210432957 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.102298259 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150970874 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.148470054 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087139328 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.094239221 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.10138846 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12054004 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.201845242 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132978637 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.220487727 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081558456 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.112328534 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.191059437 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242701862 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.114630596 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126642482 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096331526 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.099872909 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.151096911 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.102825603 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.117614714 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.101561825 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.175518636 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209795483 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114892674 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129525225 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094660739 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.10418096 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147880388 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156039091 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098791181 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095053675 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17989706 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.128000189 seconds)
  done (took 5.593472615 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.235051538 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105201045 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246383552 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.19190432 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133198496 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.180833924 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.194628821 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.308224604 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.289166896 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.114068592 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181056625 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120509451 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.122323743 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091855202 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08690831 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084247804 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.848721367 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182502398 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148716422 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.195379756 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120625849 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088017248 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386214947 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090994286 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.108382388 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099898414 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.070323776 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.227992923 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116868109 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.467693973 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088476992 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099650608 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134156288 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203393592 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142832459 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127607913 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11645326 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.091667155 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.21476509 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106499529 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081375575 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103147431 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.20121019 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122677835 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.14073821 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.113301717 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111983762 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.14029175 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.093730025 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113779977 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.162879019 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199701348 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.16757348 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.106921003 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283448803 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113476867 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103143667 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.115180257 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.897583509 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138420829 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.089343704 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100403972 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099933986 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084080015 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.831157384 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106083434 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.720894778 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086977948 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165600794 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101265866 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12212764 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091579771 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09121279 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.129861174 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090431423 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101440751 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.091996154 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.085249225 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.110154391 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.120899026 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090064208 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.10182257 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153427628 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103274974 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.128051938 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115648771 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.110074709 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.091583451 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132250417 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088078304 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092977372 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.207021225 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115299239 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117412026 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114940631 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144275752 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092759727 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.349273952 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100505087 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088846098 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128688622 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10713629 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132805345 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104498986 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086313877 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108049631 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.089555672 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083767306 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.103759413 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153223305 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092352304 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.102366746 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.094400309 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09805432 seconds)
  done (took 28.869319329 seconds)
done (took 55.702349335 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.801965432 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081673194 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103461446 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082742772 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082501632 seconds)
  done (took 1.856235286 seconds)
done (took 2.544759602 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.185145379 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.265284551 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198454301 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.129434736 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.15172098 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.171061695 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153420673 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.171910616 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.156237017 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.177018149 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.176996929 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.111846851 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.184524481 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.192091679 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.125938727 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.197773609 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.109609556 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.156132762 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.109221484 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183490229 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.109075862 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09314794 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092555738 seconds)
  done (took 4.305408861 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106912474 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102025362 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.106402712 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.126216909 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091881333 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108660774 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125476638 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113522526 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107210222 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119497389 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0938039 seconds)
  done (took 1.896753775 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102980465 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102909177 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097806201 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.124459695 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09256158 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104916225 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122616272 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11705312 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106447171 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119250791 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092936545 seconds)
  done (took 1.880019132 seconds)
done (took 8.770086143 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.176017816 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.877755098 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.188806612 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.250488131 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329071704 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.297344867 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.607983612 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.20542225 seconds)
  done (took 15.735313775 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.121605419 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.201705134 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094068355 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100699609 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.113951862 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100497908 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095203677 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.11344419 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096859229 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100452217 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.11363849 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104078658 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101065248 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097727611 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.120806379 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104277674 seconds)
  done (took 2.528529573 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139869076 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120950426 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.120353833 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.105329313 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100187222 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.124486198 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109420441 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10437119 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.119363111 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103250911 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108383149 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.122008352 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106043869 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.100090869 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.121438113 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.125829169 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100482758 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.122091624 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.123439099 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.12117347 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105822459 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102502058 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.121531888 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10685871 seconds)
  done (took 3.495832133 seconds)
done (took 22.455710013 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1556208 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10521192 seconds)
  done (took 0.962321359 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.170508478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.186525792 seconds)
  done (took 1.061600505 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11631639 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096598843 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145247999 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111172112 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.097765988 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.114540965 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124200765 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.114139396 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098673223 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098604781 seconds)
  done (took 1.827703294 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.098903853 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099632593 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12508776 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164113764 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119995703 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098153581 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097883094 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.115385655 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101664415 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093989154 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.1172057 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112840137 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.098752812 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.130046096 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099791871 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.115637177 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105428223 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098821096 seconds)
  done (took 2.70346044 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095850629 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097206987 seconds)
  done (took 0.905598597 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09745548 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09497144 seconds)
    (3/7) benchmarking "month"...
    done (took 0.098882558 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113553363 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094131726 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092965968 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109989019 seconds)
  done (took 1.413343134 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.531112039 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.247452596 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.380297302 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08001505 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129532166 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.336082498 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.109583401 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07664439 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098374183 seconds)
  done (took 2.72803093 seconds)
done (took 12.310916896 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096589718 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.210133903 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.601240493 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.13397007 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096227713 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154755457 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.349533877 seconds)
done (took 2.358811081 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345632506 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.188355696 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089743258 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.099759126 seconds)
  done (took 1.438199314 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086502532 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103620908 seconds)
  done (took 0.911443727 seconds)
done (took 3.071277742 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115351966 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097888278 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.117196515 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102844603 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101067494 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.117719789 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102297013 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098478039 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.118206447 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099763507 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100186413 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.118611322 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09919939 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.101114997 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117569509 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.225210596 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100603415 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09880093 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116436926 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101267111 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099748021 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115680896 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102810596 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100961534 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.118363015 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101822581 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097915471 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.116139631 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102484404 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101877912 seconds)
  done (took 4.023181718 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.10032139 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092487182 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093762632 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119246158 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092015068 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094263242 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.111234421 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097823696 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097969656 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095780004 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.116880908 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097098444 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096069423 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.116003846 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098839167 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100197671 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.121979035 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097373686 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096673011 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096113648 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11931433 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097613372 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096751745 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.118318998 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096571517 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09366715 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096211733 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.114658061 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098535455 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097949257 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.116265524 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.10020839 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096915301 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.124252342 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102054691 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.099262124 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.120472622 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095278002 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099163988 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093793494 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.112121987 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097222711 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.096425805 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.120281697 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099290419 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097688857 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096925084 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.116001437 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.099351245 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.0996319 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.112261714 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098553728 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100233795 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098137473 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.119111638 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095388452 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097526151 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.112111135 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100229898 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097438327 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.110730762 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0954342 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.103205588 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098318542 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.129632903 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103178789 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096958358 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.11666812 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100147993 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.103130646 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.117529229 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108141886 seconds)
  done (took 8.18283587 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095510843 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095046171 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.092984736 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.110691814 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094370249 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095443119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096929014 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11451545 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09530781 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095751908 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115083071 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098552406 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097907671 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115682373 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098148777 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09882413 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097382716 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115509381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.099334338 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09794554 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113990024 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09935596 seconds)
  done (took 2.965914276 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238838953 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102480281 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143653913 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125307979 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112411493 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.126764669 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101055718 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102016769 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119234226 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107620428 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105327235 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119383573 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115315421 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12228219 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105700694 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10555031 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119371286 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106231204 seconds)
  done (took 2.911689348 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095759165 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095032251 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.094384305 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.111237148 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097418606 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099647432 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096906858 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118732624 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.098343176 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097684874 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.116219591 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099744602 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098300414 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098712484 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116413579 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100074196 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097211802 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116581355 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100349638 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097679033 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098705428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117643377 seconds)
  done (took 2.997762138 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110147257 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097481723 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.132181494 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100775163 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09608939 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113201941 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104660566 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09707787 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.120372176 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098364114 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098800474 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097491477 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.13326393 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101458157 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105655717 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119275262 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101446 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101086401 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119006254 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098765811 seconds)
  done (took 2.883970036 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.190186298 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130777771 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112737016 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119410019 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13130015 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112788018 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138632073 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112855455 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113328816 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140060501 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112894817 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112277811 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137193786 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118512805 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130099239 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120696881 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119397162 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138126733 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111907613 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129052483 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12391863 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112486883 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139246987 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112840285 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130691003 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11344096 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112350407 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134401162 seconds)
  done (took 4.247902607 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108814986 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10606464 seconds)
  done (took 0.949733179 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098244813 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099451645 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.097793846 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.116755562 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097861597 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098448256 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120269164 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103234743 seconds)
  done (took 1.568429349 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.189054452 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.210477535 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.119349783 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107399011 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.20992907 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.190044605 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133783548 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102476021 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.113634058 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089112183 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.205165399 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087761018 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113661138 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093470929 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095739258 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121028202 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097706423 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105516636 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.120145066 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098432928 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102031239 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11638867 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099383124 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105879121 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107902094 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.099260481 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099382252 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.123806114 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09326423 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097482871 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112164341 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09828836 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100370604 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100228779 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.115564149 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.211371317 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103923296 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094031976 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.116201611 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102856232 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.131207308 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.120259809 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.0981777 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.095132175 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118483888 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101019613 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102565807 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.114220346 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090640818 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.092742878 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097761015 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108666435 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097629321 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09587428 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.114628381 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102437402 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097589219 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.11122755 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092579823 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091543039 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.112949894 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.093303171 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098501417 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.119042654 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098355845 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.097990918 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114551638 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098287446 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097247154 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.11696809 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096329552 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111020971 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.116029414 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101931635 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101089601 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.116797113 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094264881 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101728913 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113746749 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09825323 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100948953 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.14074491 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098885581 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093110352 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.112155618 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104771002 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098895406 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.099014469 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.108921099 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104042971 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100663372 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.11768887 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089789918 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094018998 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.111152975 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100857957 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089372367 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115308295 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096719786 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102254529 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121262088 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09622686 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.100992638 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122465956 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105700361 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.099267302 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.170946941 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094667043 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097567639 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.119108917 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104056306 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09147469 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.115912166 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096977057 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093979104 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.112223724 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102454085 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.099129316 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.123103597 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.106982941 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104579576 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.122688202 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104166969 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101705179 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09762866 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.123908842 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110278899 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.103502523 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.121258431 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098451017 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.0980859 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.115460495 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102398228 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093930496 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121728168 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094634939 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098761124 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.120848309 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103768556 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.098902307 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.114100573 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097432853 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.100814384 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.120358361 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.106350355 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.103189835 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.098315445 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.114380632 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102083338 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.098266892 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.123730179 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111877788 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097608732 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.124040337 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093860159 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105834341 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.113468745 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102804292 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098827985 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.122054798 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104026142 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089269052 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112866239 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100839805 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.098019109 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.112046494 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099466396 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09713183 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10358266 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.109196481 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101449025 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089468096 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.113524252 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102243569 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098845123 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.119371459 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.093353814 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135721768 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.130124871 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102834098 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.096438914 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115777799 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102335903 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.095998333 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.120835926 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103486387 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103986369 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094532294 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.115524658 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103127437 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093113472 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.117957861 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096953477 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098648323 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.109623151 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099445107 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.089403575 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.121254293 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09908451 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101918035 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.121915771 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101719724 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097626531 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125205111 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.094658682 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102102619 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.090291806 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.121921227 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108923572 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105816352 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124383964 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.100091408 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095148821 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.119287128 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106940199 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099432405 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.118189284 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099445252 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.090822466 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.111913483 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105181423 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103701399 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10047684 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.118186117 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099188972 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099043947 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.115029617 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090355767 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101816515 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120421066 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.097461565 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09747004 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.11282716 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095820251 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103724484 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.111097665 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093778682 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.099251179 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.121455048 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098894585 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.097185541 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.119817647 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104553995 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101359491 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102942936 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115492826 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106043049 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095364334 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.117951651 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.094416691 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101032127 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.11025154 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100341933 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096982788 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.113916461 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.094121811 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101395209 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122239478 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103207405 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095951185 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.122607254 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10524028 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103375615 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095477134 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.12304095 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.093558758 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090708043 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.114647855 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.091076601 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100048109 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.113019547 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103867791 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.096602878 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11642085 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101705314 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099196473 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.11427972 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104155787 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108214168 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.111835736 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.092817342 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096771159 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118229037 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.094878089 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.094492698 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.118698221 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10026082 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103317971 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118994543 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.094821015 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102180795 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104043354 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.114374413 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104427751 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10363077 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.12403105 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.094189278 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102940054 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.114795128 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101865537 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.092106526 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116725658 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098035192 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097114434 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.115069847 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.096988341 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.094404004 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.111103786 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.094915092 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104783584 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.117284001 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103675029 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.097481476 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.095480476 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.115120561 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094894351 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10418444 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.116463214 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104454121 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099127297 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.111129864 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.092972162 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103262424 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118125273 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104306848 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092761978 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102305647 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125592417 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102924675 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099179908 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.126904561 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106907594 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104815542 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.133085015 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.092400921 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.095948785 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122172135 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099327441 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10166278 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.119977176 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.093874735 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099833691 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.124192287 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100251032 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09644231 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.091802265 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.11974928 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104503833 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10149057 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.120984174 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100985939 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099464921 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.114488373 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101728167 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103722795 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.117545265 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105363614 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099483552 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.121154165 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.095911186 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104342451 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099681749 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.112496957 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.093263098 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095305915 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.124533982 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.092753584 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103357528 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.122818301 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.095102887 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.096891708 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102457217 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.115444137 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101428875 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102587538 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.115546203 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109032438 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099684404 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.125463962 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102765055 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103375035 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.111837071 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.097231912 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097923003 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.125011393 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097488487 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103731004 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118364477 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104967766 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102390465 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103205459 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.123744395 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105228998 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.092317662 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.127032844 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102412307 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10135038 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.115367544 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097006246 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0937525 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.118005399 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107896451 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.096547865 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126517475 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103105392 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097576206 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11636524 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10551126 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09732681 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125247439 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.096045791 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100421339 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091845053 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.120441724 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.098265306 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104968675 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.115815318 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093114739 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103474149 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.124423855 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103839923 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100339024 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.124509725 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.093352605 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.093282109 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.120880687 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.096072405 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108519136 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120003498 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.097911234 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097018141 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101287691 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.119948951 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107164686 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092740886 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.118534316 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107042252 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106075792 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.117936572 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.093951168 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102489162 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11848537 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101085806 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097504199 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.113566452 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.098687079 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10635492 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11598877 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095310948 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.096702517 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104437297 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.118123622 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.095367208 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.095386937 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127737037 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.100923865 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105383471 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.115110495 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.099563572 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.096018636 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.12184658 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105891113 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.096824118 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118941339 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.097966844 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104511157 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122854035 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.092118375 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095897648 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.128146632 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104748804 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09971294 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.12138776 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.097739961 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105987879 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126063565 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102954884 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.093034348 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.093015385 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.117857793 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.094453573 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101435933 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123053135 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097777437 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095913982 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123621365 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104118798 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101868689 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.121787441 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.09369614 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106173808 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095812319 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121291568 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.093835305 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091989567 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.122153925 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105965836 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097862317 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.120069306 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100996991 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101832978 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.093679202 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.115836534 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.101512832 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101640072 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.124935417 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098638498 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.097489287 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.12254643 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109053675 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100080648 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.117720506 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106477089 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105489712 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11840521 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.099054214 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101356817 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.125743414 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102024169 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10550689 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.11564614 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.098755382 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105725473 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124874673 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108322512 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097933693 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.113005485 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104192914 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.096864663 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.093629425 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122370975 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107205023 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105126122 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.118283075 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.096653696 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107592745 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12440825 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100067983 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09625931 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.116342005 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103896211 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096434892 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.124148985 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.096716606 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105186397 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.127016673 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106187785 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107176843 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.11436726 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104982718 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101613131 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126796081 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101610671 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.093721681 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.093299674 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.122094911 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107326089 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.105735023 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.123750244 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103012808 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104006772 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118997762 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102033375 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.097377587 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105792598 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.124861763 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101162606 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09966842 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.118474915 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100598695 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100980358 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.125389238 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107746699 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.100231958 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.13268938 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104609531 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.098579696 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11798102 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100232086 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102777828 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11894825 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105023594 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.097944352 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093062893 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.125441188 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106344997 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098069936 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125929454 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107325219 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.097104054 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.122549729 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106811683 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10312161 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.121335285 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.101055852 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102718664 seconds)
  done (took 64.568444589 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149860562 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108416211 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12231913 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103020404 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118623783 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123865238 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102128467 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10311048 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124488188 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112580144 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101199828 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122037502 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117259978 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142503601 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118706102 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11174341 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122326767 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103808448 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102510101 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12269611 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117155862 seconds)
  done (took 3.243228579 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10160154 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.101722767 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100658979 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12179995 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103286216 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102102822 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100426376 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121878057 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101794188 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100752241 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123049367 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101438441 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.102657976 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.100570584 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122173051 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103124921 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10165148 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12198252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.10203348 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102580496 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100780266 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122601209 seconds)
  done (took 3.15443713 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130981649 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105099435 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099319941 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.123047286 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105630592 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.101143481 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.125618302 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.10351488 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111271984 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.117828434 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.094348995 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.098810435 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10047178 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.123205094 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.096919108 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.101334361 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.131841142 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.107310009 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105869928 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.122075965 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.094463405 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103355642 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.102129826 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.114948874 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107898531 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106928385 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.126079087 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106638585 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.093474138 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.127479731 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.103483624 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096742091 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092804135 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.114322657 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.094713231 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105261285 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.126118963 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104064331 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102575115 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.093015224 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.123995529 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.107258144 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093541915 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.124686588 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103224817 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.096789625 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.125954834 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102847956 seconds)
  done (took 5.995202302 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131857059 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159146868 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.106513236 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129873405 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137035197 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112248854 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105469113 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.154801414 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104059081 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.105439156 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.139553139 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116863199 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128179155 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109977815 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107657571 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.128114437 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109445071 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104339815 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.131724945 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106815615 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109988724 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.128029915 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116633453 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135529032 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110636383 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106167695 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105063939 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.131698787 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.115291407 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.131541807 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110309057 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110241637 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.137107254 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108920982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104874324 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.128909657 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119021068 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105998756 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128344027 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105769755 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10624217 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129834238 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108657278 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137960022 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108197559 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108030717 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126071176 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105250946 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116209855 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.127456361 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113423835 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115524994 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.129407613 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107277833 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108613597 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13671267 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107816712 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104307827 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.130218154 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115402845 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.125130037 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111252999 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116706891 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.12691925 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113696473 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116539453 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.129168291 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108820033 seconds)
  done (took 8.948046807 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.137433399 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110412163 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140237907 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.36807072 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109011635 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.132416194 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110233153 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.109788408 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134574025 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11619594 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130302376 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.218178942 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.134410873 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116298474 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131395154 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111003479 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109958276 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131494894 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111702617 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110347132 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.13011772 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118681153 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108997096 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137526672 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121697808 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.126533683 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110208333 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109200897 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139158729 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109831913 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119305993 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.131264305 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110073062 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.139014526 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121125787 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108902297 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125104801 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110182365 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109753391 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130682449 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107708595 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116442038 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130562588 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107552383 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109404708 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130493303 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117592617 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.141535238 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116501518 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11490177 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130718706 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117327864 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129203489 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110729443 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117404591 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144843001 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11756161 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138465907 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110234737 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117606762 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140126577 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.124157176 seconds)
  done (took 8.686836629 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.104905496 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104506053 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.104578077 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.127029863 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.105926489 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104062443 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.123706574 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106020869 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106674791 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105059341 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126915621 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105902481 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104462523 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124203112 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105977728 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105115451 seconds)
  done (took 2.572859488 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122310943 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120818385 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.204642853 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.107012645 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127955885 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.113297525 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104517341 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.131305282 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.105606046 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111260394 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.131440607 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108416208 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.121073613 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.128892637 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107029052 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107753654 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.124657048 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110802744 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106864168 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207125182 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108952486 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.130054444 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108071243 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108811574 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.130171865 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113393031 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11141564 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.128157307 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.108627644 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106875468 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107060467 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.135916097 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105219683 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109248871 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127364388 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.109166307 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106374579 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.126845795 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109549665 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105534605 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.128849767 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108862343 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105111071 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.130786472 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.105607338 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106529375 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102983006 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.134130695 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106804755 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108308999 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.127085296 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11218462 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111095343 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.133909199 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.113877471 seconds)
  done (took 7.346030841 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117141096 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107603148 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138376366 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104774933 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107047176 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107629507 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.129673977 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109754121 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106903768 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.127347958 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109953789 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107877903 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.129425993 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10855651 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106426078 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128347549 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.105557981 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107961923 seconds)
  done (took 2.874281351 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105370824 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106565269 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104098757 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126095164 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105310664 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10380471 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103937944 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.126700654 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105005952 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10381204 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126218905 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10638817 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105020298 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.10425215 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126843305 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105180285 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.103443085 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125844592 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104986012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104294869 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105304859 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126478214 seconds)
  done (took 3.250582796 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117030366 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.230007989 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.112985724 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.238848997 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101774829 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.12616763 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111870327 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.124408543 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.119556713 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.10248871 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.123740887 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104038562 seconds)
  done (took 2.429348339 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135361288 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142202649 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128293399 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109752914 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115606932 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132192513 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112014432 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111452737 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140744521 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122529855 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131667326 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118993492 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118814056 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140180728 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115506834 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136803065 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112397285 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110778005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128015226 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126479511 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109961316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139901823 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111541826 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110967918 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133809911 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119848125 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139766445 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123592832 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110318013 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141305203 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117044753 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131920216 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120498813 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1211739 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129199088 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120313604 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132181965 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12728397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115397323 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140424192 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108149767 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115171059 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141827436 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116549923 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139532678 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112821564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115976725 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134013635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112556266 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151999834 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118436265 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117422478 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137018217 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11892571 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140265566 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132890834 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143097704 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120506463 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115566471 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144332402 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120607259 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137592271 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120433143 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122221323 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14004653 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119173586 seconds)
  done (took 9.105568173 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148789613 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108151192 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134509107 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124300762 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13905459 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112930927 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112166659 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132889784 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112774406 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10897625 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176611474 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112553718 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139987834 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120779408 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1106769 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132607075 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112779841 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119631358 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130608399 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131695435 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133186162 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120717725 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118673231 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14262129 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123648616 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137101644 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112040405 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111674615 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133469906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113727875 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115531829 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13330642 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122044985 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.129010682 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121699591 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112072372 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132784295 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119043736 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112167665 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138290662 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120285704 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147954651 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113253188 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111073509 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145941872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111963766 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110260053 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130910462 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113835243 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107743935 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145466314 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122446484 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14587496 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121575881 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133436454 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114739829 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111823182 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132555128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114966847 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116327889 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141027029 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112394614 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154182771 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113407125 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112911661 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143617376 seconds)
  done (took 9.0834723 seconds)
done (took 162.70965525 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.180932279 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.21791125 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.201327416 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16358079 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.097528252 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.160643385 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.131679345 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.202978205 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.09832109 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096978396 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.12033441 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.101601985 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.16544814 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.120374647 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.098719415 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.100883846 seconds)
  done (took 3.079487787 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19883084 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.34333317 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.136954472 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101189847 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105785046 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101613556 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124967206 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104204397 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.103183976 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130573352 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103460218 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099316988 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130332845 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100210107 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102232005 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.125199865 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110160039 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102734952 seconds)
  done (took 3.158036875 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122727072 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154084566 seconds)
  done (took 1.111612471 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13402325 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216270441 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29623103 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174033974 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123756472 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142794895 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153055402 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136994636 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192627875 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13811095 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.115324037 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.10002803 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149768396 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10946697 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.141002405 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101903492 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.131801059 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.139857505 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117704402 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.104589028 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.149841261 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108461609 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.108360694 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.140160519 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182946381 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138303051 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107264417 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10495516 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.129004908 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118567527 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.108522311 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141410663 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.115634598 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182907355 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104881085 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179880545 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131501327 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.105140322 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118140201 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123763379 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.108558832 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.106890237 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13847289 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102015507 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106814821 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131277305 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108331048 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10642944 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.133249096 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111721877 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.132681757 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11147624 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176621354 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.112767576 seconds)
  done (took 8.041960521 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.912586681 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156438218 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10292846 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.039644467 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150091355 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116909784 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.930052712 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135104269 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255474632 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.932987897 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122659085 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132703964 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.247436373 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.284242198 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.289896065 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364699887 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.765802235 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11627401 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154984088 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.148902123 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129915912 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121670059 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118526813 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.448811641 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103740974 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.125776121 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109057254 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111280512 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180967378 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102599109 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130461035 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.20365353 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.27727376 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214289343 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126861352 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103050556 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102854012 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189701613 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271489593 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22240635 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.194423937 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10026408 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.124457149 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109662328 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117640496 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123044643 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163742026 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195477987 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.197969152 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107177749 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133801451 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112873949 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128359887 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162319463 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123604798 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.367542189 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374190715 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101808482 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131606901 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116898925 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270333893 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126922285 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.245093797 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125757985 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217524629 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124316251 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807119045 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169274207 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.125717913 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108187661 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106917757 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131718443 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106890694 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.186509113 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.403555758 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131526614 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109092546 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10344471 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229369022 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126175713 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104574444 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184091377 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10569068 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10863154 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133244453 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11016074 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.195033349 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.279249254 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11221521 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130034626 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111227025 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114653484 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.126321469 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212825475 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.25496032 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16006981 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23562564 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107273149 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187517208 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191079047 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108539093 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194100434 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130742736 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116539959 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107572879 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229464789 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.164378282 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105186748 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.131412996 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110272491 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.167463652 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108238868 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111037689 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194960715 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.487503941 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191863608 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.102061237 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109534321 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132442062 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160955389 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133290364 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267244404 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111819578 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192416233 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108473919 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.124225821 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11023102 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.187775833 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111745265 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131612893 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108522886 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112234712 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.283688742 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226828435 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135735888 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252503516 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177561172 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130468163 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176500133 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132522879 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191067522 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114940913 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107077611 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126218146 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813720779 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115637586 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109332346 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131268506 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186090013 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126366357 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108350243 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10382965 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124220456 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799828404 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108919987 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102635103 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.128589749 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11060255 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109581566 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131715669 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110402043 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187525587 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25110931 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113441579 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131762843 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104720004 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.184664751 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.105618462 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104248141 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126905149 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106247669 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110532604 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.131666651 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107262243 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193970482 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.182636348 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.238586929 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572537383 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10439172 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127435068 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250047698 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104559937 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33248707 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132821186 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.242622308 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187945257 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10229078 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.365116277 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190006483 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207670715 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.108232117 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195835438 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103246762 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110076999 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.184443123 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105091627 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133956204 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161112125 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136034944 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112622376 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.268250178 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12706265 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22814509 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.124806246 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19492435 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106474439 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10900769 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.333761533 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1269671 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116494569 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185468669 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109348269 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127324711 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.861971565 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.129322726 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113386695 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131469576 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.243653523 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.188090691 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111743189 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11164481 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135039356 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16520538 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232499335 seconds)
  done (took 47.484521873 seconds)
done (took 63.701925061 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259229362 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173205538 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.35536857 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15164889 seconds)
  done (took 1.845508412 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.260661451 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167407011 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.245614209 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101951076 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250612944 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101500732 seconds)
  done (took 1.992792601 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.174811482 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170519642 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147104004 seconds)
  done (took 1.354949763 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212643284 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210540294 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.350123466 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.238148571 seconds)
  done (took 1.932417407 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.274684391 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121197025 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.132012552 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.229600071 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.243547187 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210238679 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126985151 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178379442 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134362276 seconds)
  done (took 2.544695361 seconds)
done (took 10.532592166 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.224767056 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.291454266 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.13716853 seconds)
    (4/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.367244914 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.251357623 seconds)
    (6/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.136642552 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.23795939 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.433445344 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.441182614 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11393308 seconds)
    (11/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.23546019 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.131520406 seconds)
    (13/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.131656251 seconds)
    (14/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.224447301 seconds)
    (15/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.131131978 seconds)
    (16/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.17912025 seconds)
    (17/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.327037356 seconds)
    (18/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.178507613 seconds)
    (19/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.265060942 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.237181359 seconds)
    (21/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.109105784 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.257066946 seconds)
    (23/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.264841172 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.2950725 seconds)
    (25/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.203759 seconds)
    (26/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.134440806 seconds)
    (27/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.083511344 seconds)
    (28/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114879724 seconds)
    (29/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.088545374 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.15461265 seconds)
    (31/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.187067097 seconds)
    (32/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.17281842 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.196039732 seconds)
    (34/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.187269889 seconds)
    (35/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.137744602 seconds)
    (36/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.145938117 seconds)
    (37/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.192095108 seconds)
    (38/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.144139291 seconds)
    (39/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.280799897 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.153218436 seconds)
    (41/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.13220414 seconds)
    (42/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.15200088 seconds)
    (43/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.082982538 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.140990548 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110225209 seconds)
    (46/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088830881 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.237061409 seconds)
    (48/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087962771 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.138921061 seconds)
    (50/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.233083994 seconds)
    (51/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.199809945 seconds)
    (52/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.177951536 seconds)
    (53/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.143985404 seconds)
    (54/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.135180479 seconds)
    (55/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.176507329 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.147455091 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108374914 seconds)
    (58/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.22963093 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106788349 seconds)
    (60/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.176065473 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.139993628 seconds)
    (62/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.089167522 seconds)
    (63/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.150525293 seconds)
    (64/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.22743214 seconds)
    (65/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083228622 seconds)
    (66/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113902995 seconds)
    (67/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11149991 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.191281834 seconds)
    (69/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.175085326 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105347671 seconds)
    (71/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.108494329 seconds)
    (72/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.0889706 seconds)
    (73/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.234355003 seconds)
    (74/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.223350693 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.136102112 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.131537674 seconds)
    (77/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149924736 seconds)
    (78/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.176322149 seconds)
    (79/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.221322246 seconds)
    (80/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08364266 seconds)
    (81/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.220734475 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108554504 seconds)
    (83/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.127876508 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.130898106 seconds)
    (85/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.141892992 seconds)
    (86/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.149356662 seconds)
    (87/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.234498701 seconds)
    (88/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.234473765 seconds)
    (89/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114612083 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08954352 seconds)
    (91/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.167073093 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108688526 seconds)
    (93/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.157671963 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.14902324 seconds)
    (95/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.133146118 seconds)
    (96/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082954795 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.13253826 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111020368 seconds)
    (99/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134238301 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.218931127 seconds)
    (101/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.134832284 seconds)
    (102/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084577926 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.128713217 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115709537 seconds)
    (105/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121196551 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.141711003 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090912308 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.138638543 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.15481437 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084884141 seconds)
    (111/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.086954591 seconds)
    (112/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114841894 seconds)
    (113/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.162494962 seconds)
    (114/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091777292 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104107108 seconds)
    (116/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116561549 seconds)
    (117/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.217933873 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.115430553 seconds)
    (119/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.130219221 seconds)
    (120/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.084521707 seconds)
    (121/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.086276264 seconds)
    (122/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092108768 seconds)
    (123/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.085753528 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.138282507 seconds)
    (125/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.086681987 seconds)
    (126/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.083434914 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106627395 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.128874212 seconds)
    (129/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115588947 seconds)
    (130/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091016711 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090331619 seconds)
    (132/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.112777548 seconds)
    (133/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.084404764 seconds)
    (134/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.086474301 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106416627 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.150286793 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12871429 seconds)
    (138/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08543613 seconds)
    (139/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.158581063 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084868453 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.107418887 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114709728 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.113374677 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.106292314 seconds)
    (145/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104545305 seconds)
    (146/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.170821193 seconds)
    (147/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083943696 seconds)
    (148/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116385253 seconds)
    (149/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.083327578 seconds)
    (150/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160952536 seconds)
    (151/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.085233627 seconds)
    (152/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.086424263 seconds)
    (153/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.087260805 seconds)
    (154/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090473172 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.114750643 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.086138479 seconds)
    (157/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.08724455 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104941427 seconds)
    (159/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.138440738 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110739489 seconds)
    (161/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113351121 seconds)
    (162/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091539056 seconds)
    (163/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.107575678 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115575277 seconds)
    (165/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.090161421 seconds)
    (166/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090133246 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.152045709 seconds)
    (168/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.087949026 seconds)
    (169/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090450949 seconds)
    (170/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.087450302 seconds)
    (171/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13876376 seconds)
    (172/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.09141283 seconds)
    (173/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.097796369 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.106737942 seconds)
    (175/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.083952808 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.129834968 seconds)
    (177/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09030744 seconds)
    (178/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090776487 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.149678336 seconds)
    (180/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115595879 seconds)
    (181/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.088100121 seconds)
    (182/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086134454 seconds)
    (183/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.084353841 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.115240773 seconds)
    (185/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115360687 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109304576 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.131572448 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.087862258 seconds)
    (189/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.086257251 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106415906 seconds)
    (191/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.086139838 seconds)
    (192/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.11261346 seconds)
  done (took 28.102016602 seconds)
done (took 28.967909099 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.227834389 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134502831 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114902175 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.114003858 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.236559617 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121875796 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.157609903 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11672836 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125458964 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.14158142 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.105841247 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127510602 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.141102812 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.247957214 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11902133 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.107590821 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.131459374 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12673926 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129094554 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.157541023 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.210622775 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132969296 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.125231982 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106323069 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235553457 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106117244 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.140956246 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116315662 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127222828 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.14047367 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.11702364 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106598459 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.157722094 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.131220243 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106110182 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.140276193 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10662644 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090846879 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.140097697 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.117177184 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128846369 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.138625412 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.117472934 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106650375 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.13929101 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116557332 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106748494 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118667211 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.129584535 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117222144 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108015502 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.155967058 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115534075 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104632923 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.129789268 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.108331693 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124983938 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129859919 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130473995 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105237533 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.130556952 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10719939 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117140068 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106177518 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.138996356 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.106784302 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115503489 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.141603958 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.114697671 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107767944 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130986905 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114777854 seconds)
done (took 10.305797211 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111508192 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149638554 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.24944543 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.254791681 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.159676449 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.123674813 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119025019 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.155422484 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119980018 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123925019 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.168181911 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.138204684 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.256849697 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121463826 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.14827039 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.118266955 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117363846 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.139807052 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.251672183 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131541099 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12961119 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.148686843 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.132112973 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.148262865 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111095458 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142906328 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.139172176 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118407247 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109409596 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14402791 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130815843 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109575558 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.138190744 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128491767 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127803246 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.146580629 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.122668733 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118678622 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.135916613 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110885623 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115955056 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.151304852 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110734599 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146012622 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119625778 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.125120682 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140586205 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124804892 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110913745 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11684025 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.135256626 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134915323 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146520236 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126269909 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.121288618 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.146317595 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123451576 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123195651 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.13734944 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.123878111 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110973912 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.134595797 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112004385 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129594244 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.138477784 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123973163 seconds)
  done (took 9.979232582 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130204803 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140485321 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.146167133 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.121998137 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115633059 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.130067572 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.104854938 seconds)
  done (took 1.803341976 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10640297 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.268486634 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.259610813 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.260377907 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.250084081 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.269977615 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129849015 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.105359186 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.169208194 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11725747 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.268002047 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.323827657 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.144133231 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12297983 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.264322421 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.105380483 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.26426008 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.132899945 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123032635 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.26400274 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12400918 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.166686016 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.121272483 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.106961909 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.264666004 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.133467281 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.312129975 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125456358 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116700395 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.14714262 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122622203 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.209272273 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.266598422 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122759563 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115219808 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.259488039 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.253260577 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120953734 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.33873852 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.112056686 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.248817856 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119421008 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.149408424 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.122536651 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121299651 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.244581193 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.152305921 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124055344 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120194598 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.272681845 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.144728915 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264943968 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119784635 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120229279 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.142463201 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12427867 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128213562 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.148211601 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.274423918 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125750416 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.259591951 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.261725456 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.254503856 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.261949275 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13176818 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.267142279 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.242987817 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120220101 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14050342 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123417244 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.262692712 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.12021926 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.143913928 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.225112986 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152371984 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.265837918 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.264322908 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119781414 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.119688626 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.1370508 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120529211 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.107132829 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.254043734 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1208053 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.149267192 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125606632 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14646581 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122888452 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112281369 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.156631666 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.122234919 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117993539 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.152460575 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122625787 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122243694 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.26255995 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.145083448 seconds)
  done (took 18.012346825 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110000492 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10931989 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111779775 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133810537 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109844999 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108832115 seconds)
  done (took 1.62307018 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145500314 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121493007 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.155630085 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123126901 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168979841 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.252690312 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.26173461 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141766219 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.142059352 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132796319 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254581067 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.259275012 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256484352 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12489628 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259877885 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123056009 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.263388058 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.14759069 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130062263 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119245984 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.148443493 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12605671 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11909653 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24527377 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.14863785 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.124773532 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11475914 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.160145072 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.131085621 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.115050867 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.152298499 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.123200107 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.114430007 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.141817597 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.261894407 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116554904 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117865296 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.152573215 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126464937 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.122522768 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.261179925 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118051171 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.156504206 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.124248845 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.142101074 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116642201 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124655717 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142997037 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.234763368 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.153128745 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.125003533 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.149154849 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.124740314 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.124567409 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.140712796 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119054305 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.124621884 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.259760374 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.151416809 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116099068 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.122764227 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.149394813 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118943395 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126978947 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.150459719 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.126050481 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114249678 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148681859 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120412248 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122872001 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.150317875 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.124257496 seconds)
  done (took 11.977230809 seconds)
done (took 44.302149362 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.650450773 seconds)
  done (took 2.592001287 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.081472874 seconds)
  done (took 2.025342067 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.515967162 seconds)
  done (took 18.492712871 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.417445106 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.350673625 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992559035 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176396387 seconds)
  done (took 2.883734802 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.080114901 seconds)
  done (took 2.04074057 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.411731893 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.278096688 seconds)
  done (took 1.643049376 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.712743124 seconds)
  done (took 1.668431399 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.878022129 seconds)
  done (took 2.830678619 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.274196004 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.248399266 seconds)
  done (took 1.484636789 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.668620062 seconds)
  done (took 1.629158134 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.29691843 seconds)
  done (took 19.262331672 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260527996 seconds)
  done (took 1.227627242 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.295951994 seconds)
  done (took 1.265938816 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.543405803 seconds)
  done (took 4.511328973 seconds)
done (took 64.511152253 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12451221 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126279251 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124236994 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.148602279 seconds)
  done (took 1.481068004 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128490131 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122265155 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.126024857 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.147283191 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128725938 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12165155 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146023415 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.12423495 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120192818 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147382168 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123578173 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120991173 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148738706 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121791433 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.119557713 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148901861 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126420964 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121223873 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147333449 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.124136831 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122470386 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147144063 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126924673 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.125599491 seconds)
  done (took 4.110526921 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119141811 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.133506216 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113894052 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136529504 seconds)
  done (took 1.477599379 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130615238 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13385036 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156704506 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129782774 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133280225 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157049946 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121661191 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.119427328 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.147220826 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.131087056 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137331578 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159948431 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133825186 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12360638 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157836048 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116795461 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122179318 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15828901 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.130169513 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.154923799 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.124987551 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129061005 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.1527828 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.132916185 seconds)
  done (took 4.266776933 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.199544115 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132140145 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175304254 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.168574013 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177818071 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.120956114 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.149642267 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153334531 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.129153212 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.129513148 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.148284343 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.168311525 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127391655 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.150827009 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.122667235 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153905893 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132526083 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127074579 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.189440373 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.126812549 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127049853 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.159884221 seconds)
  done (took 4.247619298 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126584405 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.113687889 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.135757537 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.113015788 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.145404246 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140409174 seconds)
  done (took 1.747142907 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113008114 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.107773678 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.107791551 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.13226946 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.112480644 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10879056 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.130174914 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.108510915 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.107389003 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.107549036 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132633401 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.107241643 seconds)
  done (took 2.345832386 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210283968 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149815534 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253312448 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390223094 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192292258 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162966504 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.309363587 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191099051 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180289138 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168310066 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184221493 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192166259 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157080536 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217610167 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144525621 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.189453278 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201352262 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212471693 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174386894 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214682455 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18675143 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205845248 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193285944 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177405259 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143897231 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194015424 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124419569 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131903798 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197353959 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193853669 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178551653 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181541127 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144422563 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21752253 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263244307 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180220537 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.320724692 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137736939 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199303031 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.194231117 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259530732 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170535967 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193696186 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183086189 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132410303 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221713823 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152367524 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.217344605 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13762522 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175461761 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211688091 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183786732 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200683165 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140560836 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326891777 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138088953 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.17186673 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178763764 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217695894 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233211856 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183962743 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.1560834 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200743349 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195427134 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244695566 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14429704 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193577199 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127653957 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193306185 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236197105 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185387765 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188918268 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222915578 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135292724 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202280814 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167559569 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186280196 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210918936 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202064923 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123606322 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181489061 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137579371 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157470826 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194176479 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124284296 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245772861 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161555343 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.186167373 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207475859 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155623962 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191898365 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163247886 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19195157 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150133812 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.133632397 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146807005 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184769596 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163622751 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131843971 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18253414 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142135215 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.158030288 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157576943 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125247157 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20044132 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.137422511 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189547728 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200962072 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.137575201 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208631983 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151315669 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.191437275 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171880123 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223355871 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13449445 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162726772 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224377426 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202209784 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140624137 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200462593 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227164197 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.155324846 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165343751 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170307006 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225547229 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146950969 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233830764 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14121674 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168542681 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.142770901 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204261082 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1616728 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.191473459 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130366124 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.196335344 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216492486 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.1323058 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143174827 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21586782 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136467686 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156401897 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140546685 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140641225 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.173442498 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15314006 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.170818383 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156675388 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198492066 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168662686 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189492747 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138889016 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20546868 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135311321 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.200566909 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150870428 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.14948668 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175587336 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229601346 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131819647 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211768162 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16310625 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211255359 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202384617 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132098558 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213722609 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130742468 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124097173 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194960074 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200066091 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164570825 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.219820921 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205326217 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.167736529 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193863574 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151994084 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199711384 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.212180798 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160098213 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170023243 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175500959 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203013989 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123818981 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125715982 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.160076257 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140966707 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133100518 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168805387 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209734895 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16841264 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204703401 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196879594 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14318522 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220062907 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129829063 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161723442 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206640145 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141613945 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219346374 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222626423 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182005302 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171456083 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165631942 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.152474569 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129500881 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135994224 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190073236 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140604967 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167413464 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147137321 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221565811 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197848997 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153129523 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218392766 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195477695 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202708974 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123651603 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.19522555 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168086341 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20036419 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18877972 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162305411 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162680039 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22531234 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144407214 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222434708 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199307717 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181996785 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223808977 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167605976 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163159388 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146694831 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192431195 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140088458 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190891542 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146430716 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13271676 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179423574 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.140066874 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171128547 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216171397 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1482039 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206999461 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158127458 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199198482 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129370117 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17172955 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178132732 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177496589 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10997587 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167653348 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222431621 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182235708 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155214841 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200477016 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13320091 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.344117459 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184558939 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201739372 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139258882 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169332706 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176888809 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186791632 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162450445 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215109702 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142686614 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239786519 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200277021 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142279102 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132323121 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177227294 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151792909 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.17166733 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154554842 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.194698779 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147069694 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21710801 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138646585 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202060789 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206700343 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149541998 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151651731 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171674145 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257613173 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172329265 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206753022 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166395061 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195402627 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184398399 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158128317 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129162824 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.163175835 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187260491 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13148284 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210951452 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19222054 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210384561 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177498114 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192088998 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143705153 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129153592 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198564108 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150355615 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212401996 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164894035 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.141384149 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215178749 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130906222 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162038353 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163463666 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315611861 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150186908 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200430166 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111445415 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305482742 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132522059 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134160488 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189376735 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198665171 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139902633 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183336027 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20575963 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142670313 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190192661 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139079144 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20676444 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209608023 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172796761 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206114146 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147061731 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192550409 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15876358 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203763663 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147908726 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178871161 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160838602 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226257945 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204086003 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.136667181 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170608429 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200454903 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171753797 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203336607 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16984422 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186224958 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129679304 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196906082 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139934266 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156784745 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163736768 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196365078 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133664955 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203189082 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202063248 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134494567 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129682414 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180573927 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16933396 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171506332 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134098301 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217530345 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.131688628 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215262964 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241792776 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133604512 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168288261 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174257514 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131906093 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170379591 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146757071 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133103865 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.203771177 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179658528 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.160238427 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176200846 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198950447 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164802571 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186745065 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144593241 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.297448888 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130762669 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223627498 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151323374 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228005565 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149841504 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206393909 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1993992 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153924382 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197238731 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150860909 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.253500895 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169261875 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.199296 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134329523 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172950198 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14231143 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136877547 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18441152 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173694834 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173056014 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.139994268 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.199743328 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147946143 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.176623281 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146244765 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233526318 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153520592 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220203899 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188410478 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171098363 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176257104 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207983244 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131958491 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.195969256 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203214143 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147774902 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184157508 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139083069 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140770027 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24817255 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.128761465 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192778037 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177629551 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201158762 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174562264 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.168272476 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180262631 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172840783 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178634456 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159430757 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.153307603 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202366313 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137085583 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.157360534 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176556613 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193096187 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.169331704 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173407465 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179483574 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225520626 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.128296777 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136185922 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319547173 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162552652 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224158819 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135278219 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171037528 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14858631 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192085806 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.16761736 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205509172 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132782855 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161273956 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14834132 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.18716025 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143660677 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19896853 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184664857 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187401406 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18832539 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.166159315 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.26077487 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144680845 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204575297 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120295483 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.163282105 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143905683 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137569112 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175248021 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209126155 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220491483 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.196312257 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.148984133 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167841853 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129159914 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133943273 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193490796 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153125551 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203810383 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150023532 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.136257849 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144738779 seconds)
  done (took 86.562762131 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176060898 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.17069423 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.190568733 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.240902523 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.219784468 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.316108456 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.24910148 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263925969 seconds)
  done (took 2.888357448 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125251433 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164382156 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144977726 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.147145527 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11446742 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.509975512 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.165236108 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12609365 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16502099 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15754459 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.141964745 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.57038208 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.123212034 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.149146097 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.126591145 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.140622461 seconds)
  done (took 4.126287365 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.064515461 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542247775 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.021679635 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.310506801 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.239468127 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.215374261 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.797029171 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203380191 seconds)
  done (took 12.452989276 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.176158172 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.694572439 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.460127366 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.340811423 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.217149383 seconds)
  done (took 2.954283909 seconds)
done (took 129.61976827 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129341829 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127749001 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.127646305 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.160037777 seconds)
  done (took 1.598968836 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.199282152 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096655255 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.128395516 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.096939607 seconds)
  done (took 1.587288607 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394598843 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.096178719 seconds)
  done (took 1.577925977 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149072498 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137766909 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16750819 seconds)
  done (took 1.530762577 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141278098 seconds)
  done (took 1.207268114 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.123176292 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119486024 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.279348129 seconds)
  done (took 1.593749928 seconds)
done (took 10.164538229 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148270431 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.933873995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.451558982 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137457151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720343905 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431873129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.436699007 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.181059487 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187319019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.143878466 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136490193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698479636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.45081536 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.88435258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.406014553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.912427915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701693367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116695818 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.151362735 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117081857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.415319088 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.143290509 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116687387 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118174747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.725314253 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42438611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113719839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.923617589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114277937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118628886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.433030128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11563088 seconds)
  done (took 21.172750138 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154643315 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171214608 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.165882185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116295559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118700977 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.145429409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12656497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156052345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190982321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114030547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165938623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115172617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11927581 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.145156332 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139023898 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114179031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.149366993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117848742 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121161729 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.145814575 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136741325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114651091 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.145445154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118981399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114595558 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.165959245 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116279049 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12581099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.145747278 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121060609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120110862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.144248985 seconds)
  done (took 5.439011188 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.165326361 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181668585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.165424926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.154034724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.195173681 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117932401 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.230475573 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153625664 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.222190483 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115937283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13652592 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.144434092 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156223351 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116408379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.170460164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116293734 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.146531223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120076632 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123622295 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.14448596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139866331 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115271698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.145758878 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121331793 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115723452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167004748 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117752477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126896736 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.144112665 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122173426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122441473 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.144467519 seconds)
  done (took 5.739417273 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130829929 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.132229116 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.138061408 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.168641631 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12563066 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129417147 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.159552502 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126297234 seconds)
  done (took 2.191341347 seconds)
done (took 35.616993145 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139563256 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131887654 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136763133 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.160079176 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.277141226 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123707889 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.13406543 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.152906133 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.132658157 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.1382677 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.114913884 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.155438531 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137418745 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.126486452 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.27563798 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.162091688 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.281769839 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.248508835 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.15909183 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.131422139 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125362378 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.282923219 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.161560888 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.125305464 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.274892724 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.1191375 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.271545586 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127630405 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.157707403 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.117616109 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.281497274 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.127545874 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.123179319 seconds)
  done (took 6.688738457 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.230787464 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.156012335 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.126349682 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.125050614 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.125909233 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.154088551 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.235180197 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155252303 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.124283084 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.123905704 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.155095897 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.216506315 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.16244086 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.121848181 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.126687871 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114371404 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.265471486 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.156655159 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.118602021 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.099197747 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.120775119 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.155328682 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.24753387 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.152860299 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.126165392 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.124036961 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.125532902 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.163703162 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.127280232 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12554124 seconds)
  done (took 5.65857503 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130690167 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137832033 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.14350895 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.223393898 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152918713 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.166673029 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141847473 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135752086 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.176713565 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11976104 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.13229238 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18505975 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134285698 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127869372 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149116513 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135152998 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132383619 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.149271236 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126929643 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136589856 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166903812 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.136333813 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139148857 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.156180308 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117882124 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1256884 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156595266 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13002125 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12606531 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132884846 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.151019957 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119408529 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.119888087 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.182920997 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.120013712 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.161900372 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140611849 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130503926 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.15902788 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151877989 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11978559 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.149028462 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.146022218 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.174413887 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.149434229 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130386404 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.119682708 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131838259 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.146667014 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136488022 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.159039153 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.147469189 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.138669084 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116607789 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.147622246 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126924031 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.117651198 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.151741708 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133563865 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.118772852 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.168669639 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126092448 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128564386 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.148977226 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130420645 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116594814 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.117024514 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.152832124 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14463197 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124738861 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.185618287 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.117485774 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.129992321 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.161482248 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130913064 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130559177 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.146670356 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130196084 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128872426 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.155493397 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131196172 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.121259468 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.148942359 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135877237 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13790448 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.161395812 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.13033081 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128280287 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.14890196 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.121979458 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135223903 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118821304 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.151075074 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.131686208 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117453276 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.153067868 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129628483 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126562255 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.145054927 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146130249 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120887043 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.147151176 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.145193758 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120740732 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122003671 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.156515576 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.158606609 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.146583461 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128865917 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12920859 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118226069 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.156522439 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120189607 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117305444 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163999304 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.134210329 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12506775 seconds)
  done (took 17.435087268 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.374329202 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.364327063 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.214562124 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.409896115 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129334074 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.284837154 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.395948085 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.372486405 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.118397581 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182995722 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173394005 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.329511579 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.150440829 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147039186 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.370696074 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.443716251 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.146836447 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.187882337 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.154079446 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.163306918 seconds)
  done (took 6.221599244 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.127839681 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153478447 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169753465 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.137052878 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.127806115 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163563058 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120325514 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.141293829 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.160251031 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127810432 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.121028265 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.126101583 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.161738172 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135072589 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13297198 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.18350614 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127099331 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122389858 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.170250725 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123394369 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107814421 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.173715527 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128218833 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.139677604 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.167654172 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.129188871 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.117040221 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.152925573 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.125850619 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.127372552 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.151799308 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.128076612 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.124896136 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109346151 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.160754743 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.134687897 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.123425826 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.150756225 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125581617 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120223717 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.162340936 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.131844719 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125743584 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103653011 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.168185194 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115945368 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.131109993 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158811158 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112393554 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138691774 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130256539 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.163729635 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126055505 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138995177 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.15565456 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.135798161 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12877348 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.162880292 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12416013 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116972929 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.147375991 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.121894291 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.126286052 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.161150314 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13185235 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.126007532 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12624001 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.148592703 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123772547 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120053105 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.151363802 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.131794549 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138072357 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.158111812 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.126971264 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128100473 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.155784098 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101775625 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.126336716 seconds)
  done (took 11.930064944 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144449808 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128008219 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133983036 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.182964282 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130407943 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.124462178 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.159002308 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137649753 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.132775042 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.167416511 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133496147 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.131224844 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.17133979 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129374282 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128244625 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165111744 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130890362 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.155663229 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160864914 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145866588 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.132552855 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.155145326 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130858494 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.129008746 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.178676288 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.130095764 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174155802 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132600232 seconds)
  done (took 5.182312667 seconds)
done (took 54.202421753 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.261541428 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.452519538 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.227288928 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.225046088 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.269428022 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.25391642 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.227595956 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.236275551 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.696000921 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.202147942 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.22726385 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.225860729 seconds)
done (took 28.616552425 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.336912393 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.371998873 seconds)
    (2/2) benchmarking "String"...
    done (took 1.54626048 seconds)
  done (took 4.036076087 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.21828313 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.218036485 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.460901742 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.218974006 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.21772733 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.220333506 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.23009496 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.236150023 seconds)
  done (took 15.911586164 seconds)
done (took 25.612082483 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.238347113 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.519425231 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.482400638 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.198526415 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.220990667 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.219007225 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.219951851 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.275146404 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.230856957 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.202709818 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.64175033 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.504767852 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.223205417 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.628878635 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.199412209 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.226073708 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.247763777 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.571223087 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.224521594 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.211137021 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.217174435 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.200543269 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.224413324 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.239192126 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.229505048 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.227529519 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.266922118 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.223409375 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.503436686 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.245055401 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.204004319 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.240912216 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.203046355 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.232798992 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.227415266 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.235356551 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.496604856 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.233949811 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.212031009 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.222841743 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.524762873 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.252408527 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.235205772 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.223513272 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.202295463 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.221498473 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.201668385 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.338159613 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.241263176 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.22367579 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.283100952 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.646622352 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.235825918 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.251501005 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.226299244 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.550706794 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.247647502 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.322354679 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.286939169 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.225338403 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.231878347 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.22579247 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.262534904 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.227320299 seconds)
  done (took 145.571358521 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.222305614 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.227828606 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.226994762 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.231385845 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.227100601 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.227403376 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.223033148 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.221004502 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.228461418 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.236325616 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.228395612 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.230030324 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.228927926 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.192454092 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.233075258 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.248313096 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.229122222 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.245069853 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.239602005 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.224963366 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.236008632 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.227967539 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.2288054 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.229703179 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.237395587 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.312335203 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.234972613 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.240177826 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.238708714 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.225442565 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.232969675 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.234461434 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.885597856 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.095434295 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.242851053 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.263796614 seconds)
  done (took 81.051981676 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.223740037 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.22498148 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.225051251 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.259484787 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.224808442 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.839343463 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.845058816 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.286788803 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.571746552 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.230897524 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.711359414 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.511205349 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.230365452 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319910818 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.238815405 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.228079288 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.32389385 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.253125602 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233002409 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22782035 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.819750069 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.23993647 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.239321399 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.412052017 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.245841149 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263553547 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.619892653 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.227287537 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262375623 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.566833311 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.278999833 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.228154075 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594988553 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.483995709 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.34287646 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.229368504 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261203149 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.228736625 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.513424759 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.228345743 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.228349909 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.230562471 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.228599083 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881152615 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.2342432 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.84208828 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.233377937 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.227869755 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.232731909 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.227683884 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.692783684 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.993163188 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232490296 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.228187337 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.231594795 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.229574309 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.228361525 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.263268064 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.635945839 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.14563483 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.235639161 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.232620192 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263451303 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.229350613 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.816104506 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.234442191 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.971963207 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.291907219 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.381706233 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.823933381 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230040727 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32507017 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352062372 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.231727003 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.229757752 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.23076249 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.230916332 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.343470057 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.230467507 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.030260076 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.411106221 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.248735807 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.717715147 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.332744251 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.231936883 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.612400683 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.234884156 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.231065243 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.963420792 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32692673 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.232393178 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.229443442 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.232225693 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.029458587 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.850660253 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.522486142 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.236717936 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.028756702 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.236249755 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.23090734 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.169521551 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.821645877 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.915395878 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.237261012 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344209163 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.414560286 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.249553722 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234462254 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.23321363 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.72844036 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.237507923 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.287528201 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.232934211 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.633618735 seconds)
  done (took 382.859217254 seconds)
done (took 610.589799339 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.212413375 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.213230812 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.213992385 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.213025259 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.23564261 seconds)
  done (took 12.208876889 seconds)
done (took 13.328794793 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.450696249 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.436281379 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.436733709 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299558967 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.450254025 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.455742073 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.360077189 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.306341093 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.429939072 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.453783533 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.44346806 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274498118 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.45602047 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420758944 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.254064145 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.349327247 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.381199342 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.378658842 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.321357685 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.349180445 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.472441836 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270556329 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.27046471 seconds)
  done (took 32.842450939 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526700263 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.245654855 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30102566 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519787213 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.280816274 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528454591 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.596332515 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.246580084 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389323557 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257885982 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.258539823 seconds)
  done (took 18.275157321 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530135936 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.24764316 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.323272262 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514392043 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.282015055 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540700418 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.56531986 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.248415232 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432431823 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260808925 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25826725 seconds)
  done (took 18.326188637 seconds)
done (took 70.563731757 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.278393923 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.342465143 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.271822575 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.255558023 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.254439837 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.254968216 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.256316418 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.255739405 seconds)
  done (took 11.294042986 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.252978954 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.254379612 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.253651571 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.253890907 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.254586928 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.254825545 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.253985593 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.253152586 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.254284213 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.253815707 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.254207261 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.254226465 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.255010778 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.253860407 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.253678355 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.254004786 seconds)
  done (took 21.189812588 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.256820818 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.253788605 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.25504466 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.252643048 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.254124229 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.25454573 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.255618314 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.254186646 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.254819505 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.253667664 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.254690489 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.254824953 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.255566875 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.255722208 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.255854398 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.255967886 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.255292395 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.254844071 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.260684655 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.254929658 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.254417524 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.255571734 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.256409983 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.254552258 seconds)
  done (took 31.250675465 seconds)
done (took 64.857261101 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.242176708 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.241639656 seconds)
  done (took 5.609386006 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.314187215 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.312449668 seconds)
  done (took 3.752994408 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.256970138 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.255761669 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.257734001 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.257659549 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.255413626 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.256659274 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.256491443 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.256906374 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.258454598 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.256654289 seconds)
  done (took 13.695128212 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.258046442 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.256348164 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.257224087 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.257280062 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.256467471 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.256394517 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.256808739 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.257202084 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.257400487 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.255772069 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.257662536 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.259343174 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.257978842 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.25826723 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.258397279 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.25856897 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.258146408 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.256102571 seconds)
  done (took 23.762169501 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.271736115 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.276893305 seconds)
  done (took 3.676080061 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.385789041 seconds)
    (2/7) benchmarking "second"...
    done (took 1.299103228 seconds)
    (3/7) benchmarking "month"...
    done (took 1.363958875 seconds)
    (4/7) benchmarking "year"...
    done (took 1.354853428 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.298116365 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.279360061 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.298681973 seconds)
  done (took 10.409031271 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.246905838 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.563292869 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.74959949 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.406763186 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.236140953 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.264576462 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.222306858 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.263326112 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.267463988 seconds)
  done (took 14.34871503 seconds)
done (took 76.378398252 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.243976773 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.270516509 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.259334761 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.265479727 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.59779245 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.287033327 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.249409465 seconds)
done (took 16.302475132 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.228005586 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.24440577 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.224825565 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.257380506 seconds)
  done (took 10.084957083 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.261443767 seconds)
    (2/2) benchmarking "read"...
    done (took 1.570746741 seconds)
  done (took 4.96144941 seconds)
done (took 16.175344884 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.261287333 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.261821968 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.26056804 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.259620815 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.260766559 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.259709154 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.261086591 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.261515703 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.261979505 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.260208335 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261399504 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.260135314 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.261914615 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.261864861 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260658047 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.262710915 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.26188698 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261012744 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261316327 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.26252171 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.261780273 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261023666 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.26107721 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261096608 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.26105812 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262651633 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.263261235 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.262940247 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263316894 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.263865267 seconds)
  done (took 38.976970582 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.26644389 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.270613878 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.261902399 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.263707386 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.262435909 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.26477459 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.263848369 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.263571162 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.261941418 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.264100783 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.262479667 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.263220633 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.262646379 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.26282422 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.263508035 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.263341462 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.261797624 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.26376139 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.263269924 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.26222282 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.265136457 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.262949981 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.263019013 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.26308437 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.263956654 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.263184783 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.263536025 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.263931333 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.264162434 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.264490472 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.26356845 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.263837995 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.264866985 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.266076649 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.26582734 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.263515321 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.267323441 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.27042176 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.264766917 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.264505583 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.264585149 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.265089475 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.265037891 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.265916607 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.265015681 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.265433916 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.263926696 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.264499769 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.264518042 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.264516099 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.26576907 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.264615199 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.266585335 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.267169754 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.265593674 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.265189596 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.265015998 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.265764341 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.265475855 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.26537489 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.265422963 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.266400435 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.266863802 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.26536808 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.266360431 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.26546747 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.267218961 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.268091609 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.266593559 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.267024668 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.267036997 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.266008115 seconds)
  done (took 92.201516441 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.266296707 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268158837 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267693703 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.26707931 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267360621 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267621457 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.267267431 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265601744 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265472923 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267734823 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267879332 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268186071 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266682907 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268986557 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267397868 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268955264 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268915671 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267182473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.268385896 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269255632 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266978811 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268189707 seconds)
  done (took 29.024702664 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268385091 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269552057 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.268881579 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.26891233 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269727432 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.268006221 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268033101 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268658468 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269499566 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267596503 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267435513 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268673936 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.270442411 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268445989 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268212876 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.269843194 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270024426 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.271687222 seconds)
  done (took 23.979028063 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.269796354 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.269666718 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.269145399 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268522852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.267752047 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.269872444 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269167081 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.268477782 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.271927532 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.268304236 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.269807958 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26922126 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.271162078 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270838772 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270132215 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.269482224 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.269885947 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269746634 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271644056 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269399698 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.269560039 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271523162 seconds)
  done (took 29.073426647 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271344014 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269856308 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.270446342 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.270741959 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.270352139 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.271730614 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.271990678 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.27058496 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.271574507 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.271886775 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271513779 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.272643564 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.275206903 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272286977 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.273200277 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27073387 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270366189 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271561624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271098508 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271374385 seconds)
  done (took 26.570525352 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273114569 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272233096 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271450594 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273870813 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273084236 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27551154 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273058667 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273738441 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272481777 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274221056 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274047391 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281806207 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272302208 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27370573 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272984625 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272813809 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272935357 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275959896 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273688736 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27418946 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273923889 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273367578 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275337792 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274171584 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27442952 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273839766 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274136796 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275054073 seconds)
  done (took 36.813508962 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.293154706 seconds)
    (2/2) benchmarking "in"...
    done (took 1.292953814 seconds)
  done (took 3.729868635 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.276298044 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275138968 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.274143724 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.274907885 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.276799493 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.275162557 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.276218762 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274607988 seconds)
  done (took 11.345597122 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.266499624 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.275835228 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.275254627 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.275410488 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.274999862 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.267317471 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276034436 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.280398805 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.268933244 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.269051572 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.276312675 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.275136964 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.271440391 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270586019 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.269530243 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27159774 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.278308532 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.277553344 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.276707833 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.27715127 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279387872 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272079725 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275489395 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.28136573 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.271117905 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.280786338 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.277510333 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.282074867 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271004786 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.276200391 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.274006804 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.280181891 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.278908466 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.277253307 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.277030968 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.279307093 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28212593 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276158686 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.279831506 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.283577678 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278261316 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.278003407 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.273169991 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.275101399 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276944993 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.283588365 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.277772457 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.28045994 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.271563408 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.276998278 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.285695924 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272041198 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.281644155 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276462491 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.278254691 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284089861 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.284839533 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.274727385 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.280052389 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.285417596 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.290682875 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.289849968 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279673075 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.286594883 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284523281 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.299389025 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287148147 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.287156008 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.280877752 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.281159968 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.282308406 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292417697 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.294705333 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.28586781 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.279982717 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.281532555 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275156273 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284584625 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.283125471 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.285733937 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.288503707 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280746081 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283293441 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295696071 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.274354248 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.285029519 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.282621134 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.282223714 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.274066326 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286830746 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.290019097 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.282369896 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.27440145 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.276607588 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.27829528 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.28478867 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.274267606 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2773805 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.286383837 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.282858412 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283821878 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27787768 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.287893312 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288989869 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28467499 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.285252722 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.290972598 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276519769 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.28791606 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.291893413 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285474839 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.279584523 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.283579534 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.287814045 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278123253 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.286296821 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.289458182 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.279509229 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.289493271 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.284369579 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286376384 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.304621606 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.290183756 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.284156075 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.280834759 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.29633785 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.285045361 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.283005825 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.290441529 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.283823038 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.284125364 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.281048188 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.291192717 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.278444829 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289528445 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279608513 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.288050821 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.284462142 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.286301028 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.281541197 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.284770328 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.283953926 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.285749542 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.288103281 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.292217295 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.283022822 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.293285041 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.286994116 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.286491571 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.287992535 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.291176605 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286343109 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.279745088 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.289312022 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.279455927 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287265774 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.281230103 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.288261278 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287105327 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.287814972 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287424749 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.278608272 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285013149 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.290394663 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.285591798 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.287585383 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.291446115 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.287204035 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.285925583 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.279812692 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.28872016 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.278253113 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.283101732 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.295378729 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.28690314 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.286539306 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.28654907 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294362827 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287564137 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.287650042 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.281820443 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.290613948 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.294259628 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.291230113 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.296031226 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287329933 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.287737241 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.281996976 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.284131567 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.290724718 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.284220939 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.297175265 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295559012 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.3025677 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.286339787 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.293214497 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.280985655 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.293848299 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.290666468 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.297153585 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.290340157 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292504287 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283306855 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293990013 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.283124952 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.293993478 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.280835566 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.291542798 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.290894207 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.289845344 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289169129 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.284245771 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288674563 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.292387506 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290543355 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289520584 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.285295372 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.293636526 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.283191909 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.286338367 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.295813613 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.291228481 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.292809536 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.298421954 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289395416 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.297243268 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.292999616 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.287397924 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.294544735 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289508546 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.290081924 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.298686833 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.294418279 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.28758836 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.298780122 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.294483502 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.287483691 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.294003658 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.301894842 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.292084181 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.28587464 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.300331812 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.294023209 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.292807856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.29251826 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.285547259 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.296952278 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.29399702 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.301118005 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.286336113 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.297278647 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.289000564 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.296211123 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.289983436 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.296031339 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.294104634 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.296411209 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30245602 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.292427278 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286668369 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.296716184 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.292744056 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.294809332 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289057023 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.301822637 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.296272455 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.296030814 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.292676286 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.294750449 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.299079227 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.285137858 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.296343724 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.288751385 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.307715429 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.316091975 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297132235 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.300663481 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.299034331 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298915298 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.296845047 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.290997841 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.290463229 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292104163 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.2916762 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.293055175 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.299764534 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290174494 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.29861597 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293271227 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.29885519 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.299803033 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.297690184 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.289061185 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.302199423 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.296697145 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.295867422 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.287031204 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.298780858 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.291050118 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.298333798 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.297684408 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.291383434 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.305315271 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.302001496 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.293827082 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.294388259 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.291142887 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.291165906 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.294297754 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.301089646 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.291609098 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.305143377 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.291383694 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.300041421 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.293742187 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.306339995 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.308346043 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.291567143 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.305734828 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.300297246 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.289917102 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.293335062 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.300330869 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304522761 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.309958844 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.291711818 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.303052635 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.29956379 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.297815792 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.297787626 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.297419932 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.29766371 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.298452597 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306563427 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.304296721 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.29803002 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.301341318 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.309236405 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.298367389 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.299586556 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.291321042 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301338725 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.31033295 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.294199192 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.300066257 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.294653116 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.300285014 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.299634666 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.299727862 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.30104315 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.300078414 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.305857968 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.306178924 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303591146 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.300686147 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.304650793 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311987367 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307437104 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.312260602 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.2954719 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.306702007 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.299470026 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.295755125 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.296424072 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.297906281 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.304980861 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.292643353 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.307389464 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.300513115 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.296511545 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.302944013 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.309369427 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.294103903 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.305544375 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323431221 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.294273194 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.305063122 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.298899863 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.290210948 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.302764929 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.299564119 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.291621989 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.296298461 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300283743 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306036493 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.29254518 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.302331769 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293352054 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.303903669 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.300470336 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.301906903 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.300586393 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.300489859 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.291635518 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.302459182 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301817436 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.310918322 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.294784411 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.300157666 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.297794235 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.307461394 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.31293819 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.29668281 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.307089956 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.300988111 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.293227638 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.298824573 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.306886166 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294346801 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.304794081 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.294031046 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297880465 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.300626991 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.303595167 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.304698834 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.304954268 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.296389816 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.297116685 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304177465 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.303623042 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30169416 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.299615375 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.310997056 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.296188869 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.295480178 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.305602122 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.296865474 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.308235036 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296019418 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.303240701 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.300167466 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.306408897 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.304579315 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.302720349 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.294374353 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.29822249 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.310051791 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311294821 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.30491396 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.302137551 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.30609802 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.297243455 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.301080356 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.303629523 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.299462182 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.300822394 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.307361622 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.297795279 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.300460613 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.300497136 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.305332465 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.308794063 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.308424465 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.298631072 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31471443 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.315647612 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.311899122 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.297141529 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.301928492 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.301177115 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.307126527 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.304671905 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.299241459 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.313775463 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.312870849 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.308998204 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306312379 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.307989769 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.298574759 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.308274091 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307480475 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.302418294 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.313378676 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.303234596 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.314237015 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307988705 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.306568174 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.296956483 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.298306489 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.302755455 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.305124869 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.308350966 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305948242 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.311659015 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.304530471 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311956323 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.306079724 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.305201087 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.306222239 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.298571935 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.309881245 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.299845523 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.309850833 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.310745913 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.302790023 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.310925347 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.308820296 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302348848 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.30808578 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.314878524 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.306671962 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.301487834 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.306376828 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.313673426 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.320375673 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.307036839 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300968519 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.30650981 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.312242765 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.30791136 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.307183115 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.303136518 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.323181716 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.322354037 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.303098424 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.306644541 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.313614827 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.320256006 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.30858194 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.308340062 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.305467765 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.310315715 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.314567733 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.307987631 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.313569292 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.315979442 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.305717051 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.313180643 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.302418871 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.30942706 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.312340138 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.32182368 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.309123585 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.307682819 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.325057964 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.321960871 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311189427 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.337343985 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.319170968 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.310622833 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.315707718 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.302339785 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.314853331 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.307454039 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.318585852 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.311641774 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.312428057 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.312130112 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.302195483 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.31503024 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.320754212 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.323038457 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.311282118 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.303406427 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.305444294 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.31528983 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.310471507 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.314792087 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.311875926 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.30987324 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.312939586 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.305663352 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.324479136 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.332599271 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.317542998 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.314020915 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.313234417 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.313245236 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.317904752 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.314180842 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.320044287 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.312234446 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.313767517 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.312265285 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.323191512 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.313916449 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.30673679 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.309128485 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.308882259 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.316995614 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.322738775 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.338574827 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.317100356 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.318684954 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31530766 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.314002719 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.307507791 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318031237 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.313577609 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.307607581 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.31100617 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317550108 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.314098035 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.313268389 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.30973814 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.321407251 seconds)
  done (took 773.685265191 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.313347664 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.315056841 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315631487 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.313552056 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314080079 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3139777 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314411225 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.31411264 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.314589742 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.313243967 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.314780886 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315068566 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.31580553 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.314683469 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314712229 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313850796 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315624281 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.317090767 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.315071332 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315309673 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.313740766 seconds)
  done (took 28.784655915 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.31459993 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.315922279 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.316322367 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315127442 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317297617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.316956227 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.31692417 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315380862 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316203482 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316196838 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.315745344 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317041829 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.314709064 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.317598006 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316995547 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315408377 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.316647247 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317502598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.315933553 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.317427779 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316263749 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.316357334 seconds)
  done (took 30.13740048 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.317196905 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.317374655 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.309691654 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.323321189 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.318601354 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.316531383 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.316811622 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.317836107 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.318887295 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.31110678 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.311950631 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.312564828 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.316194486 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.32649865 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.31461198 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.326732618 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.319896976 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.319246292 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.320112787 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.318230601 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.324131063 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.33220016 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.317695024 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.310712553 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.320835477 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.319738467 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.318322677 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.318439213 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.311373354 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.323083835 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.318941584 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.31333509 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.324524222 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.322812316 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.313557909 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.323307948 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.320488828 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.319558918 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.319433127 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.321203285 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.342200091 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.320698846 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.323944078 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.333394352 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.322017345 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.315547348 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.327714109 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.320852295 seconds)
  done (took 64.533044241 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.322113913 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.320855061 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.319783272 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.321321307 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.320520221 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.319662648 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.319420936 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.32142954 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.321277288 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.320922424 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.322754386 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.322612784 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.322672213 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.320820044 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.322615381 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.321423904 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.320473202 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.323238572 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.321885166 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.321547235 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.321867137 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.322097817 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.322306614 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.32153372 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.321585264 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.322094231 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.321741205 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.322318644 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.322368244 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.322681648 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.324785476 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.32253599 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.323132841 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.323256062 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.323489802 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.323021406 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.324420773 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.323255769 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.323947113 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.323566475 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.324796465 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.32450753 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.323944846 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.325217847 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.323921697 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.324444898 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.323676739 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.323044223 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.323615357 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.324676122 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.323910231 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.325756992 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.324185972 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.324123204 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.325737879 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.324064669 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.323299044 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.323523247 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.325250028 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.323929597 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.32464226 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.324354496 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.324933264 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.323289154 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.324768261 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.326199083 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.325077695 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.327196886 seconds)
  done (took 91.154247401 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.325484001 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.324793182 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.324680187 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326224556 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.32718136 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.32572995 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.325383321 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.324783372 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.325923585 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.325996345 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.326277208 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.325940853 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.325277369 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.326169672 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.326680054 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.326820836 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.327473426 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326313994 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.325220699 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326660431 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.326666603 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.326484315 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.326418265 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.326601964 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.327411817 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.326462391 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.327282007 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.327870016 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327015726 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.326275048 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.327152278 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.326956901 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.327444739 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.328681595 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.327059384 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.328664103 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.327459937 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327141693 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.328469378 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.328778242 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.328983186 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328164517 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.327850607 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.32601582 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.329582443 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.328371015 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.328435544 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.32819518 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.328638754 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.329829059 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.329223858 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.328803027 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329197243 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.329549778 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.329113742 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.329692222 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330006613 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.330162444 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330708708 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.330407541 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.328630673 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.330787891 seconds)
  done (took 83.493439054 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.329943663 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.330900219 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.328584862 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.329345019 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.330341077 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.330866835 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.329460146 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331092739 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329991318 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329463471 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.330630841 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.331598841 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329318295 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.329776034 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.330176364 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.329855048 seconds)
  done (took 22.470391906 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.330396909 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.330165269 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.330651842 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.330535227 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.331093269 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.331964438 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.33026261 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.332946612 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.33203257 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.332001184 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.330967818 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.331632967 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.330624988 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.331632086 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.332705698 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.330846691 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.331373857 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.332272264 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.330979243 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.33153951 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.334546109 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.331867689 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.333435364 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.334754039 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.331901912 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.332098096 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.331235873 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.333200756 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.334104882 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.33440125 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.332652549 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.331987265 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.333331787 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.331934727 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.332261863 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.334055543 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.332391626 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.333153607 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.333963528 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.334232118 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.334128784 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.334862653 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.334599752 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.332907741 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.332845468 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.333919285 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.334813008 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.332883469 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.334690804 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.334068089 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.333698247 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.334024433 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.333899478 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.334064217 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.333127443 seconds)
  done (took 74.489859396 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.334782164 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.336944892 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.332492828 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.334533671 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.335490748 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.333913231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.336198368 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.335691964 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335955436 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.334746751 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.335972879 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.337392596 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336136455 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.335009225 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.335562494 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335596241 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.333717667 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.33511017 seconds)
  done (took 25.229468952 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.335770447 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.335837484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.336311677 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.334712073 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.335909613 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.336489212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335862072 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.335666614 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334871095 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.335827923 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335654881 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.337009132 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336949532 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.3356693 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.337624767 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336682039 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.335544883 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336157268 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.335782597 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.336802097 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.337078919 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337335211 seconds)
  done (took 30.589964944 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.328434868 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.32708519 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.32795738 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.345486134 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.346125737 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.327165721 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.327589317 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.327561804 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.352247113 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.379934517 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.372478974 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.347748946 seconds)
  done (took 17.304444114 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337070522 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337078593 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340162925 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33807104 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337342344 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340603275 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338850967 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337131163 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339416927 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339110598 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33839776 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338726521 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339149828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339051857 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339870306 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339131371 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338190497 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339247643 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339418297 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338689925 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338579189 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340610795 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33841571 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338650445 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338619018 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338291635 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33896808 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33904788 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339363612 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340148212 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339064242 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33960919 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340869085 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339104024 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341177284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339405033 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340517474 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341109123 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341175898 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341377496 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.339816098 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341134052 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340967985 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339699134 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342245644 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340176219 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340649482 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339942671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341354651 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341967612 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341870612 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34138676 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339418428 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341545567 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34141681 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342054989 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341684406 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343706259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342131192 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341542874 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341021495 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340136093 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342771566 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343041201 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342447503 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342984064 seconds)
  done (took 89.64430563 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341851538 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.343070926 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342541426 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344255083 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342735696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343718085 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343378297 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34530259 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343124944 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341883188 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34336363 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342547447 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343495631 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342812299 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344276142 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344375443 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344124766 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344673542 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344292949 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343671354 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345136498 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34429953 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344358106 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346259549 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34495308 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344166657 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346001362 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344156621 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343944342 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344306183 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3447378 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345088402 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344766724 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.345540908 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344795676 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345803039 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344575023 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344942335 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345599533 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347783682 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34470024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344268123 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343743871 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344561548 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346004738 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34591336 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344197316 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344650048 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345718731 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345398894 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345008371 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347335317 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34549253 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345728656 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34530005 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346207089 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347596368 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347284889 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345152831 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347440663 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347047155 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346261646 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347924507 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34667254 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346749539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347017906 seconds)
  done (took 89.967306394 seconds)
done (took 1714.328804849 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.504647848 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.456891739 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.338168812 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.338931183 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.337864057 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.345910064 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.350203896 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.337570967 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.337849446 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.337952961 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.337851559 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.570151028 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.373047122 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.337074548 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.338511629 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.436566912 seconds)
  done (took 27.283359091 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.367641934 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.346548397 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.472386366 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.343802789 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.367776716 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.55479683 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.409059906 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.344151855 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.537029315 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.363204247 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.349033693 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.365131256 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.342274791 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.348832228 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.361938048 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.552067393 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.626686644 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.336018361 seconds)
  done (took 29.592321006 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.854255859 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.367275063 seconds)
  done (took 5.428843076 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.364021446 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.342904527 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.345615192 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.34299107 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.336446706 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.335520911 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.341505297 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.338124562 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.334525409 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.507062873 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.346050654 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.358795582 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.344910978 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.345096713 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.353283867 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.392773741 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.501273707 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.354129368 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.351260688 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.350375945 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.343638484 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.447744614 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.390154837 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.352754804 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.485699654 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.336627329 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.367845757 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.351337213 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.476399701 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.354192832 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.344252971 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.345362387 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.346078033 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.3545196 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.908634556 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.34398824 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.371881191 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.353169923 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.353285256 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.5014561 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.345753853 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.353024267 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.337444325 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.914490667 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.456537492 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.474873847 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.340323685 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.347543067 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.348411879 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.414080931 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.347886654 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.346952609 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.408913058 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.1725957 seconds)
  done (took 86.240891704 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.370449988 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.338863335 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.526413698 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.367014095 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.338790469 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.339503527 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.358032381 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.669538129 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.40203219 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.339752019 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.686253381 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.024432766 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.350259041 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.411151935 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.397393285 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.39845222 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.339416725 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.338973791 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.33918871 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.34016238 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.941212295 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.351870272 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.341084014 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.495409581 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.384460804 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.93480151 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.346427117 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.340365162 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.364192165 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.340903767 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.986952566 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.349807438 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.409503587 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.342479378 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.650520358 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.783932755 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.743461972 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.342935582 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.366068851 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.345630515 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.376047672 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935020355 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.765914255 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.342247943 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.343265135 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.935820298 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.341321829 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.352449816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.351608676 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.617164749 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.3432508 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.342792121 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.346414148 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.343455615 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.342457915 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.419690121 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.393641614 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.937182269 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.342158497 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.342667716 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.349404807 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.341536933 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.350078946 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.342632044 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.347178481 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.769460604 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.520532884 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.349200561 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.767058408 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.981408853 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.342833391 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081619726 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.344288712 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.347056863 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.422457877 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.350602943 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.343096898 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.933250142 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.359871801 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.344972244 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.748135192 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.345064997 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.680890734 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.364523877 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.346922284 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.981216825 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.358895094 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.415296159 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.34673752 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.345573707 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.34654712 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.347421094 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.660671395 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.422904336 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.345054727 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.345746799 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.394788475 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.347275994 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.346684648 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.352016717 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072998043 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.352784018 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.345226101 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.346452035 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.347393268 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.347402893 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.347160623 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.345312517 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.634484771 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.348247957 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.370870118 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.346867047 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.348185927 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.369972662 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.50150168 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.349516463 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.70413478 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.352813551 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.352670311 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.35190783 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.346782608 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.398126691 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353009977 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.354917636 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.317843342 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.670882193 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.377909162 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.347113721 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.350392523 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.348320799 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.347495166 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.353317842 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.390216276 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.350102548 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.219924682 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.371081265 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.349990421 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.347258538 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.360280771 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.348605976 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.357361348 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.349635784 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.682604162 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.661017041 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.555209828 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.351305582 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.349568932 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.203215912 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.352774472 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.537489852 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.369539427 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.349169068 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.652976446 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.535231378 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.352628036 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.349942105 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.352792617 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.639414792 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.351121631 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.703006336 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.013453286 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.350499863 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.357789467 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.213528822 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.107614195 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.357654267 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.351665603 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.680144555 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.370683315 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.349589128 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.34931804 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.350201442 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.350985056 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.351792179 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.359987403 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.350455156 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.350576841 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.427343656 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.549643845 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.370251619 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.359631499 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.939186814 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.37017264 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.350955037 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.36055415 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.351979406 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.350523175 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.384398264 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.353113647 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.393317607 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.352124076 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.352570449 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.9755057 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.355123632 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.352101411 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.552787254 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.167062707 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.353426703 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.352789938 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.35215411 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.399415883 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.971113951 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.411193188 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.710883975 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.356474231 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.395765986 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.352968163 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.409142422 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.972399146 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.356816728 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.354170848 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.136755498 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.35289709 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.040988923 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.353799565 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.354320679 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.071985901 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.354929484 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.354447625 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.35342605 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.355943151 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.674030487 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.355752253 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.376048999 seconds)
  done (took 503.468935558 seconds)
done (took 653.217809729 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.354933971 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.359678868 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.359222346 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.359135524 seconds)
  done (took 10.655340735 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.373782031 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.361747554 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.369920514 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.360353694 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.371544745 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.360320099 seconds)
  done (took 9.421494961 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.355772285 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.360706314 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.360102068 seconds)
  done (took 8.298278687 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.598608956 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.386503577 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.764558933 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.372465012 seconds)
  done (took 9.344953847 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.370430804 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.370964344 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.372568778 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.37116266 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.373311639 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.373951053 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.372126569 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.372321318 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.37279388 seconds)
  done (took 13.571987426 seconds)
done (took 52.513731921 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.427781651 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.620571829 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.633988369 seconds)
    (4/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.335834011 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.461935534 seconds)
    (6/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.398918432 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.431315304 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.691023176 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.355875869 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.392267679 seconds)
    (11/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.33525599 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.454376899 seconds)
    (13/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.429151078 seconds)
    (14/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.442075227 seconds)
    (15/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.359000336 seconds)
    (16/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.513838837 seconds)
    (17/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.354759575 seconds)
    (18/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.62717727 seconds)
    (19/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.467305037 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.493162282 seconds)
    (21/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.336410711 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.374528188 seconds)
    (23/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.75558616 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.337984162 seconds)
    (25/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.529482537 seconds)
    (26/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.487861306 seconds)
    (27/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.44046068 seconds)
    (28/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.394769014 seconds)
    (29/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.35460837 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.442103179 seconds)
    (31/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.513460389 seconds)
    (32/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.338407431 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.538288503 seconds)
    (34/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.461168745 seconds)
    (35/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.400727564 seconds)
    (36/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.513688463 seconds)
    (37/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.338349897 seconds)
    (38/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.453285533 seconds)
    (39/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.035472315 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.440000904 seconds)
    (41/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.438119152 seconds)
    (42/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.793868617 seconds)
    (43/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.388348427 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.433039027 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.476293639 seconds)
    (46/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.875725862 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.452451634 seconds)
    (48/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.667826128 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.392471623 seconds)
    (50/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.823877326 seconds)
    (51/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.940030711 seconds)
    (52/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.791941325 seconds)
    (53/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.447277298 seconds)
    (54/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.433092083 seconds)
    (55/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.650798969 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.482024189 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.35933882 seconds)
    (58/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.39312621 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.483474265 seconds)
    (60/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.340087221 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.470372493 seconds)
    (62/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.638948031 seconds)
    (63/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.634700663 seconds)
    (64/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.348175722 seconds)
    (65/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.340606723 seconds)
    (66/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.398108569 seconds)
    (67/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.568384826 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.374990116 seconds)
    (69/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.338936666 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.490315489 seconds)
    (71/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.340158794 seconds)
    (72/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.640816286 seconds)
    (73/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.70964581 seconds)
    (74/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.342162256 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.670180996 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.389178023 seconds)
    (77/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.702713013 seconds)
    (78/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.339923886 seconds)
    (79/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.198146586 seconds)
    (80/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.34055935 seconds)
    (81/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.437637106 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.466905077 seconds)
    (83/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.452085195 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.363174033 seconds)
    (85/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.80361481 seconds)
    (86/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.366321206 seconds)
    (87/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.666160987 seconds)
    (88/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.451195431 seconds)
    (89/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.394551554 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.182106332 seconds)
    (91/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.394002264 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.629515806 seconds)
    (93/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.593346501 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.529856041 seconds)
    (95/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.448450956 seconds)
    (96/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.340941259 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.539741866 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.488922579 seconds)
    (99/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.448593328 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.925632467 seconds)
    (101/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.539254235 seconds)
    (102/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.352657926 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.499534431 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.399751765 seconds)
    (105/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.396418357 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.4753186 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.986382451 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.511629294 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.447698586 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.344392328 seconds)
    (111/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.724832642 seconds)
    (112/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.454245599 seconds)
    (113/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.546001815 seconds)
    (114/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.367293015 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.487982484 seconds)
    (116/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.542970357 seconds)
    (117/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.671004671 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.533115375 seconds)
    (119/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.56997177 seconds)
    (120/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.395909128 seconds)
    (121/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.343440494 seconds)
    (122/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.356772976 seconds)
    (123/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.791907216 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.405087953 seconds)
    (125/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.51131274 seconds)
    (126/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.471713633 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.534619954 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.44989441 seconds)
    (129/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.414029661 seconds)
    (130/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.011185026 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.775223408 seconds)
    (132/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.587745179 seconds)
    (133/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.407424295 seconds)
    (134/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.502093772 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.468534417 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.502746236 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.454866719 seconds)
    (138/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.344677996 seconds)
    (139/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.47410203 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.346292557 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.538162472 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.436656274 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.987573396 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.494974412 seconds)
    (145/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.434377885 seconds)
    (146/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.586528872 seconds)
    (147/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.34520851 seconds)
    (148/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.466109681 seconds)
    (149/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.34680781 seconds)
    (150/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.568669526 seconds)
    (151/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.358200839 seconds)
    (152/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.455271336 seconds)
    (153/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.498677506 seconds)
    (154/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.35428531 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.882494348 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.345930422 seconds)
    (157/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.612425225 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.437372158 seconds)
    (159/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.406076227 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.366680162 seconds)
    (161/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.411632199 seconds)
    (162/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.34532185 seconds)
    (163/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.603537506 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.407721636 seconds)
    (165/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.524460184 seconds)
    (166/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.898932511 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.478829108 seconds)
    (168/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.58412939 seconds)
    (169/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.662163187 seconds)
    (170/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.556487376 seconds)
    (171/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.40644084 seconds)
    (172/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.684655167 seconds)
    (173/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.347258772 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.382542341 seconds)
    (175/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.462250046 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.496627776 seconds)
    (177/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.689234223 seconds)
    (178/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.942383207 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.588121904 seconds)
    (180/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.401188958 seconds)
    (181/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.829558332 seconds)
    (182/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.351609542 seconds)
    (183/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.438077617 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.738247797 seconds)
    (185/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.405662202 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.368903159 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.485521396 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.794043895 seconds)
    (189/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.348778203 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.543402838 seconds)
    (191/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.352631168 seconds)
    (192/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.778289677 seconds)
  done (took 339.845267036 seconds)
done (took 341.069202441 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400001369 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.47626956 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.378441443 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.378173795 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381503668 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.37623591 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.402261751 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.377881076 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.395044341 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.393164173 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.376065842 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.386879412 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.39391776 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.391413869 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.414416744 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.379408366 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.37974052 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.390511892 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.394669698 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.397096313 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382515898 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38112491 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.408811007 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.379014801 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388525772 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387177767 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.386844763 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.382469818 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.388047445 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.395867019 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.387077298 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.386457715 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.398591534 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.392269124 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381670025 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.390301215 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382806828 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.478918995 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.402974483 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.393288654 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.389739891 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.396496475 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.387533655 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.38653716 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.394523344 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.410737921 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392049826 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.397486406 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.385881518 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.373053152 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401944533 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.394048061 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.390612401 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.373547737 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.385936581 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.397167162 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.393407342 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402462427 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.391046859 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385807856 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.416817172 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402941611 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.396330078 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390689011 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.393562038 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.399121646 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.393910181 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.399973747 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.391661071 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385965337 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384236186 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.391048007 seconds)
done (took 109.552908898 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.506415678 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.379528886 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.542422064 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.391694359 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.554220575 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.508067931 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.391469612 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.392190444 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.391274763 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.185622044 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.394244917 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.391214085 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.380663632 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.39346803 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.506737071 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.39310496 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.391752868 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.087907136 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.395378672 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.524059716 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.383050215 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.392405877 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.392747983 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.195570634 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.38011264 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.375905677 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.523145162 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.393283311 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.094164133 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.375291572 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.379713197 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.095754776 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.526798284 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.411935153 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.402616894 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.402943697 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.5571183 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.397394289 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.511155603 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.511529585 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.54583629 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.432239398 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.377284139 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.382890063 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.396463285 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.395809905 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.394783358 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.423148987 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.384348072 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.395666841 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.085907414 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.404703148 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.396367228 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.394273252 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.394841966 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.422606821 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.394793266 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.395614296 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.526865505 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.397298164 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.511326157 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.197644845 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.190409607 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.393761746 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.382874281 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.396821967 seconds)
  done (took 112.061807442 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.455208902 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.461853573 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.507962838 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.387332389 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.437276108 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.50839646 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.386798355 seconds)
  done (took 11.389683149 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.393897117 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.396441609 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.436128729 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.435958115 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.396584377 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.560033822 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395747738 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.399421193 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.396154326 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.439315748 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.397900907 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.396936858 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.405326157 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.38666676 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.433671586 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.399960048 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.507241904 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.389992411 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.398635494 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.540145858 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.39576133 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.407538216 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.438079847 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.399813094 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.398975894 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.395464934 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.146311084 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397297934 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.398483538 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.398181325 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.398918321 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.457025386 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.39815192 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.388145127 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.398176161 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.503415959 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.399242087 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.398293746 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.399180401 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.390726181 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.399912368 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.400119453 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.399447645 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.399257505 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.398897583 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.414447254 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.40037386 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.399147976 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.399223277 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.399661589 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.438087852 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.400912316 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.401301489 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.399120647 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.444801034 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.408227755 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.399932074 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.400059434 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398475544 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.400336909 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.541744043 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.438944315 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.400698063 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.439546299 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.400252507 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401119541 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.39887089 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.399888699 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.481488749 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.399946303 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.438912784 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.401388492 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.575130561 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.416939642 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.404106036 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.394727542 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.395847206 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.401677699 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.388053668 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.398042404 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.401297728 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.394165295 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.398160242 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.400397583 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.401632943 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.559257174 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500514045 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.401488148 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.409422193 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.40004627 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.401569976 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.444210723 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.403670303 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.402042926 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.443702981 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.511258398 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.444641155 seconds)
  done (took 143.599168012 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.404794245 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.40624736 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.399889685 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.424042708 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.394724068 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.393338112 seconds)
  done (took 9.672289436 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.396115942 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.407323297 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.404295651 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.404758751 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.402801297 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.404206455 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.404139533 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.395879842 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.407409124 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.405231239 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.403400607 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.404759526 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.404700035 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.405621782 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.405310894 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.405623996 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.404312565 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.40424824 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.40483322 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.403951976 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.395288303 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.404924542 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.404760686 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.397644884 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.409282164 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.404111127 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.417932673 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.404594357 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.405623862 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.404749679 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.407537479 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.405357481 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.400558647 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.401423474 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.409032731 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.398897239 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.409088666 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.405131804 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.404575475 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.405850322 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.406974841 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.404997838 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.406419446 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.406847628 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.400534602 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.402974936 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.410168188 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.420236348 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.406386464 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.407247422 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.407834519 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.407541552 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.406034367 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.407721208 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.402192603 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402649168 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.411862474 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.407043668 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.406988793 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.400467516 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.409639611 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.407344055 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.401412068 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.413565984 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.409392084 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.409727451 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.400220665 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.412936353 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410149093 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.408773935 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.407350854 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.407882155 seconds)
  done (took 103.461046725 seconds)
done (took 381.422726938 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.949402393 seconds)
  done (took 4.203976903 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.504049818 seconds)
  done (took 3.759736479 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.865703902 seconds)
  done (took 25.124666077 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.4088494 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.397483007 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.405259743 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.395996012 seconds)
  done (took 10.863134903 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.928358861 seconds)
  done (took 4.183001008 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.402153785 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.430618489 seconds)
  done (took 6.090752163 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.66600748 seconds)
  done (took 3.921580631 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.231710553 seconds)
  done (took 4.491883718 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.424567721 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.410543665 seconds)
  done (took 6.098181416 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.372107974 seconds)
  done (took 3.628647743 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.478822793 seconds)
  done (took 21.735953399 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.417498565 seconds)
  done (took 3.676808053 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.434026609 seconds)
  done (took 3.690640933 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.437229826 seconds)
  done (took 6.692871663 seconds)
done (took 109.417138867 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.393318547 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.400842685 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.400792025 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.39910823 seconds)
  done (took 10.850913658 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.474355706 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.47375719 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.482019647 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.469326864 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.468891625 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.476901296 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.444130208 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.437206034 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.464925686 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.463194521 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.478774903 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.465777041 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.474509078 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.435535191 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.461448338 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.480567583 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.465769693 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.484099844 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.436783893 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.468058415 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.412808643 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.470131266 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.463850312 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.412386677 seconds)
  done (took 36.322243538 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.896288145 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.473338026 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.5572244 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.453699332 seconds)
  done (took 7.637954127 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.516953402 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.517284727 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.537768454 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.573063744 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.61756022 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.530080604 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.43997081 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.43330803 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.420207427 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.517578563 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.595591772 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.51491568 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.745817167 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.411176343 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.731463551 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.412914311 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.412498772 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.516944665 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.568002635 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.604290334 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.413371258 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.517196176 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.522846544 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.516227774 seconds)
  done (took 37.847030359 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.422127545 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.430174402 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.413583156 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.429795069 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.416472365 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.415570241 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.415128084 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.421681974 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.416012358 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.414425599 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.415326744 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.428211113 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.413303618 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.416168414 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.421553974 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.415431924 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.416281579 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.421885801 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.424169194 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.416255079 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.414193474 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.422231623 seconds)
  done (took 32.481615413 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.398070043 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.399453447 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.750515339 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.653969932 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.398754529 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.398391532 seconds)
  done (took 14.259930135 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.486949858 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.635080081 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.405269446 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.8314912 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.932863599 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.411416184 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.406635886 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.67981945 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.04047166 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.067652054 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.477936398 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.486507529 seconds)
  done (took 21.124337797 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491542507 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409990358 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43004826 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495261806 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410784639 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411329413 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474359949 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924554227 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.416393706 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686894061 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417326422 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493138435 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662494222 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411847785 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.418589556 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.379761308 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64040715 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961942449 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413537342 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416364394 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444378413 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416802094 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41881398 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652760394 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414406859 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412266086 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.674724836 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412607182 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745907301 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717728091 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720445816 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414500089 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691015913 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887850616 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519588718 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.65049559 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411866516 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41385238 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.397834797 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.417897005 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415347607 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435123614 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717042471 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415192037 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414450762 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429825224 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938316647 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.423257802 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.414273627 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413183522 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721190466 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496153502 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.421203446 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414437684 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500143125 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413131145 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.420285353 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535107022 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057822637 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414750548 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425518355 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.419635371 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411619774 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435891269 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162231946 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.422679898 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.422029045 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.421320212 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415398086 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426529654 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437692356 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413936441 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.437745974 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415553119 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288995939 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430448571 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415739508 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017734327 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436128403 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.420691966 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643434052 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416311408 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416547756 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.415888706 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416200761 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255772231 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424896208 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.384713649 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446663614 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.932941385 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656274485 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43986161 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446999704 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.639519729 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.384896514 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417520109 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.431792055 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419514614 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437126634 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.935907224 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415819373 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.423179335 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666004862 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.629435191 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420510431 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.394708917 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939537114 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437440859 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.445712855 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424190414 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663637173 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.142677482 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.738045692 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420393873 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455330761 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41861947 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304940061 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437716258 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.428316031 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.436991248 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73109613 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.322430712 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418832377 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492957291 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430313246 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41984825 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429066442 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420412812 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418146359 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.634652027 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427250386 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.731899888 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.424201221 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419543302 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.423128173 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435443443 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.4213883 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.64449784 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418815967 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702267007 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420926405 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419250577 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420863371 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.640695151 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.419590277 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.42696025 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.761432128 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433837302 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441669935 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73442527 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456118967 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535254933 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455842318 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.422056203 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.679691795 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.427774267 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.428652162 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436470952 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422518985 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422888314 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.432276655 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417723267 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150089502 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399830272 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.42972872 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422782756 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.439099423 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497640388 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.430428669 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.663254581 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.4237442 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418299841 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.449588036 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.421362946 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664731904 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.731416823 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.428931979 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59776743 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.941703058 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131525682 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439047762 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.423096604 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.422780561 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.422842497 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424096333 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422855113 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423178286 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.663533983 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.739146359 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.439792047 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136549759 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426649817 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435957775 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.432822925 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.732903051 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.434947531 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423865827 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.432960077 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424417019 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425831352 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.738390791 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647730821 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.440229768 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424694127 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.944877181 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434241448 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426283866 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424877344 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453545262 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.436057839 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023826026 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.767641408 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425264204 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736514113 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436801528 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.444589309 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.425208699 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425505407 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429473428 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.44181627 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434372455 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.668201598 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441760848 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426838839 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067370396 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357025071 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089417215 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448858336 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.427593969 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432142378 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.951419505 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42830556 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427177327 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706332734 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.950008259 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426977548 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94939373 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.42744526 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.311595269 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738283098 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65709839 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444384357 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.42784657 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738735394 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642111516 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457624023 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435293655 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433340209 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.397486734 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027473187 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433069733 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609184792 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95158377 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426469256 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.431060656 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.498899828 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.443624335 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882375332 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428346276 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429317961 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430516856 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457631853 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032242311 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435566508 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429530105 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157594656 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.446120478 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.960459611 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430687189 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67181784 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.740706365 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.716528928 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.431348106 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.435738902 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.677063175 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741904262 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433529281 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431749046 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104018567 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.289491534 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.439031285 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433492301 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326461457 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431937748 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772884339 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.434144125 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.445917819 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439286604 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431982548 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432344867 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.432568866 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439500406 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403396718 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99182672 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.423438533 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430028728 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436188426 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437988268 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.681898708 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.448454389 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160582632 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665235316 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432115465 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466622182 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.438734877 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432198435 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.403812632 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432184866 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.433103652 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528617507 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.656696777 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437269101 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.401329499 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48922151 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645166504 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433894835 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433051037 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684785147 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.436131737 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.450166997 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3698541 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471430516 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433672776 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436163879 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44805171 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465098091 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508181769 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67487217 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.745279474 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.74761398 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891036544 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432377062 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434760025 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.45005489 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515578566 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435333879 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.447017837 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.434703463 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163357407 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322388719 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178834502 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7545668 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.437033298 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44503413 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435265232 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677351979 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435000818 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712445977 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436178645 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.434942282 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458325043 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436837031 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447562429 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653063489 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712873181 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435503205 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438377911 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442309338 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.436980682 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752421518 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.649906601 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997324211 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048183335 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438185498 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447410892 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.970562788 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714534083 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439044138 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435889022 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436687591 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.462385717 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.455707977 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.445201574 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435963683 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662194559 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748107162 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923688017 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.747627233 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.460113661 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.317737691 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437803161 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686149252 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282556897 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.681246285 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17996762 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.279711616 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694057183 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514970972 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682198228 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.438174256 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675478169 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.454405911 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439596297 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439391973 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439521075 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.438564632 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.750387534 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174939244 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699164454 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.445917266 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.455470328 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469965791 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.682435108 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663293146 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.277406191 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.662312041 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.758324636 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44836887 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.438924171 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182526472 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760978587 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442714785 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.446548802 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693686669 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4418689 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476603153 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.310140534 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.439302369 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05221238 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.655372213 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462177414 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449685844 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.283695806 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184247546 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.463496334 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998808467 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442809839 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448633171 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721777111 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.449324097 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.456154782 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.734739199 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.447506511 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.451419103 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692464792 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.170702851 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.34239441 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.444354733 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465197367 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.464632385 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442197141 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525465571 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443851892 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451155066 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.885839226 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44265671 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443985863 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456540699 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.442320034 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477482617 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.448731901 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444071443 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.453951664 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.436894359 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.422645876 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.458117154 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572532363 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049447756 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444140868 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059404538 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.784595315 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.692622999 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45663613 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.41937359 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.450744803 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444532891 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442578032 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444933427 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441906471 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062045751 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.456171941 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.763717503 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.454325118 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.65732709 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657543848 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.447052881 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690423319 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457266279 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468058905 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.413851555 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447047142 seconds)
  done (took 1011.98271008 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.45910763 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.469316587 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.475496598 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.527130621 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.471612895 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.575150422 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.446650774 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.5460945 seconds)
  done (took 21.264165948 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.448031814 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.445093981 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.443669139 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.447284154 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.439670056 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.986740277 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.442664652 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.44658431 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.464464159 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.446565501 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.44629719 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.148680264 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.447471422 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.450643912 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.448403213 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.446883864 seconds)
  done (took 33.698796569 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.709321884 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.623294249 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.010315288 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.514027135 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.462309149 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.446070137 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.80971602 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.478194378 seconds)
  done (took 28.34864165 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.452515543 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.453037346 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.455508845 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.452680475 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.454766172 seconds)
  done (took 8.563226579 seconds)
done (took 1265.63825754 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.453040337 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.453594229 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.452635885 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.453754993 seconds)
  done (took 7.107040337 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.417042892 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.419062839 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.420249657 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.433611514 seconds)
  done (took 9.984777417 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.858550458 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.060829187 seconds)
  done (took 5.213862573 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.448724778 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.21457958 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.20066534 seconds)
  done (took 8.159705396 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.735556569 seconds)
  done (took 3.03121982 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.896282444 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.94642952 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.441134408 seconds)
  done (took 7.580471409 seconds)
done (took 42.370980258 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.448888979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.210175121 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.595731728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.444786591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.606840402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.597788645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.723702481 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.440033673 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.44993154 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.448655731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.445672937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.605109813 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.711676855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.209723437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.711015799 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.209933029 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.60469663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.458039682 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.44043835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.463655035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.725101734 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.440398096 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.448119029 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.440596823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.605471295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.586709331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.444642427 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.210337234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.451778046 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.449773874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.5873086 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.441881613 seconds)
  done (took 84.957323918 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.457236311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.448825821 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.4462046 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.461284275 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.460768804 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.444439252 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.4605449 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.44089001 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.441933615 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.46025885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.460829913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.442801186 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.445172158 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.458963554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.442734287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.441787085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.46742006 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.442350436 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.47935791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.443263399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.464607298 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.456995962 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.452339711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.443055629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.460993121 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.442921072 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.463435143 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.442756286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.443508774 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.462444666 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.444285332 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.44441502 seconds)
  done (took 79.76923244 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.443929178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.445475975 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.442840165 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.463350774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.444846499 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.446666174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.466149816 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.462006072 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.444907502 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.463047749 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.478832786 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.445958028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.447411709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.444366451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.445648748 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.445354878 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.44386338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.445933437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.461478667 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.445516265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.466409439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.445314432 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.446455521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.444201896 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.447473938 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.446416363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.466674192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.448871933 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.446495627 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.445592524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.446243142 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.466982578 seconds)
  done (took 79.746042483 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.686723546 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.463229888 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.46661853 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.456861224 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.46449245 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.460079503 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.456154866 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.695113471 seconds)
  done (took 15.450631936 seconds)
done (took 261.21867191 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.455743665 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.477443508 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.507918715 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.455236313 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.47490737 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.483755545 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.689552694 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.483133807 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.676561477 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.457965861 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.47501708 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.460592016 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.393093611 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.608321974 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.456316551 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.474207679 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.449214805 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.448308907 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.472348335 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.707416471 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.485091765 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.4517283 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.470322748 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.466136213 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.431232839 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.533679755 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.531832739 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.624030996 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.585642515 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.532210785 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.44999947 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.480096306 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.483973588 seconds)
  done (took 68.936252061 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.456783824 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.463655803 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.466177867 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.465756973 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.466453044 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.464236787 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.457223395 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.4658578 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.466196575 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.465633441 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.465980588 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.466940004 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.467486005 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.465398381 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.465465707 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.44019249 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.456958134 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.466597043 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.459538565 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.440259451 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.467147511 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.467904631 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.468264496 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.466582421 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.465370554 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.467815357 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.467225451 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.467995247 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.466774549 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.466480798 seconds)
  done (took 45.209753203 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.467426402 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.453573585 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.451005706 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.465004194 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.458944975 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.464417697 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.806273313 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.467955977 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.464762635 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.463791294 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.456609636 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.471142791 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.518234836 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.460464307 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.46113751 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.469536937 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.468275461 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.462711481 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.466707059 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.476551636 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.820322672 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.469997054 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.80662727 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.477600514 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.471570655 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.461768769 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.467397781 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.471277601 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.462105644 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.45857319 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.430936656 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.821020286 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.465806921 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.458689289 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.441948808 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.478374858 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.470788496 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.469942822 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.464145459 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.461422321 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.824601536 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.469123153 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.453350055 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.455119821 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.4703843 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.47403964 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.457262783 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.470114127 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.770159824 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.475644331 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.462798419 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.472245594 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.480929705 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.466687379 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.765336301 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.472629757 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.46893136 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.454602323 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.475148277 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.82581188 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.477931538 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.463558424 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.461619695 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.468800013 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.460818198 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.473047131 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.48465436 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.471759438 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.458891395 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.472961146 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.463789221 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.471970231 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.472469673 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.463714896 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.464635763 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.462128323 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.471778919 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.465998224 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.46307034 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.82125608 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.475771079 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.464319036 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.840426792 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.476355598 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.484184242 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.481588221 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.47752334 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.538184427 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.815082293 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.435024483 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.485931198 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.464803346 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.830498609 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.480369195 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.472817486 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.459702381 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.481581919 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.474423885 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.455764848 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.464392913 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.473453271 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.481745771 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.467565263 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.475023232 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.82849252 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.479857957 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.465512223 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.47512049 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.541115125 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.476450262 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.480963448 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.472878311 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.841414096 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.477734035 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.48405649 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.459613338 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.467799379 seconds)
  done (took 216.102760652 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.464582121 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.468795471 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.463883993 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.481510046 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.461072 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.471853391 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.463532293 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.467790115 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.467144413 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.461882414 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.463140352 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.473949466 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.469717836 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.463315061 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.467644821 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.466680037 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.462203592 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.474749286 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.464434048 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.464128805 seconds)
  done (took 46.657758452 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.479217066 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.166587233 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.108212905 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.48282763 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.479413177 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.471312005 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.5408415 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.484765322 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.477583912 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.84840452 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.689420927 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.485517142 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.481126483 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.479792817 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.109743467 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.457553077 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.827295142 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.140905814 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.479284447 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.137011082 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.452386352 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.479763921 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.469500392 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.137894196 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.839741389 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.815656107 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.543110615 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.145070663 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.479932898 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.478872582 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.139131589 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.480196844 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.473873515 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.124474781 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.481470624 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.496107586 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.47967612 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.54276181 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.545317275 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.835383626 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.146488694 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.826374383 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.493060469 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.651108309 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.483419613 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.452043499 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.153488393 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.482961278 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.453738377 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.483952987 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.486016926 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.128562791 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.474238814 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.127176569 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.481928015 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.481481204 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.142501957 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.129466339 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.120101596 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.680753899 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.473570015 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.820135747 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.482593939 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.154058729 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.482643619 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.483241225 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.483909065 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.683476081 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.144701152 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.82256477 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.834010771 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.834408156 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.482572988 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.554341305 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.48511787 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.836187141 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.550718426 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.899039171 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.837578648 seconds)
  done (took 135.809087035 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.790125325 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.599987466 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.909307047 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.109439372 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.034678024 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.627076786 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.609198202 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.745039179 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.488266584 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.584522245 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.236818843 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.579601261 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.30423703 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.553930012 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.593371471 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.60931504 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.939389368 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.469609354 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.251386471 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.247104777 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.495783722 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.595552957 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.289755606 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.88840186 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.469714119 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.273421022 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.470172187 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.058966803 seconds)
  done (took 57.145170484 seconds)
done (took 571.161651782 seconds)
SAVING RESULT...
DONE!
