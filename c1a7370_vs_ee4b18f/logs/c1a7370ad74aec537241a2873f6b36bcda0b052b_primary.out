cset: moving following pidspec: 2318
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.582105653 seconds)
loading group "string"... done (took 0.539109464 seconds)
loading group "linalg"... done (took 9.028535839 seconds)
loading group "parallel"... done (took 0.182843286 seconds)
loading group "find"... done (took 1.325450481 seconds)
loading group "tuple"... done (took 1.976021702 seconds)
loading group "dates"... done (took 1.372377831 seconds)
loading group "micro"... done (took 0.198419259 seconds)
loading group "io"... done (took 0.545367964 seconds)
loading group "scalar"... done (took 52.714988351 seconds)
loading group "sparse"... done (took 14.139917626 seconds)
loading group "broadcast"... done (took 1.336130036 seconds)
loading group "union"... done (took 10.551085617 seconds)
loading group "simd"... done (took 3.117041816 seconds)
loading group "random"... done (took 12.098641604 seconds)
loading group "problem"... done (took 2.24391667 seconds)
loading group "array"... done (took 24.402721184 seconds)
loading group "misc"... done (took 1.171597008 seconds)
loading group "sort"... done (took 3.800600591 seconds)
loading group "collection"... done (took 19.581368794 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.640913832 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131374161 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.218031737 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.30209822 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.256103502 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168789614 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147132344 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.273272734 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.726602052 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.22884539 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143787422 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.579418995 seconds)
done (took 6.662736375 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260068911 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.231748771 seconds)
    (2/2) benchmarking "String"...
    done (took 0.18263234 seconds)
  done (took 1.191718163 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.085234758 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.16542704 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.114868101 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.102239317 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.101828227 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.120045045 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.101174233 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.118656973 seconds)
  done (took 1.60498213 seconds)
done (took 3.922059861 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.50049074 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.879838887 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.524958486 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.171724729 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309358404 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.304172111 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.351687893 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.210558403 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.097093098 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.097759086 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.183792859 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.418321503 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.449036687 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.981936478 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098314822 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.125195097 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.129399373 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.801738169 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.086078547 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.120633382 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.525649239 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.208512794 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.106751196 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.137013321 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.194638624 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.144149812 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.175712902 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111405064 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.67246601 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.139665082 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.195826195 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.105947595 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.169610996 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.200253022 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214632898 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.101647824 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.698472934 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.207575732 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100935807 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105826216 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675241016 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.126956924 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195123935 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110555846 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.097860205 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.192624606 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.104453048 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.08356588 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.123205442 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.092524264 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.174253602 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.458674145 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.114327863 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.180833838 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.099966878 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.701551686 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.106113761 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.283584885 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131569891 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098528996 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.098788278 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.095495467 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167091185 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.102344487 seconds)
  done (took 20.791360684 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.155863305 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.174295528 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.083804536 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163829274 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.128717044 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086196513 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.109878495 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084785831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131365069 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.191386147 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.143492515 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.161215272 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.099375859 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.095380784 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.133142471 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.254976353 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112449983 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12911563 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093928619 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.097304766 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.147712275 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.103178985 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114250802 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.100080447 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17624923 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.212896576 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.118264406 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.132859586 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096197141 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.105624724 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.152472549 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156598167 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.103817177 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095240912 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.205097272 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.117454287 seconds)
  done (took 5.569018091 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.202168365 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.13133209 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.223938581 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.168938633 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154135048 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.177698125 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156428642 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.309148546 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.231900666 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.172103731 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141756584 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113305441 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106483646 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087728806 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.087611476 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.533074771 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145010401 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.184179795 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.145091155 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117796328 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.091456071 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.415327203 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092961946 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.109626331 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095884248 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.077383183 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.211569802 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113525626 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.090775782 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.113478784 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096332802 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143601104 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202526843 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124431227 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145168115 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094013224 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.088557096 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.226408781 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119338841 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085303864 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.115655045 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146657304 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123328592 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.11280207 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126646512 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.233011071 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.093119023 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11348629 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.095358124 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.207390404 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.15950856 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.11201425 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.304361479 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110369047 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095676725 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.114646845 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.255853968 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.14174105 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.090587159 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086658837 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.116953 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.088715183 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.445277815 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118572696 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.885015694 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.107879869 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16957809 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.150757343 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109071817 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100664337 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094189804 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114183704 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112318464 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088859888 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109527822 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089273171 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089491762 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.086315908 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.113688308 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.090298306 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122047698 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095857575 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.088388604 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.108608294 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15731618 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.108593775 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.128900988 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118662371 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.112927822 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.090097802 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138916375 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092932719 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092186955 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.188086557 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096323345 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122801005 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096536089 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.156606448 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091022532 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.218923882 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09155148 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117060428 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.112558522 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138695817 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111760357 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088508185 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114242739 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.088151014 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.088408757 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176110341 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091921675 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.091532575 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091901306 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.122169238 seconds)
  done (took 24.331192669 seconds)
done (took 51.467370242 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.485772054 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100292351 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098724227 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.120324007 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.097873165 seconds)
  done (took 1.767585145 seconds)
done (took 2.603604935 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.332091099 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.209317236 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09272749 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.207867705 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092966134 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.22093898 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.204561153 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093558771 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.232396619 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094448678 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.212491665 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093273767 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.11817193 seconds)
  done (took 3.065829432 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106210767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115378507 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.12899666 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109834983 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090187444 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105576109 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.126549369 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11845027 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105775375 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119665407 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090562358 seconds)
  done (took 2.052584181 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103793368 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1129829 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096146738 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125743379 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090817855 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104526722 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124131824 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115045271 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103517203 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.12104189 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091168478 seconds)
  done (took 2.027036512 seconds)
done (took 7.977776277 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.145149222 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.195321986 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.156498378 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.298153276 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.373229093 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.268769456 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.693739953 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.164785702 seconds)
  done (took 32.289232989 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.125729752 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101600666 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.174199486 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100385502 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103421183 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.12823627 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.104403128 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098922352 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.121683908 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104617229 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101277988 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.120140443 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.105790229 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099999252 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102433584 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.123434005 seconds)
  done (took 2.716123804 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.154385048 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.126623599 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.125793939 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.105646567 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100829391 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.129197752 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108603056 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102470957 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.123066031 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102198551 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108209761 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.125100914 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104104332 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.099403388 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.123395994 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.131164 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099420396 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.12367643 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.129029266 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.103533583 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.126850806 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102178547 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.121728912 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106358951 seconds)
  done (took 3.706424491 seconds)
done (took 39.549690554 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159768699 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109690108 seconds)
  done (took 1.108656795 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.150320456 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.166331348 seconds)
  done (took 1.161512481 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116767266 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094007647 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.148179519 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11156098 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096094878 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.117572034 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124435072 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.116311293 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098947826 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097683477 seconds)
  done (took 1.969130485 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.098502499 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098626439 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.131504426 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.15155863 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.125830648 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.10225174 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102480052 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09901435 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.124583329 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.097174173 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106199045 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.137115586 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102105956 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.137226883 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103607099 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103471606 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.12627662 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10265538 seconds)
  done (took 2.900832289 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095510635 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096930463 seconds)
  done (took 1.044038464 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097688198 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094394951 seconds)
    (3/7) benchmarking "month"...
    done (took 0.098044637 seconds)
    (4/7) benchmarking "year"...
    done (took 0.119379278 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097013669 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095641117 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.116680585 seconds)
  done (took 1.569923119 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.527205573 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.22751518 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.397411727 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116886597 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.156588812 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.354939513 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156429114 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112352445 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109660754 seconds)
  done (took 3.050568218 seconds)
done (took 13.650181388 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.100753107 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.229409246 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.663258341 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118132523 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.095241697 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.179185216 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.301875917 seconds)
done (took 2.546272438 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.382333813 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.160109982 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.096409775 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093791856 seconds)
  done (took 1.585367281 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.09055052 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102578941 seconds)
  done (took 1.051349124 seconds)
done (took 3.496355426 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094675599 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.117498815 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.111761525 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094417154 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.094002477 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.212210344 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.113021511 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092486557 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092945947 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092783432 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.115417588 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.095290712 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09515143 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11432099 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096055439 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094752443 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095625212 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.115413859 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094895389 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09393996 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11500712 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097061632 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094209929 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094113762 seconds)
  done (took 3.41970282 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.117203479 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094549294 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.114991272 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098110601 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096947628 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.116249081 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098522457 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095748415 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.119251358 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.0995761 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099777637 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.099347846 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.118204501 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100527482 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097215194 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.119894265 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.101664123 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095617146 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118691196 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10110246 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099865607 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117561697 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101316374 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100390864 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.120711316 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101499905 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.098221339 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.117768752 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101648058 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100322171 seconds)
  done (took 4.02442596 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.103398119 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092336326 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096501584 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.128437033 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.096170612 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09838675 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.115150944 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097801353 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.10023965 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097887442 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.123047819 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099892104 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095978022 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.120061613 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102821235 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102462612 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107404094 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.119175096 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097390288 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.100225877 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.123239721 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.098016161 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097644901 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.098832318 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.12133155 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.097926038 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099664092 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.120282312 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.103989226 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09931383 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103147129 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.123945021 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098343231 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.109679326 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.123678949 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.098255761 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101770735 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.11567619 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100041652 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095019169 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09595614 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.121983013 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.098031345 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107102909 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.121161082 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.103249124 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098163018 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100375198 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.121127233 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103711739 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096056712 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.117210932 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.103508906 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.101669135 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102129653 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.117456552 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.100327263 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096056537 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.121123517 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.100747712 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096356539 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.097119628 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.12573696 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.101017734 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113942421 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.127669567 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098346643 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.10136002 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.120638614 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.107593379 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.102793032 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.129213842 seconds)
  done (took 8.53816886 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.108404425 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102494216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094008252 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.11345585 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094576144 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094130804 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119028693 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095622547 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097251774 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123970626 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099252223 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09725364 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09685775 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116945654 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094979332 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093926832 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12088511 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09414809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.094299016 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114165558 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095651828 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098583902 seconds)
  done (took 3.125472175 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238908705 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101235848 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142499916 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127019456 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111702201 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.126571816 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100363006 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100246021 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117194194 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10498121 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102981404 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117996049 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11239442 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102372934 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122802746 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105652806 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116600867 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104736801 seconds)
  done (took 3.025777349 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.108541923 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095793785 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.136802342 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096606423 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097117509 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096850831 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120600656 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117929022 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.115779964 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097998579 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.103677553 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097191496 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.116752716 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097632816 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097047151 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.118862068 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.0976503 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095664382 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123800344 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102351461 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100425138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123691272 seconds)
  done (took 3.230127157 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112189088 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096665998 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.13374369 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099856339 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098200716 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094733802 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.122114386 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096068915 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.101433414 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.115925913 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097418202 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094725968 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.130362417 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096971187 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10049389 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115664674 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096990451 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097283735 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118436164 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097282029 seconds)
  done (took 2.987488859 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182454754 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13263513 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116023915 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121116323 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13498617 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115650948 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120869552 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.135038853 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114177444 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144414602 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115986109 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114563604 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142115092 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122054648 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114198167 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.143400647 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121597249 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.141490834 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116542372 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114208844 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147121392 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114783288 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.141184347 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115111666 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113995284 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134710921 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115564076 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118813085 seconds)
  done (took 4.440179238 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097047058 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096060355 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094555405 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.114112138 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095030147 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09507258 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094516365 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.114228352 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095216167 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093376752 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.114592945 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096287452 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095104947 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.095600717 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115292762 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09633302 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09487372 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.11332951 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095664258 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0939744 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095013294 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116144059 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.098019698 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095165295 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094319453 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.118056009 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095383114 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094047017 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114549222 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095190003 seconds)
  done (took 3.89424027 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.107846151 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104015685 seconds)
  done (took 1.091526972 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.103603816 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110330701 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.094312354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.116310887 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101966632 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095133655 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.124655361 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101377156 seconds)
  done (took 1.728566305 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.153192107 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.171988339 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.101931046 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10814663 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171939551 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.165629826 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141094075 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100593881 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.118970284 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.092578248 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.16813902 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.091760833 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.098831353 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116178722 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.100562003 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106358493 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.115189907 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107841712 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102399809 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097858477 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121467581 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105745425 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100683809 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.126335781 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.094527992 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.100696833 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.123960016 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110623693 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095345059 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.122971212 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.097838001 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095603226 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.123258811 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101659487 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0965537 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.172752128 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107295322 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116854591 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101473969 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102386916 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.150435429 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096608936 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.100616586 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.116857768 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104027618 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101485956 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.120826753 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097245921 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091994987 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.094795127 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.117172322 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095487132 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095363362 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.12006126 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.100589672 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106958897 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.118555474 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.097042029 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.096149169 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.115098969 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.099382434 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.095733837 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.121360359 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100764018 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101117829 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.119622272 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100882325 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095953556 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096897755 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.11890414 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.101015957 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114193217 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.121929135 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101492184 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101292456 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.118311314 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096945211 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101443771 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1197193 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.102036944 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100790573 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.145955512 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103004065 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094972159 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.115807277 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104700575 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.0992793 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.11925565 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.093287742 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108730461 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.118401227 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09900425 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.092929946 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097342431 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.11710556 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101518674 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.091526721 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.120504683 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095885332 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101678924 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122118433 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099106149 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.100733338 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122760731 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103651834 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.098337545 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.165538487 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096732547 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.094202859 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.119729839 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10268979 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.093677662 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.120169183 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09572484 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096604914 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.11447767 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102991854 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.099176202 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.119640871 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102780192 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102304931 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.120071403 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100522472 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097017325 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.095946502 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.121533244 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10558932 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10141204 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.11953827 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097728732 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098183621 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.125519197 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.108719819 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101838293 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125328614 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098348675 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097122648 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098485135 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.125321205 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.101885373 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.094693821 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.119628526 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.102030222 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098806495 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.121736878 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.102142607 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.094982321 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.113378604 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.101688753 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.094970475 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.118319295 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107785182 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097361096 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.122044236 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101821613 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109056359 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.119554297 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104107506 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099955307 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102547914 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123400333 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.093017748 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096900096 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.121370551 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.104288121 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.096270864 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.11713448 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098254616 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104521441 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.111918155 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102613625 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.093410529 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.096074223 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.123630144 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099974555 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100803438 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.116787216 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13969154 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108859507 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.124257538 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.101061899 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.100374385 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.121739761 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101444055 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100547752 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122575043 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103626431 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.10132236 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.119326836 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10345168 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.096781253 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099109058 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119310835 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103216049 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.092332943 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.120856004 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.093854421 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101508068 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.124622077 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105581213 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10263842 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119597008 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101407239 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107021024 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.116568172 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103721482 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09317166 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102307548 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.12826492 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106531094 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103155416 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.125270262 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099006487 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09694688 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126624303 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101554759 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.101208738 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.117992952 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.095792529 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.095071408 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104243141 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.12818914 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097619057 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096759947 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.124407733 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104900919 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.098537703 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.118607749 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.108293963 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108815137 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.116767586 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101829305 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.097229152 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.119140216 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110679119 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094223331 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.118346067 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.104079033 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102702594 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096500565 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.124645611 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.1010425 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104291176 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.122468201 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101499606 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098671826 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.125846101 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.099461965 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09683945 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.116958784 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10246516 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.094154537 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098398188 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.122993497 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.099737353 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.096605339 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.126546751 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104655732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102923891 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119478257 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103678559 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103445919 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.124679088 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100055282 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103464976 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.115667356 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096228334 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098019817 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.096403492 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.127956076 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103560844 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.108242525 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.127424446 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106856738 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.109090621 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.13110663 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106129211 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.110317637 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.140441216 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103290982 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099820502 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128052693 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107965885 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103119091 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.126587868 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.105168946 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110057563 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.130739311 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112326743 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105039859 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103517886 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.133373564 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104571224 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106047888 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.1254542 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105461028 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.096634249 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.123148485 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099184955 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10501426 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.116406467 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.10553506 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105667131 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.128829682 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106998049 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10578517 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.123549821 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102066418 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10365472 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.109093257 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.128503844 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109397147 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105967862 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.128336916 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104621369 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103468414 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.133453035 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.107149453 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.111029772 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.121216476 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102739284 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101081584 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.108931331 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.130504961 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.109456708 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101314708 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.131852681 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111855189 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.106890744 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.123645688 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114420481 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106816873 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.123411659 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107875218 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.094363493 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.11852754 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107744786 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097667013 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10219756 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.122794446 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100234532 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108795003 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.128701562 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.106809358 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103688338 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.123231069 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.106389014 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.111241285 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.128760238 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.110337134 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.107440033 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108861506 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.12557608 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.1092801 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105435117 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.12257151 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105072246 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101597043 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.123944456 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.100113744 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10375752 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117882427 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09607281 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095236437 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.098220672 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.126627993 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.096519453 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.104531117 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.127221398 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10087436 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.099513123 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.126489469 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.099655495 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104069751 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124235048 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101747248 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108608581 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09848051 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.123059568 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104969529 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104252621 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.116487584 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101942602 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102539865 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.133749846 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.103730787 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103444658 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.121873284 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105211817 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101577261 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10426508 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.126255242 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105107608 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.094831751 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.127118978 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106683306 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101015728 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.119435878 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100915955 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097534455 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.122797018 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.110352594 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.100622093 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.131708675 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105843832 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.099803226 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.099668615 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.126370708 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10214739 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105215262 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.120074274 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107055265 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095365424 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.126314455 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10244333 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104662539 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.119355191 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097831044 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1042499 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.125494644 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107129111 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.104267161 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105354857 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.120816214 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.097734892 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.1028504 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.124188215 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110154963 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107422154 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.122155956 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102017819 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101106316 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.121316794 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10881509 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.096288077 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.09827309 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.124858273 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107515049 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.099473105 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.120781993 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104613501 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.100241374 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.128205407 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.102451815 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.096422215 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.122513967 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10795316 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.099737183 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.120423296 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100919869 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106155477 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.121196569 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099780095 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.096332455 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.128444705 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1062893 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106082189 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106117335 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.124646766 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100587875 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100525362 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.128521603 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.101602381 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102345423 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.121821149 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105645594 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107534513 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.117917462 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100271551 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109448195 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12555361 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107501026 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101365483 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.121913008 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107959172 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106946001 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100948162 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.120535577 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098280309 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.099669862 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.118848994 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102180208 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108184425 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.123173404 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.101369142 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105469215 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124684891 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103236239 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100773279 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.09655053 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.129227076 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10106588 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.105388303 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.119029753 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098267036 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101516448 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126641732 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103202319 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.103488551 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100915322 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.126662165 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098421794 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.099706503 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.128604924 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106801692 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10454712 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.12396827 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102398607 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103031801 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.131027511 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.10325802 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.102252287 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.131280496 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108244236 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103522378 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.123221052 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109081347 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106103411 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102461622 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.129399133 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.101351235 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10150655 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.130209734 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109635135 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11243836 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.124643951 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097849727 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10410845 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.12317029 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.098346855 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.1064345 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.128558914 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108813955 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.103558805 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.12074535 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111876776 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108263156 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.123719415 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.1021808 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.100811171 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104567411 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.123201065 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.113103937 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099779912 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.131464785 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10825088 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106574934 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.131231206 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098724116 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108918517 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.127499616 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112400313 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101229705 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.097459894 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.123219836 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103186139 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107409378 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.131249199 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105237177 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104431116 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.125731922 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105714744 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102938838 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.123040732 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11000476 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106101724 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101221041 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.12913467 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102802185 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103417559 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.124261152 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107917896 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107938481 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.126231398 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113694908 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106218999 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.123258903 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102855443 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10503487 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.123029031 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.106542988 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105813448 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.099509127 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.120026223 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107555052 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107717449 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.124970167 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110709425 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108202495 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.123232493 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.107679672 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108201522 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.126999813 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104152302 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.105474322 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102862352 seconds)
  done (took 66.305495135 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1544138 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108638486 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124307032 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103189744 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121403757 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126616825 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103057385 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102904979 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.125263798 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114357783 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101723531 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123741955 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120375377 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123166071 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.143155817 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113030118 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124690986 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10429443 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102135977 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103281788 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142589002 seconds)
  done (took 3.421180385 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.122426409 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117496687 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136413179 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117570933 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109451232 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.137144697 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115641123 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136892155 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.117419923 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110216006 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.139460711 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11397136 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.131753583 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111845154 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111487232 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134240123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117967325 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108285834 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.137334025 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114780121 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.133798355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116199324 seconds)
  done (took 3.626463329 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.113527163 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107290805 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.108371091 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.125925312 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10695445 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.101976378 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.132671618 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.105582225 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111550919 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.125735773 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.102398347 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.105139223 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109053949 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.12624599 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100851076 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102551331 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.134305578 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.108753143 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107996797 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.123195996 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.118471304 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.102859534 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.124260535 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.101243091 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114843863 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107908009 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.125781341 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108084367 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.098414699 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.129853109 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.10516619 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104292395 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.126812238 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.1017336 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.099189104 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106339047 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.130986568 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104101569 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.103552273 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.127989713 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.104812532 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.107546238 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.130831377 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.104768677 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10411304 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.125514342 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109646462 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.103044701 seconds)
  done (took 6.329842876 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.135045589 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164166383 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.107366281 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13374061 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.141778915 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113652279 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106100622 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136613649 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105557305 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.129662974 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120057383 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117980848 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.132137658 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111910429 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109310692 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.131797729 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109348988 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105249685 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.133962294 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107937449 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110373941 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.131256723 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118712758 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.137517613 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11184065 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106680297 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.129246455 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11191802 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.116229468 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.134547187 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112482521 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11130973 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.140887806 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109467453 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105886691 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.132400363 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119845636 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.129541196 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110355152 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106677694 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.130154461 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113373962 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109613015 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.142271489 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1106315 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108917217 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.131273351 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106973054 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116721187 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.131936696 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.355406185 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117562362 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.133877233 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108274519 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110178397 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.140895582 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109125001 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.127432536 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111419152 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116264326 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.126796731 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111545411 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117158421 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.130192632 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114770019 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117168834 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.132736816 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111377891 seconds)
  done (took 9.518059642 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.143262297 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11104581 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.141750895 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120341208 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112087496 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.133974674 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112278454 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.110767145 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134176401 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117422967 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132674142 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.209743729 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.13131009 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116473911 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110411872 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.13419229 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112205051 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110816425 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.134319534 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113411801 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110233601 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.141668656 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111416284 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.141004236 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123575358 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108325267 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.134136612 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112125587 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119505416 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134621741 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122344932 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.133637588 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113887625 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119000268 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.145686774 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112447941 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105092231 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134313996 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112448572 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112126187 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.131740437 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120698844 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.13338625 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110349706 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111793753 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133945293 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122469631 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122831242 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.14011141 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1172454 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.134276885 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122522222 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112613184 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.134821996 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121459055 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147421931 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122324796 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120415148 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135302706 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121932653 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.141210795 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128855222 seconds)
  done (took 8.728150163 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107195699 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105091606 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10375108 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.126178203 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106449362 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.103904488 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104569316 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.128554765 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105398074 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.105505997 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127923212 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1059169 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104706042 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104141202 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.127951573 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105656685 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103486758 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.126124832 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107347907 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10451898 seconds)
  done (took 3.168068054 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.116224181 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123059246 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.127830972 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115216411 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10798021 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.134171959 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108495089 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108338847 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106107923 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.131484101 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117180103 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.137769717 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108213483 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113372423 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.137195413 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114224062 seconds)
  done (took 2.861182782 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.126798601 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124443909 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.203584692 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.112659846 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.130944392 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.115351018 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107305124 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.134201107 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107139297 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.113643744 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112292894 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.1344696 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10909988 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.110820006 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.1332397 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112014063 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106417284 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.13505918 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110486404 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.198501845 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.112921144 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108555227 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.13055508 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.113154131 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109375184 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.110270043 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.140610493 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108617681 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.110228386 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.13265314 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.11050515 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116502279 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.131194314 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.115342942 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.109319372 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.132338288 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10969118 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108991484 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.134494725 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110693524 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110515975 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.129678599 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.111021063 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.11163033 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.105921533 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.132146129 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106894263 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.115106473 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.134973972 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.110692266 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107956432 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.139521223 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.115445827 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116322908 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.138183013 seconds)
  done (took 7.638075198 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.121163812 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109027454 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.14146613 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107557616 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.109897636 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107890585 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.133807373 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109061504 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107431074 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.13073656 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110624303 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110016751 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.130517622 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110652672 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109025408 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.130987679 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.107596196 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109389401 seconds)
  done (took 3.052854602 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114307109 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107522936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.112879778 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.131390345 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.108050281 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107330952 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.129581217 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107716026 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106997359 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.106739459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.130719396 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108816522 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106924317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.13088238 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10829305 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106968442 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.130700193 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109312916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10753729 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104984381 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131490953 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108882921 seconds)
  done (took 3.481229784 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.125710149 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.196754674 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.120097643 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.208869682 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.1079646 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.105764556 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.142435172 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.109022793 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.123199839 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.131211402 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.10758094 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.106315683 seconds)
  done (took 2.548201051 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138887285 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147335814 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13237448 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111121351 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117397082 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135363001 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113491989 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112208416 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144227249 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123664134 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133575715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122018006 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120497753 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142621834 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11802238 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138668177 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113824922 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112231953 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130777106 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130153273 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112098476 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143898612 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113723537 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111744916 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135811781 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121001427 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142713991 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125396618 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112272787 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143620913 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118278435 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133408579 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123260519 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123828607 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132065406 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122748096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11136064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151284748 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117853379 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141999693 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110590219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117147876 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144096895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118196664 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14259365 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114862764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117197359 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135545629 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113698895 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134377269 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141378413 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121341687 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140584632 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122454909 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119472315 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157502925 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123253028 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143767126 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117414307 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147206148 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121681089 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118122764 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143560869 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124587051 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141402233 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120923807 seconds)
  done (took 9.398618791 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151303246 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10915219 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136272607 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126737593 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142808085 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114638625 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11326462 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13483092 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114061396 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109350405 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.180227655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113713274 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123776333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145612324 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112962789 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135854172 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114069829 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120596752 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133106931 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136511996 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135341955 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123937524 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12118678 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144505253 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125727348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141072676 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115068795 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11277035 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136004612 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114988675 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118338347 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136839465 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122034228 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108873284 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145080281 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112863471 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135185752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120558253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1131388 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141563469 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122617581 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12779826 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137609609 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114385766 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148283077 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114468127 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113441585 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133229842 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114242292 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110353132 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149024733 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126162005 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147795843 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123022388 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112811873 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136771892 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114135664 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112502161 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136936913 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11952236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142855588 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11450591 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134934351 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136667922 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114683046 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143764968 seconds)
  done (took 9.371162458 seconds)
done (took 179.811155435 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.161773279 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.201330005 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.157766065 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.190145279 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.103843825 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.13710784 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.159690241 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.159121655 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102788209 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.127505603 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.103615019 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.105609177 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.193536767 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105655175 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.102882853 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.129200986 seconds)
  done (took 3.206695965 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196023738 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.32350408 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.120614981 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.130629971 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.112750312 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109483123 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.131066291 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111022491 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107824791 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.140822322 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.112025507 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106324194 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.139388319 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107828157 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.108349115 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.13352912 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117642845 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10987776 seconds)
  done (took 3.392441339 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.129672306 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155302954 seconds)
  done (took 1.265824702 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.141136319 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.209681751 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.287218311 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.184292894 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132023436 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.149518558 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.163752701 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.144803121 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.189916821 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.145383363 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123046441 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.107850368 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.160891942 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114213424 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.143235635 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.110336035 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138932422 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.144006218 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120535861 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.111109447 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.155277415 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.114838142 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113516042 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.142748346 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17913791 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.144359044 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.114141832 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.111782007 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.134447484 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119217995 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115874106 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.148654865 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122422731 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.185463875 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113274443 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.181950023 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118525536 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.133465665 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.120022745 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.107995706 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.136579269 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113656619 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.149265662 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.110601314 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113176307 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.142724589 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.115161394 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11283395 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.141651569 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11971928 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.139897726 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118266508 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179494396 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121464645 seconds)
  done (took 8.493182029 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.861031973 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156461188 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109514826 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.013905346 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.161120709 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124282794 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.857915807 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.15648962 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.264267683 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.896577161 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125359772 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.145109598 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.251090876 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257561631 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.208563418 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360383323 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.715722409 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12487713 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.138686568 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.176384646 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116716058 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16041188 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130479329 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.455514106 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10997282 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.132301501 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118952101 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12160104 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188278426 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.109914549 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.136408072 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.20765103 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.272721548 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217617246 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132861953 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110251228 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108091893 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.195811989 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280430184 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22819767 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.197918313 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106174514 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108025839 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142278364 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129992797 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.127746424 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169859351 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.201615998 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.201756856 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112958867 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.145631999 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119138623 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116067481 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.190132979 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.129621638 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.366557885 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363242138 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10859523 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14064951 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125060166 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280610035 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.131183265 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.247073734 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136752547 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225037951 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108442842 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82009803 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.195752288 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.130620637 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117245997 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115643215 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139814105 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118050015 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191809329 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392299135 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145750108 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113722666 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108128408 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238601567 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.133585491 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110168286 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19125343 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112186692 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116402837 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146628408 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120296186 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.199607143 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.279918738 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120914538 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141983531 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11567705 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120728736 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.133770736 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218372939 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.262346535 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163133152 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.244571213 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140242307 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.170092912 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.194785054 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115593814 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.200584048 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.139994812 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126286958 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117332326 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.257268113 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143482133 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.133018195 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116443991 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11877322 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.171003084 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113232234 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140610196 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175792219 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.475999116 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.195004671 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.106193264 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113181698 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143076413 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189629268 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117916878 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272018965 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118852789 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.196226332 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.138489236 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108992429 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117257251 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.192960381 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119528341 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142936578 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117708107 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.143056839 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258691624 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231298797 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.146793095 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254912451 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177747571 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.142638183 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202495642 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119710376 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19945506 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119786702 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140122751 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112573614 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80858796 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122921349 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.142097285 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11510625 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.220014407 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111008156 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111671285 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.133145668 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108776693 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825791122 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112448215 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.130082512 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.114206263 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116844997 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.141374092 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119463476 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115639533 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190961699 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252292241 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.147468022 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117246696 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108493741 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.189288566 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.134169619 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.112478229 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.110264461 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109583866 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.143470809 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114843731 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11200662 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202037244 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.188085806 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.240611308 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567241891 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.133395315 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.112585029 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250072796 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109268235 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325054017 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144180484 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.244386275 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.197737314 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108374615 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367321259 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.197211513 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.22224737 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.115626489 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.201164835 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108677417 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116985818 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.190827408 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109346121 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.142325641 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.188116185 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12590723 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122621683 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.219683497 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112533779 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.260376361 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108766797 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.199609556 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111156665 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140190066 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33311213 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111275141 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127165317 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.192094887 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137746819 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.113087306 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.716086126 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111171583 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120675858 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.143706894 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.244496855 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.195885389 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11878757 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143340256 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124906595 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.192824477 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.24149006 seconds)
  done (took 48.461233304 seconds)
done (took 65.788343734 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296601606 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265449671 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.315792957 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22415508 seconds)
  done (took 2.178711201 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.299722482 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.175834807 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.244678487 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108982213 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.259299597 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108225551 seconds)
  done (took 2.203715312 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.506146838 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.397704094 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.356284432 seconds)
  done (took 2.27004317 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.258459874 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.25575944 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.360407573 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42118222 seconds)
  done (took 2.421638538 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.31102607 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.143983521 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.138168411 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.226814557 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.293126503 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268285295 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.163256306 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.213352771 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.190316084 seconds)
  done (took 3.002836579 seconds)
done (took 13.077491999 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.310969974 seconds)
    (2/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.233344022 seconds)
    (3/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.355010184 seconds)
    (4/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.262807056 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.209751424 seconds)
    (6/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.332253767 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.144676453 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.143444266 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.215305615 seconds)
    (10/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.277182496 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.25362884 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.154208339 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.322952242 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.21116752 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.241098956 seconds)
    (16/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.144899148 seconds)
    (17/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117175016 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.237272527 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.265396601 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.162760384 seconds)
    (21/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.210284235 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.250285366 seconds)
    (23/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.235421224 seconds)
    (24/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.201841294 seconds)
    (25/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116828626 seconds)
    (26/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.155844641 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.14179928 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.11589775 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10839324 seconds)
    (30/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.222719885 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.244523605 seconds)
    (32/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.115525209 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120638164 seconds)
    (34/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.166464627 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.163014093 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.203923866 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.171966041 seconds)
    (38/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.178473933 seconds)
    (39/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.13334977 seconds)
    (40/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.143989319 seconds)
    (41/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.306598394 seconds)
    (42/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.244627059 seconds)
    (43/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.212739353 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117700026 seconds)
    (45/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198238054 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.14381174 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.117381452 seconds)
    (48/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118292298 seconds)
    (49/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.171553824 seconds)
    (50/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.241999044 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.173049768 seconds)
    (52/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.198547278 seconds)
    (53/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.298555625 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118362249 seconds)
    (55/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.191818838 seconds)
    (56/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.161536378 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.14973084 seconds)
    (58/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116518152 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.136534965 seconds)
    (60/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.094529547 seconds)
    (61/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117281873 seconds)
    (62/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.115646058 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.14649675 seconds)
    (64/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.095515381 seconds)
    (65/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196924442 seconds)
    (66/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.121079748 seconds)
    (67/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.094549614 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.117279164 seconds)
    (69/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.274835687 seconds)
    (70/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.205660352 seconds)
    (71/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.188206594 seconds)
    (72/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.095162299 seconds)
    (73/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117294054 seconds)
    (74/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.185396407 seconds)
    (75/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.094692319 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.13681838 seconds)
    (77/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.171335445 seconds)
    (78/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.183321243 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.206894374 seconds)
    (80/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213836881 seconds)
    (81/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.095667841 seconds)
    (82/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.304692231 seconds)
    (83/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117803538 seconds)
    (84/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.095016127 seconds)
    (85/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115177241 seconds)
    (86/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.248383311 seconds)
    (87/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.095366039 seconds)
    (88/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.164963442 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.221100348 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.133312625 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.141926093 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.136696544 seconds)
    (93/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.19492765 seconds)
    (94/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.121146629 seconds)
    (95/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.190962187 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.095982951 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.142623282 seconds)
    (98/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117692483 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109810414 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.142308659 seconds)
    (101/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.129317953 seconds)
    (102/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.094145291 seconds)
    (103/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.202297992 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.135269706 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115854091 seconds)
    (106/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.093400809 seconds)
    (107/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.12901639 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.098975959 seconds)
    (109/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.096125131 seconds)
    (110/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.112438411 seconds)
    (111/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.098445761 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.146879982 seconds)
    (113/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.094488509 seconds)
    (114/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.188444451 seconds)
    (115/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.195071896 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113102272 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110179984 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.119712848 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.09660939 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116753809 seconds)
    (121/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.093995925 seconds)
    (122/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.094467534 seconds)
    (123/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.122075657 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.18793895 seconds)
    (125/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.094529928 seconds)
    (126/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.094105751 seconds)
    (127/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.222023782 seconds)
    (128/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.096491249 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.095407738 seconds)
    (130/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.147839988 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118337095 seconds)
    (132/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109623195 seconds)
    (133/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.125768471 seconds)
    (134/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.120839795 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.117446264 seconds)
    (136/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.094259695 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.145747709 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.136012582 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.135667803 seconds)
    (140/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.121351342 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.118607256 seconds)
    (142/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.095978112 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.117222408 seconds)
    (144/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.143638958 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119815156 seconds)
    (146/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.216332875 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119966116 seconds)
    (148/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.095575645 seconds)
    (149/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.095328014 seconds)
    (150/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.095342074 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.138343927 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117517857 seconds)
    (153/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.217904833 seconds)
    (154/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.095509335 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110901198 seconds)
    (156/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.15770927 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.143450114 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111876844 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117045043 seconds)
    (160/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.164361417 seconds)
    (161/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.096364837 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.117943557 seconds)
    (163/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.09410704 seconds)
    (164/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.122520345 seconds)
    (165/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.203458705 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.095645446 seconds)
    (167/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.122258344 seconds)
    (168/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.096695337 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119319986 seconds)
    (170/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.094625819 seconds)
    (171/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.121035232 seconds)
    (172/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.095077679 seconds)
    (173/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.094960302 seconds)
    (174/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.095666251 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.095045372 seconds)
    (176/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.120715299 seconds)
    (177/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.097048196 seconds)
    (178/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118315146 seconds)
    (179/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.100446929 seconds)
    (180/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.09997182 seconds)
    (181/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122202664 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.135778701 seconds)
    (183/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.123231933 seconds)
    (184/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.094423923 seconds)
    (185/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.129431213 seconds)
    (186/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.096136522 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11904347 seconds)
    (188/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.096277281 seconds)
    (189/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.124231547 seconds)
    (190/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102581959 seconds)
    (191/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.098517002 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.096339807 seconds)
  done (took 29.900550593 seconds)
done (took 30.91292411 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.226886456 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.14152328 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.120577353 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118487983 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.216369565 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12508683 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153374459 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.12305597 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124114185 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.142091028 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.111500705 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126156857 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.117524656 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.212103755 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.121308476 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.138043013 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.110726991 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123350545 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.154391047 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128267437 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.216067118 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11318797 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.123735127 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.137454013 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.188939045 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.138656892 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119550187 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118269331 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.151172667 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118468957 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118080145 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.13711477 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.12975968 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.127546535 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109419146 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.144532503 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111042857 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.100156265 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.141172394 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118919238 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125360867 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.141424903 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.121852888 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111525979 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.144171167 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118260423 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110587414 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.120700275 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.136054735 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118451344 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112298915 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.156132282 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117114264 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.107985403 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.134966291 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112834524 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125651692 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136736711 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128128284 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111792399 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.136752368 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113152716 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120416635 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111402308 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.14334304 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112212491 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118033383 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.145003337 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117850215 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114319085 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136163776 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.119244295 seconds)
done (took 10.533310668 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.120038084 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167933058 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.214744244 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.224570135 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.141204088 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.152596515 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.133489331 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.139101478 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.155613167 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.136367836 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.170510728 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140625259 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.225803918 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.124765391 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.12642886 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.147844812 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.127144441 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.12391099 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.228936393 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.160359404 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142872512 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.123086349 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.170855488 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136273203 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118688906 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.166114843 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.118602268 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.146473749 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.119901103 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.135036841 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.161369713 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.120603938 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.117047446 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.164499172 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132554393 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124777813 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.154989568 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12173632 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.117196335 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.144609489 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.125906388 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.161762922 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119289405 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.127463067 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.147773265 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.127598934 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.127205161 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.151719575 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122649079 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121526987 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.147054337 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.145702321 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124944662 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.152128121 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125599487 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124894445 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.152239594 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.126260448 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.118623013 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.153244366 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.118437145 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.118832156 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.149568831 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140287716 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.145802769 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127968628 seconds)
  done (took 10.454085408 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.138751217 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.152466177 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.152845157 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.12730237 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120840747 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.136452849 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.109985293 seconds)
  done (took 2.00641577 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.113186525 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.198394974 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.221473837 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.221482621 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.191667329 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.232992985 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.159157226 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.112048339 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.148434619 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.147644129 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.199027327 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.254650405 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116820175 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.155923336 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.198959429 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.137792018 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.200027138 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.139025422 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122797233 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.225273352 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125933932 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13993262 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.152067233 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112100521 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.221144924 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112452837 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.284636688 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126955466 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.145548976 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.126959116 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121832449 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.221019978 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.221053969 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127039256 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114880995 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.222950515 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.218145467 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122374954 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.236939058 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.117931915 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.222001299 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.123675272 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126888885 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.149882147 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.127270862 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.207599051 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.132100754 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124328999 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.14902971 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.206358974 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.147990368 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.19769838 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.144979223 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.124296627 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.122244032 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.150177093 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132936897 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.12361 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.233510203 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126062137 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.22250216 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.222709141 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.197401601 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.223854291 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133825906 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.22629836 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.217345402 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.123283916 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120186614 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14997294 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.198687611 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.147740092 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.1245284 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.21123158 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128855917 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.225018882 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.197771727 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146839643 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125218033 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115420221 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.147075028 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113434124 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.186832861 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.150387773 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120387924 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12857258 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.153132984 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122762448 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.116075197 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.162005725 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.122780638 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.149050853 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.129411694 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122895864 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.154685244 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.202261616 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.151175092 seconds)
  done (took 16.805441402 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.118078003 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11347711 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117264004 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.140819809 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.114662714 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114309258 seconds)
  done (took 1.810296416 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.155799714 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124095194 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.162041837 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125848414 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.176122181 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.234780939 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.24116781 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120369587 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167970804 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.137803442 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.234144595 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.212391955 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.241397822 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.126314675 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.237835527 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.128580432 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.240595357 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122006963 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.161699173 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122834523 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.126824478 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.156121275 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122731205 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.225674677 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.128339658 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.154453744 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123044654 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.135743251 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.16053327 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123827969 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126666366 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.154527016 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121224838 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121008871 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.240514817 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.11884316 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.148254679 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.132826659 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12710193 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.155809446 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.211677545 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.150900933 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.133657611 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.13194809 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.150538167 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120322957 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.160049491 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122670397 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.238828098 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.133985132 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.132679412 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.153129995 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.130510559 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132900759 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.148372376 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123107066 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.132795124 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.241506462 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126980732 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.149143462 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.125618938 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.128186131 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150676167 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.133307784 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.151933034 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.137741113 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120091342 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.152232952 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125435538 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125296416 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.159116822 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.127494573 seconds)
  done (took 12.132141824 seconds)
done (took 44.266636435 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.538615109 seconds)
  done (took 2.621178976 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.920273783 seconds)
  done (took 2.003305285 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.449545246 seconds)
  done (took 22.566195041 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.548095728 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.620275606 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.053914041 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163436096 seconds)
  done (took 3.470984001 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.037115497 seconds)
  done (took 2.139695272 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.303128346 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.274708747 seconds)
  done (took 1.668511571 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.756779366 seconds)
  done (took 1.862083803 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.58541965 seconds)
  done (took 2.674739937 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368781234 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185639836 seconds)
  done (took 1.662105287 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.66893038 seconds)
  done (took 1.777126506 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.061711542 seconds)
  done (took 22.173395146 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265917226 seconds)
  done (took 1.3748669 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294962887 seconds)
  done (took 1.406787527 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.830388385 seconds)
  done (took 4.943865956 seconds)
done (took 73.439809845 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124674742 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12746715 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.127582514 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.151758513 seconds)
  done (took 1.633177525 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.134458404 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127539613 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.129970886 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.154335836 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.133536677 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127198163 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.154829046 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.129973339 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12627926 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.157840024 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127895614 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.125944984 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.157875247 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.127211778 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124258084 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.157274988 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.131925667 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.126705107 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.155185475 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.129897602 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.128901074 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.15620913 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.133076608 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.130656763 seconds)
  done (took 4.397782297 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.125494946 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117975335 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119053554 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.144365707 seconds)
  done (took 1.620785664 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.137808674 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141406713 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.163865659 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.137917731 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.139559507 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.166785805 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.128820598 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.126234603 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.155052916 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.136599748 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.142758029 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.168157165 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140888276 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.128405001 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.16664965 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.122446345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.12807009 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.167325457 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.13582048 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.135818967 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.156334553 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.135314852 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.131658741 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.164833299 seconds)
  done (took 4.567391555 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.199896916 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.137395601 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.17812836 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.169608804 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.180660573 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.123763435 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147345549 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15809673 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.131570395 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.125796829 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.156003598 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.169776778 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.157751673 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126661579 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.123372642 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.157063102 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.136729933 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128994397 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.194534309 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.128012598 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.158540307 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.136843054 seconds)
  done (took 4.439183765 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.131739937 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118735606 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.114537506 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.150527589 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.130514069 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120365153 seconds)
  done (took 1.887912307 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.120679014 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113870494 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.113344779 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.140871993 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.119381527 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113666873 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.111188701 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.141987548 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.114213829 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113683885 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.141654112 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113816857 seconds)
  done (took 2.580439027 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.355237809 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11869867 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.146512493 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.120156829 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124600846 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115984749 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.159371059 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118739118 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.280849997 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.117705854 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.159987281 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.207343245 seconds)
  done (took 3.147658489 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214451152 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15518747 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310637464 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.379583264 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172835916 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196068218 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280617338 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200428606 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.21633847 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144444327 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254254562 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159936001 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1889981 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180194998 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173174467 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.171662919 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203410623 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224623473 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155097532 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233519449 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162544925 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201856272 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185306028 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184172655 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141632797 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196867547 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125487101 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161841834 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17560659 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200896535 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17706327 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183569824 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147001857 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228405909 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272844909 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205436926 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294703241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14028064 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.215560381 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190032778 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266037466 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174873003 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194275186 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188201097 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135409229 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213811297 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158004628 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20867188 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13596708 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177885028 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18461652 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208138456 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.212011148 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143758046 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330745784 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177562311 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.177931919 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179655361 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218895524 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225204242 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171470413 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.157319621 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190025534 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219130824 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213935023 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147541751 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.200172532 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130811617 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200939075 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199712142 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214180749 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162894054 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.232046024 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166337149 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162809545 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207287182 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183814779 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210927767 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164144472 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.156229701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156179844 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169668115 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134768569 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.204481683 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157164738 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204781789 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167397401 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.369885771 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193656424 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191251975 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164690087 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195273791 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193496238 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153626913 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.119925591 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180553937 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.169155341 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191520993 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139005902 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190838495 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146416351 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134078843 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186693524 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12855678 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192697251 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.143158398 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198099239 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164073283 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.166199642 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17121446 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18289338 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.159794528 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203761111 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189262181 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166316523 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137759416 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224438926 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163392788 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.164978728 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1848328 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219590987 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.157551323 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172252479 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170164973 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222441699 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1471752 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223157967 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141880776 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171188752 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.156424822 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195477451 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164163877 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.190192236 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135920748 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184188671 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203765212 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.162510793 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143992489 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202147202 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139861557 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130491668 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174462583 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142535789 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.17583732 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151319963 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139223646 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188127884 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1632971 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190742522 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189365929 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141928707 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210522368 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139892199 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1643167 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181401694 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.126619968 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.209424036 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189646119 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164749073 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234368009 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171066565 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22694393 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164656791 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167967396 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183897617 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164484578 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126666326 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196055862 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161201028 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197625978 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18548428 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226344545 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.202722547 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155949785 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183538127 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173159525 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.211961487 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157472716 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.180562774 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163010541 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198276801 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126878602 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.15878104 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135126164 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142424231 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166339884 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141319936 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211097785 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169554862 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221507865 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193361493 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145764204 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218787425 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133808938 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196108791 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.171166464 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174427287 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188553913 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216436274 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170989737 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176920227 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167821926 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.155675629 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133039026 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139669862 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200212079 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14078069 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170801483 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147171238 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218866507 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177798201 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182645639 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234230711 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201529115 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201340959 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.125638893 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.202025876 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177983448 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193714402 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.190693492 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1729614 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.16464355 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215546183 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146519717 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223993936 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16231317 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198651543 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224076298 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162779267 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164488752 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15624403 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164594766 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175622018 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170559594 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182390641 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137061824 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189293172 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145293606 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130806469 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219381993 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178441762 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17745779 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.197861607 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173606139 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161749916 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148759742 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195667061 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151413515 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.125625675 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224273814 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221304595 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152687684 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192145774 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183116576 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166133945 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.33288149 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22923602 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182806123 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172077017 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1469229 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198232923 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168121552 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19840313 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184914198 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178998282 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182299725 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197186496 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.149024988 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166379083 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155099492 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188067579 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158010343 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.167212581 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.165162108 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147884284 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223197633 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175051454 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167353363 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194784291 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155360518 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.157264906 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177804008 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200189527 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193270845 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209743859 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163297763 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.202888598 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198388407 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159799243 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13560581 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137675471 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215723536 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136609445 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198569976 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214362244 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228470342 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170246032 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195753187 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146143898 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.132863469 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193032817 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15393292 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229486205 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17113741 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145785343 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228382295 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.146894166 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137791653 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197765687 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314385306 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153337264 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209560206 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.131910516 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309169345 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136897254 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138847003 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201781376 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176578867 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.169930061 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190197534 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198866759 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149638611 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200734926 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144443051 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222434033 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229691904 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175159368 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210703043 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150208232 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197318541 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165992992 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214862763 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149995065 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.182076385 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16809519 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219446432 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.188055471 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.169353652 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165285547 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194406763 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162863595 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208368198 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142420572 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228037078 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134260548 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200509219 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143974747 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160509998 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166123936 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215806059 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138809258 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215610535 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193540955 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140561021 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133039606 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182837124 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163522468 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174567879 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139027319 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218926841 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137200888 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168390298 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217207541 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136747843 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194162495 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152063454 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166890388 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149636517 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147016721 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167451732 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.179354503 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221237681 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13780665 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215854611 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170274612 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201280795 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161949816 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180490705 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672453678 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.182963292 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19080082 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184406262 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195219662 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187576486 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168318962 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195731617 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156721089 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202194998 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154430885 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.277293299 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169827838 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.193895729 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139122513 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176731651 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14894278 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138365054 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190828422 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163334029 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178678228 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.1421089 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192523247 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149915107 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.178786171 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148286694 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190163131 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184882452 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221763226 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188276649 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174100741 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169956249 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210640559 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138026671 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.20088641 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180067974 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178538187 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153177529 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.168147436 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.146403001 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187851918 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.16199588 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165521722 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197165918 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166420255 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196110936 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141779048 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198210797 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150048213 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194502094 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134998058 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15821401 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196510359 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141027436 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.162112382 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167431993 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193258423 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163796512 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132294921 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.210444978 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192553785 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.159691744 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14274937 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313770149 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167189245 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227105611 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.157753364 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172067735 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153101203 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19032162 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.16390191 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16553194 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.168969552 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137697598 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.165249948 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1846829 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.192230901 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168606656 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213289709 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169096074 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231789734 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141975719 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.324821692 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148442638 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194191785 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.138254485 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135309192 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179096698 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142280939 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14670652 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227357282 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219837586 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161914321 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.183814706 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144105735 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.132928751 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169213727 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174124981 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189094641 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166668428 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181628213 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.125014182 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150116679 seconds)
  done (took 88.289452497 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1796569 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.165827918 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.182459145 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.235176699 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209555871 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.302709514 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.24417861 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268202185 seconds)
  done (took 2.997790747 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.131837918 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.171790398 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152480495 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.157309966 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.129227367 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.466183122 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.172780575 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.130463644 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.175795622 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.1707455 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.15535132 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.630611566 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.130911839 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.157798301 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.142847139 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.128312823 seconds)
  done (took 4.407688207 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.536934022 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.613407285 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.32640103 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.296708874 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.247191779 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.19292031 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.83543653 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204724592 seconds)
  done (took 13.469099014 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.161060176 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147977605 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.333773879 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.277913382 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.164462131 seconds)
  done (took 2.300887751 seconds)
done (took 136.840602437 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.13207218 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13216622 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.130932685 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.164391701 seconds)
  done (took 1.764106215 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.197494134 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.107658358 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109531165 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.136373369 seconds)
  done (took 1.764127821 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.455764297 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107470818 seconds)
  done (took 1.804671802 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.158336911 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.157434884 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.177019412 seconds)
  done (took 1.720463636 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.152331629 seconds)
  done (took 1.367446153 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.139928071 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.133065495 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.25453594 seconds)
  done (took 1.747705535 seconds)
done (took 11.388622922 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.641494013 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.427966217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.446008022 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145387601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720301173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.440348223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.079959039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.187653462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185718901 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.149050105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143307288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698367723 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.064294829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374891853 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.017205978 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.401018219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.7044134 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12270256 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.15854624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123788861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.059276456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.149860074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12303259 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123131339 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.729722042 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.432879073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119982057 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.411616014 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121119247 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123713112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.439545581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122978568 seconds)
  done (took 18.39923268 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124062746 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183098388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.158160727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123129574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124395798 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.152074141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.132952109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.133074065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.217816944 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121071938 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.173032764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121879838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125807074 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.150748184 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147445128 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120069826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.153770876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125708785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.128712557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.152046196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143874344 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120246912 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.151578193 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125042273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121370975 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.172901571 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122610189 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.134210429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.149880472 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12738909 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126262695 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120735938 seconds)
  done (took 5.713435022 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.174211382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192820397 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.161010889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.159269241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.200241426 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123958513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.238829574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160712372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.218163562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122879658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142811443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.150630128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16322429 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121987134 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.176867956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122419543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123522167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.153973284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130291813 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122349226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.174383591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121816467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123393372 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.154771659 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122807258 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.145530363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.152087863 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.134989386 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120799529 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.15747889 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127594235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121807094 seconds)
  done (took 6.048649456 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.13837879 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137052757 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.143638666 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.176341502 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.132085804 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134914724 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.166632069 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.132688732 seconds)
  done (took 2.39373232 seconds)
done (took 33.776312076 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.145164722 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.138009236 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.140384763 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.163123829 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.207082753 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.156922494 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.13682618 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124651191 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.164448121 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.141488446 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.121766187 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.124662275 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.170070605 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.131091669 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.239871616 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.133604227 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.244891913 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.209238191 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.15717715 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.135429473 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126868945 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.24582427 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.13173788 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.125783811 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.247880584 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122798942 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.229788744 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127595956 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.159193233 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.124584081 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.237027953 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.130062505 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.124597506 seconds)
  done (took 6.538630811 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.223351297 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.127067238 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.161940382 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129515383 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.127455152 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.159970361 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.226745116 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.159258966 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.13044418 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.128805779 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.128403331 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.238077158 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.132891429 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.153023958 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.131340635 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.126558421 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.258542075 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.127908102 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.120543558 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.139496671 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.123664847 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.129411517 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.269270674 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.12128345 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.129781331 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.160767278 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.131222838 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.132099157 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.159120248 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.130523492 seconds)
  done (took 5.859611239 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.137225771 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143020951 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.148484246 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.237482911 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164801937 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.175610064 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.152775512 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145116979 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.189153857 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.124045945 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.138835942 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.193830624 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140404229 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.133797783 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.153963737 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.143229787 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.145639868 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.15766364 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132511005 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141537297 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.176358326 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.141432219 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.150834076 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.163426746 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.124212351 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132912308 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.165219141 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134780636 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.131800776 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.167237171 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127787184 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.127707116 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.154352506 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.161318498 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131913662 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.16756076 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.149866912 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136408682 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.1690952 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.163986742 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127280363 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.157809612 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.153258516 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.181575898 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.157486515 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138784863 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.135177356 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.16897203 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124216469 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145424812 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.197034628 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.128584755 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.145113345 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.156684093 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.125255352 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132693555 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124729222 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.15961674 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139825977 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127418902 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.180551773 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.132970573 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133928766 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.158323355 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135873813 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122644416 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.153854708 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.129893489 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.152261132 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.161115941 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16448241 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.125552016 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135576838 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.168457042 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135490848 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135340404 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.155288966 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136649151 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135111572 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.161988224 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.137753278 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127419593 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.158294733 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.145870232 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144854457 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.168871651 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.137818664 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.137304221 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.158236484 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.128183024 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141733211 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.124450616 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.162338287 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138341432 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123537439 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.158699892 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.138812804 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.13453572 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.153200185 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151211926 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128317155 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.153936203 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.151558875 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.129266082 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.130389238 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.167484489 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.167571909 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.160752324 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.137636054 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1369758 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124134832 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.163459834 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.129395453 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124131586 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.177318893 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.141681254 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131349782 seconds)
  done (took 18.495759294 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.349557632 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.335540235 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.194206451 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.337197458 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.16943153 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.224614217 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.330198979 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.33398935 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123302315 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.193864282 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17609356 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.293892934 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.15909792 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.155936626 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.336330786 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.390011026 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.191516316 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162182219 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.193863098 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.139000723 seconds)
  done (took 6.045928357 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.146105171 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.162776371 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.181081951 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.155322093 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.132241006 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.173829608 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126115812 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.143534687 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.164878352 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137202718 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.128273135 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.171892632 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.135747848 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.137644767 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.174012714 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.165170591 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.132875541 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.16195501 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147777918 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.129024409 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.150582297 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151862691 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.132715887 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.180022393 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143228767 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137511105 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.156069278 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.131635828 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.128585727 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.161466177 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.130880776 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.142827147 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.164386659 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.125039419 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137054553 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.140754682 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.160171342 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.130725228 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.13212179 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.159947093 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.143852482 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.134522064 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.163605203 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116750368 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.142189927 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.128107064 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.16620712 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.139296236 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.123278949 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.142435042 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.170379813 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.136099494 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.133970027 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.178180762 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.129680973 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.14101538 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.170341655 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136007774 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.131366704 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.156517382 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125066215 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129511907 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.160872607 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.138877085 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138249064 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.175000753 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.142679404 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.126628359 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.159766807 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.131867135 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130177666 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14083667 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.178295062 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.131616929 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.127878358 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.171320754 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.130416052 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.112376984 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.168322677 seconds)
  done (took 12.777564895 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.152530659 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133878652 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143914755 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.195531136 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.134253119 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.1322916 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.164458331 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.148332155 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.135090893 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.171774387 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.136838639 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139855261 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.179989717 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.137340817 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131021706 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.175209359 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136565172 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.163426732 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.176086953 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.155989728 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.135730816 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.166519689 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.139460406 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.136327301 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.189456313 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.136993379 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.15410375 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.169105597 seconds)
  done (took 5.53194401 seconds)
done (took 56.481665207 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.378282558 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.588976909 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.35771878 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.350970517 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.401876554 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.359395886 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.350818772 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.350819245 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.893542613 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.337100787 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.357443216 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.364407761 seconds)
done (took 30.349928694 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.373942501 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.891916195 seconds)
    (2/2) benchmarking "String"...
    done (took 1.649955786 seconds)
  done (took 4.795906006 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.352258616 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.35304449 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.578441028 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.351770714 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.364198715 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.351778394 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.362100348 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.373813208 seconds)
  done (took 16.988223626 seconds)
done (took 27.762605232 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.41705054 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.542655298 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.604381892 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.351976475 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.355390986 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.360959451 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.356180637 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.376269821 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.354703313 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.354805915 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.779735059 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.616405396 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.355230191 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.732648782 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.355729538 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.360271841 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.369736001 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.603112107 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.355973813 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.392204768 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.338322275 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.358009362 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.373173345 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.35942933 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.364662968 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.364590506 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.366540633 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.361361632 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.552114842 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.369884873 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.397211268 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.36132162 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.368987004 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.359190503 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.379796893 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.357196205 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.54949894 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.364853227 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.345921913 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.360566683 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.549365478 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.362945633 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.366154722 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.363055589 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.357264144 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.428365591 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.347436647 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.472572382 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.383907409 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.36162765 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.381051825 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.73576547 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.357019794 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.357342044 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.3688417 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.578722503 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.382294583 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.423734177 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.385391165 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.372231544 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.369757329 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.359538224 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.399160185 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.361297158 seconds)
  done (took 153.729062735 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.356632636 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.362760522 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.362981751 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.367385718 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.363758113 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.362299583 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.357080235 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.3577876 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.362284163 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.390111233 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.363760857 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.356921048 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.36394353 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.305438114 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.365227121 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.375022401 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.362311312 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.381231551 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.362878329 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.358513613 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.362784088 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.363861378 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.378481572 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.357972515 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.363700646 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.442068249 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.370899089 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.366540984 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.371455932 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.357504357 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.3682719 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.371040639 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.027399808 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.222732844 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.371645977 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.395952675 seconds)
  done (took 85.990082548 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.356918395 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.360365609 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.358176075 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.394348949 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.35899684 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.961285676 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.96368772 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.083144522 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.753090086 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.853243738 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65294834 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.3593935 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.455756114 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.371821677 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.362613598 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.374495698 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.387159967 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.366920205 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.360367546 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.975256474 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.37842875 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.376049143 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.542693635 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.37889939 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395087175 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.761720657 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.362034454 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.395982525 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.700956054 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.416269548 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.362354453 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.768810573 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.573036282 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.477133558 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.363707073 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.396005778 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.360912022 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.646692702 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.360806898 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.36437919 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.364672431 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.075420452 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.368475911 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.966581954 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.362664003 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.343826371 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.359645827 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.361764366 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.661052034 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.11054885 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.367933343 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.362335339 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.364594495 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.364316239 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.362303671 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.397406732 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.682513304 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.464481666 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.364157921 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.36681393 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.396643937 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.36252429 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.440936574 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.364626188 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.750513406 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.42137849 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.491154032 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.363340409 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.98238033 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.369632644 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.463013028 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.4852815 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.364486514 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.363645338 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.363819215 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.362962865 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.363179295 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.477920222 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.363421001 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.363358121 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.804667529 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.547651758 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.383068829 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.364159586 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.854160667 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.467147143 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.36524531 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.786352876 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.371050303 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.363958056 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.128680954 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.464358182 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.364763801 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.366338846 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.365402335 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.809395791 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.972102337 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.658366412 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.370292948 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.710547872 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.370701894 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.818123446 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.961504723 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.099219909 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.372825475 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.479349801 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.550194696 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.385692625 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.367056217 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.863791881 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.371965246 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.424971285 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.366101236 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.770205933 seconds)
  done (took 385.46289285 seconds)
done (took 626.434402618 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.231324174 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.167292343 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.326949657 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.188944116 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.181004403 seconds)
  done (took 12.360607701 seconds)
done (took 13.624388919 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.569106953 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.569122104 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.431302684 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.571902959 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.401310382 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.58911606 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.556905625 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.387567771 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.487320589 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.456116972 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.487422643 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.422706322 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.40026771 seconds)
  done (took 20.596365991 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.683020951 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.380441574 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.441477725 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.632063828 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.416623587 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.663666851 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.700676745 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.379331279 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.528243831 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.386427372 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.385559706 seconds)
  done (took 19.865848202 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.662074099 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.379305934 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.434355675 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.647251234 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.414927187 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.664655534 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.708648763 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.382229762 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.518350526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.386983232 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.385157363 seconds)
  done (took 19.851366644 seconds)
done (took 61.579512147 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.276569656 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.34923226 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.406165541 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.462279998 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.382892802 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.398024363 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.465692058 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.384612999 seconds)
  done (took 29.393984132 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.380121749 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.382335198 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.382997363 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.381929336 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.383422378 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.381403914 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.382864571 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.380486771 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.381965383 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.380614728 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.381923715 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.383497844 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.383986797 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.384738406 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.386105526 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.384818912 seconds)
  done (took 23.391685172 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.385085626 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.381725779 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.381554758 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.380961347 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.381820368 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.382936835 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.382005916 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.381918766 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.382383792 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.382147774 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.383981175 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.381704458 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.384579525 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.381447616 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.383514566 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.38314739 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.382194893 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.383857267 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.387688719 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.381882802 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.383810487 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.383754734 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.385279555 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.384347704 seconds)
  done (took 34.46474484 seconds)
done (took 88.517231091 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.373112319 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.393340908 seconds)
  done (took 6.037201277 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.445651806 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.446769827 seconds)
  done (took 4.163290778 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.385645913 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.386041897 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.384273928 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.384350065 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.384978494 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.38450543 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.384317904 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.384503824 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.382616531 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.384280874 seconds)
  done (took 15.115907071 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.384895297 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.381222628 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.384643989 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.389383413 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.385538202 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.385119009 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.383076053 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.38500351 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.38497757 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.384079757 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.388093601 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.385904195 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.38630662 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.386130751 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.385673032 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.386659901 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.385576194 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.385567571 seconds)
  done (took 26.208735434 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.398468551 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.406398902 seconds)
  done (took 4.075186658 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.5265318 seconds)
    (2/7) benchmarking "second"...
    done (took 1.427378329 seconds)
    (3/7) benchmarking "month"...
    done (took 1.503343436 seconds)
    (4/7) benchmarking "year"...
    done (took 1.493629702 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.427732946 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.407197172 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.428308516 seconds)
  done (took 11.484726173 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.386275723 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.611130437 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.74447237 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.949400509 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.389230262 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.390377112 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.195314315 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.390773955 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.39284982 seconds)
  done (took 15.722750202 seconds)
done (took 84.078254653 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.376565449 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.429770633 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.409379319 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.415798291 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.727289368 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.419131128 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.382815093 seconds)
done (took 17.432701746 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.365308839 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.370662741 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.359104425 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.379879451 seconds)
  done (took 10.749334955 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.38808781 seconds)
    (2/2) benchmarking "read"...
    done (took 1.664821137 seconds)
  done (took 5.325039506 seconds)
done (took 17.347753947 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.390710635 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.388798169 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.389262048 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.387824583 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.389335387 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.389857349 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.38917947 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.386914966 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.388851049 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.388000398 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.388511039 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.389848872 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.390573486 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.390004798 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388139079 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.388686439 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391344815 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.390697313 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.388975489 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.391884499 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.391108319 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.389941465 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.38916082 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.389914966 seconds)
  done (took 34.62247944 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.3925414 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.389235716 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.391786069 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.391470616 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.389228344 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.391906608 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.390552137 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.390466666 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.391181724 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.391071048 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.392342689 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.389666691 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.392315629 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.389459452 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.392021717 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.391102405 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.393008999 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.390764792 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391730068 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.392208538 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.39293261 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.39094408 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.391559732 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.391879733 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.391412366 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.392536889 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.391989282 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.391584651 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.392790688 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.390354394 seconds)
  done (took 43.019029568 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.399492186 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.400425169 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.394793977 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.394424484 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.395969174 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.39593451 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.395138618 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.395123023 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.396243477 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.39585658 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.396871822 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.393125945 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.39650195 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.395605076 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.395300013 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.395884807 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.396197326 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.397239881 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.396606459 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.397518771 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.395088153 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.397873577 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.396237405 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.396603884 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.396408836 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.398308789 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.396820779 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.39726194 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.398040983 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.398150234 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.397422196 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.398152761 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.397638117 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.396892562 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.397621763 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.395787136 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.401732279 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.403025661 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.397771669 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.39875741 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.397869604 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.39795775 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.398125097 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.398137242 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.396782122 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.398969243 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.398322921 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.397210187 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.397670082 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.397408135 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.398690921 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.39880769 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.399252515 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.398057223 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.398270168 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.398736668 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.397841643 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.397906293 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.400560375 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.400265887 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.400271594 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.398434528 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.400133467 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.39960979 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.399303949 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.397573764 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.400684098 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.399141403 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.39956905 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.400833322 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.399700082 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.399587347 seconds)
  done (took 101.920942613 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.396786409 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.396620751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.397075833 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.395587691 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.39647639 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.397874007 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.394758278 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397180898 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398212841 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.397223165 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397954302 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.396766603 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.39782759 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.397524116 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.398537442 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.397375643 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.399684292 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.396295513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.398643145 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.399021594 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.398562048 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.397002418 seconds)
  done (took 32.026112443 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.399329197 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.401027854 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.397235752 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.40118612 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.400737226 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.401586449 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.400662983 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.400997797 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399975643 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.399106599 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398044755 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39995421 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.40239139 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398350634 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.399470657 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.40292218 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.399637608 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.40072422 seconds)
  done (took 26.486546517 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.398385626 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.399622615 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.400260523 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.400049384 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.400634756 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.400458775 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.400145001 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.402600944 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.400733697 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.39927826 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.400011528 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.401251545 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.400175541 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399602756 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400130618 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.400355043 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.402082067 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.399625948 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.400509145 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.400386152 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.400195484 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.401736462 seconds)
  done (took 32.091628426 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.401598486 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.402048079 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.400315141 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.400417466 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.400607448 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.403190604 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.400245294 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.399998352 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.40511064 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.400921075 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.399358304 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.401070035 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.40317593 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.400941429 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.401200723 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.401699952 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.401602368 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.401335786 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.402004357 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.402099881 seconds)
  done (took 29.313943037 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.405685139 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404445533 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.40500746 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.405395556 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.405505659 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.405906733 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.404549458 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.404564185 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.407413262 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.406870242 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.406023036 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.404714793 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.40410989 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.405998885 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.405567483 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.405910533 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.406693519 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.405648104 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.405701022 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.406691492 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.406491372 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.406929898 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.406969518 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.407179381 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.407196296 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.407558989 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.407428094 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.407143469 seconds)
  done (took 40.655417211 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.405547915 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.404359683 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.40431123 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.404028624 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.40315748 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.404203456 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.403732764 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.403885102 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.40365648 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.402370835 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.40447498 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.404795711 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.405243423 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.404932533 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.406662508 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.405116773 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.404775875 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.405533149 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.41058547 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405187002 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.405431507 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.406653275 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.407084666 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.404300159 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406817888 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.405916599 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.40609164 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.405889452 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.406854848 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.404932808 seconds)
  done (took 43.446054468 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.425348248 seconds)
    (2/2) benchmarking "in"...
    done (took 1.424020665 seconds)
  done (took 4.138572544 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.404719356 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.407667876 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.40613436 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.407371891 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.405991234 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.405982261 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.407470955 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.406571373 seconds)
  done (took 12.541747919 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.401543648 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.407652009 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.407286879 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.408725581 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.408603005 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.401403548 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.40944291 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.412934103 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.403033946 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.403738252 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.408103035 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.407026856 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.406172949 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.406429055 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.404329849 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.406590579 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.411462398 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.410758028 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.410428669 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.409858265 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.40907613 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.406131079 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.409063195 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.412165605 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.405116253 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.414134931 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.412343752 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.41652558 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.40394148 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.406468353 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.404717287 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.41166167 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.410814823 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.411336135 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.409428231 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.410243695 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.411235376 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.407323312 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.412731784 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.411427086 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.411621899 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.409277056 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.407450416 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.407248939 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.409573654 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.411418769 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.411549542 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.408007066 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.404753038 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.408535268 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.414709141 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.405688219 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.408897233 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.409481335 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.409761863 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.415201471 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.415210451 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.408521341 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.4112144 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.41572162 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.420199478 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.417985673 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.410508331 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.414157857 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.415482326 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.424459904 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.412860323 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.414756188 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.410330593 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.413971411 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.412389449 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.421612608 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.419653517 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.413966476 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.411853105 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.412725443 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.406495133 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.415270319 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.415243071 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.4145934 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.414669307 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.412311394 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.416146161 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.422857207 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.408302364 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.415212434 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.413908376 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.413184542 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.408700056 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.417527674 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.418838183 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.413266153 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.408788214 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.409616068 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.410850041 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.414874883 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.408555175 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.410837002 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.415514591 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.414564408 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.414900219 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.413276888 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.416534287 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.415702331 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.414145784 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.417951219 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.416613253 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.409531472 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.417301627 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.41957135 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.414281432 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.412041526 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.41472913 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.415890679 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.412482191 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.416725732 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.417038859 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.411085272 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.417556442 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.416154255 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.417693718 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.429644109 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.418955297 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.415896879 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.413362641 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.422558744 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.416058344 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.413855652 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.418796626 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.414996768 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.415460328 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.413212113 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.416910778 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.412446653 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.41824279 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.412007415 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.41628516 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.416430583 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.41582041 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.413101414 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.413201958 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.412339268 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.414401227 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.416080367 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.418079984 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.41493464 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.420922603 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.415309165 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.414988022 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.416229147 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.418685618 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.418787845 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.415470462 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.421068169 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.415569163 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.418654185 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.413632408 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.418574833 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.420004877 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.418667995 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.419321257 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.414096764 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.415606526 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.420403348 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.417925669 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.417333108 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.417988688 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.419317783 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.420183682 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.41433274 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.420659121 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.412793545 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.418320952 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.423099507 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.420199746 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.419007793 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.416371115 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.419878771 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.419368193 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.420204596 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.418113517 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.419378622 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.421327509 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.421556835 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.423166349 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.419368363 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.421055622 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.415401313 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.414841328 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.421108897 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.417005307 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.426113951 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.425707179 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.425593703 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.416919011 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.423722008 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.416030666 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.424048831 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.418894171 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.421722724 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.421613484 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.421608462 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.415162584 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.421431719 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.414978655 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.421699964 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.415191521 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.422706183 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.421504703 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.421139322 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.421743994 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.418798875 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.417980944 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.421879398 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.420866315 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.42212936 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.417805094 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.423905846 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.415221234 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.417722895 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.42328904 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.424825941 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.423689752 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.424398845 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.419030101 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.421772487 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.42013368 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.419879831 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.424309822 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.42200256 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.419476284 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.425098477 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.424350467 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.419176113 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.427470276 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.424268576 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.418530075 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.422742201 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.427362005 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.423920624 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.42203708 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.428381983 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.427887388 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.422769518 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.423794884 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.418572621 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.425954675 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.426170353 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.427897258 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.418271163 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.426021626 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.420648501 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.424365833 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.420480571 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.422558054 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.422727571 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.423951855 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.429141368 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.425259596 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.420179584 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.42701757 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.424853218 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.426033524 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.421870687 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.429457272 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.426024065 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.424009176 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.423772619 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.423715704 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.427702606 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.418763295 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.426955432 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.42033225 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.432021866 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.439805968 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.427961641 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.425746608 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.426030767 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.427423596 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.426697025 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.421955266 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.423016989 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.422192013 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.423094949 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.421173213 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.42830226 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.423550869 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.428296921 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.424586568 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.426071388 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.429105035 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.427940851 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.422239484 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.427439615 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.428541842 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.427573747 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.422225885 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.429133454 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.423013734 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.425557964 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.424761631 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.424140223 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.43111861 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.428902328 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.426568658 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.425390923 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.424886969 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.42466671 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.426701281 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.431196152 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.425893293 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.433749345 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.424972547 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.428716893 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.425628502 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.432111513 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.431835689 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.427383573 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.434485612 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.426848254 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.422115773 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.423696908 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.42957409 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.430488027 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.433758969 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.424504434 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.433094001 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.428665612 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.429256116 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.428898731 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.429018165 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.429577469 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.430093736 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.433749749 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.430290039 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.427705074 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.427382112 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.430742516 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.429332943 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.428274108 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.42377193 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.428835229 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.432808254 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.426707447 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.42599293 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.426347401 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.430054708 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.431956862 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.430881615 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.432569721 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.431510094 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.432557447 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.433045458 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.434002137 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.431638834 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.434580129 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.434406253 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.432927524 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.437427305 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.426675362 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.433714876 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.432096651 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.429324364 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.427321242 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.426886833 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.43307682 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.427183296 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.439561452 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.431010038 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.429168411 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.431139413 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.433941288 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.427254308 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.437126131 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.447365833 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.428601191 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.436070089 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.431607144 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.429000966 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.435042621 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.432941798 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.428650857 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.430662797 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.434285194 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.438815674 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.427976637 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.434723532 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.428506477 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.435781879 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.434772756 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.434494547 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.435406775 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.435379256 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.427593021 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.43428003 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.431991391 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.436456792 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.429601038 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.430269045 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.430121782 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.437786387 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.43875442 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.430703549 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.435504679 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.43548086 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.429211475 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.431709993 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.433835057 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.429298021 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.436110466 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.428817379 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.435768735 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.433361496 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.432767029 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.432101799 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.437115808 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.43042307 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.430957082 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.438063147 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.434952938 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.43530787 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.429425893 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.437519865 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.43143756 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.431039961 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.435674735 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.431255559 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.438159286 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.432883103 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.435750027 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.432589984 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.435784546 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.436434317 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.436682039 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.431383299 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.432073017 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.43880239 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.435997298 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.438588609 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.437110359 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.440791082 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.431137536 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.433717278 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.437045735 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.433025518 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.433588684 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.43857884 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.434393641 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.432234394 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.436487198 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.438823858 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.438995777 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.434094406 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.43353594 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.44354925 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.440529487 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.438704565 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.434328028 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.435920584 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.434474642 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.438421614 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.439065073 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.432564583 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.442840457 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.437537864 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.440150395 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.435964332 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.434742203 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.434189021 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.441166853 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.440562468 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.436169801 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.440261476 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.434507807 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.440325591 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.440687228 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.438532045 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.433117967 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.432622408 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.437051173 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.438232721 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.439604873 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.436240569 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.435807074 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.436092597 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.439916953 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.439303514 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.438338548 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.440400664 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.433788211 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.440224254 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.43435207 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.438483187 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.436943473 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.437170504 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.441616886 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.441680212 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.437564021 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.442549449 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.44453651 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.439430834 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.435752157 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.438062411 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.439908972 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.444478083 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.442281258 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.437784724 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.439749458 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.443898618 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.441569376 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.442055132 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.438683833 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.450700239 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.447367109 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.437109303 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.439293934 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.442049238 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.445205361 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.442332753 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.443452239 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.439286953 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.442326859 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.448075006 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.444461659 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.445466122 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.441698367 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.439361855 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.446178655 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.441222855 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.443220121 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.441995952 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.445535527 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.442660092 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.440351674 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.449531881 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.444920377 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.446181697 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.460519284 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.442181638 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.440729445 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.445236499 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.437412716 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.444030683 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.441198696 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.446145201 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.44425819 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.443345498 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.445850058 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.440467453 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.443314587 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.443119676 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.450508304 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.443731281 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.439380098 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.439704608 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.444568973 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.445337831 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.44840921 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.443996372 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.445123746 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.445625142 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.439721603 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.451910092 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.454297867 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.446028447 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.443493853 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.443207077 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.44276678 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.444324428 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.448037642 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.451067964 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.447303661 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.446868261 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.444639082 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.447105969 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.447656779 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.441504218 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.441410888 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.440900732 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.446143693 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.454639263 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.459669055 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.448522327 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.443706823 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.448974244 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.447785923 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.444957551 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.446443536 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.447743623 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.441679639 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.444376733 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.449490317 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.448978885 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.444997221 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.444338721 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.4533421 seconds)
  done (took 851.887600696 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.445147579 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.444994463 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.44557321 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.447412958 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.446822445 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.445994803 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.446822793 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.44724786 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.446528486 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.445721565 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.446757314 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.447726141 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.445908717 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.445795565 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.448991455 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.448079402 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.448472115 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.448130155 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.445854127 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.447670123 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.446867275 seconds)
  done (took 31.705712925 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.449156022 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.44900362 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.447831829 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.450365187 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.448319424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.449296127 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.448825969 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.449095795 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.44931705 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.448750169 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.449609352 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.450181731 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.448181142 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.44836697 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.447449686 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.450560695 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.451388417 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.449737968 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.449855852 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.449087014 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.451432319 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.449766065 seconds)
  done (took 33.210949338 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.451715352 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.449784826 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.444395019 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.450378796 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.45030876 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.450147044 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.450154688 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.451617689 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.451409405 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.447048936 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.44531411 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.448656322 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.451640124 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.4543419 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.446993741 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.451771546 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.452747556 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.453459185 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.451508171 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.450284303 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.454317738 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.453629929 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.451165029 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.445188037 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.452809504 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.453054934 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.455310023 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.454992172 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.44922498 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.4557659 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.452652745 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.448001511 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.450075799 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.4488953 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.448969233 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.456593564 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.452446745 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.452355349 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.452875051 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.455289542 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.46683569 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.454120956 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.45727066 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.454343988 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.453364306 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.449455719 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.460581342 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.45424682 seconds)
  done (took 71.026363304 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.454491571 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.453864415 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.452787031 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.454526001 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.455869527 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.453805141 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.455896129 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.453762341 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.453934627 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.450365106 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.455593649 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.453927946 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.454287096 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.457052106 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.455195513 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.453055561 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.453660049 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.453107651 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.453009537 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.454389934 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.453857724 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.455916219 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.45403934 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.454802551 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.457182088 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.454801453 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.455425682 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.456395373 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.454145444 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.456397137 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.454218873 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.45534981 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.456862936 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.454790571 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.454251081 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.455148041 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.455529449 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.454607139 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.456721854 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.454080589 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.456814466 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.457498495 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.456407865 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.455925239 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.454656949 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.453799111 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.45590903 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.454751584 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.455508802 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.456324574 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.458559776 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.456392998 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.457401349 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.456547171 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.456456315 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.46009505 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.456638291 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.455170707 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.456233382 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.457072596 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.457131724 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.457100261 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.457418988 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.456856729 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.458785061 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.456277283 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.457255173 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.458033946 seconds)
  done (took 100.307134778 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.457295688 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.458067661 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.456992978 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.460699407 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.457242725 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.456809473 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.458666293 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.458307215 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.457744008 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.459619403 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.459177243 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.458553543 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.459243846 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.458713316 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.459201261 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.459065926 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.460626616 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.46022623 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.460415279 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.462004826 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.460335083 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.462386776 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.461394447 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.461193952 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.459577148 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.460692394 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.459831289 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.461708822 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.459942521 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.461298946 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.46223199 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.460674888 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.460461329 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.461300575 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.460641499 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.461481517 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.459962877 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.461480272 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.460586602 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.458856613 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.460968651 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.461104223 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.460867782 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.461492753 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.460606983 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.46072603 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.460832872 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.461202494 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.461667115 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.462570785 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.460185712 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.461625077 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.46244992 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.461118107 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.461675567 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.462204437 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.462289338 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.462410614 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.463045414 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.46154303 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.46309059 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.462323535 seconds)
  done (took 91.885041791 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.4615238 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.461800965 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.460147727 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.461544851 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.463283137 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.462208625 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.462596355 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.46234229 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.46237071 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.463076949 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.464684012 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.462881544 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.463973762 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.463327445 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.463362075 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.463910075 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.462115621 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.461573461 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.465798923 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.461944732 seconds)
  done (took 30.589984954 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.462872802 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.462738521 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.461724862 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.46207078 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.461825138 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.463075457 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.464453661 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.463801619 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.461801151 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.462094621 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.463824116 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.464196112 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.461386744 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.461567679 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.463837886 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.462134558 seconds)
  done (took 24.738596022 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.462791231 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.464660442 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.463575589 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.463468884 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.460564995 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.461948236 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.464285414 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.462176746 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.462099736 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.463195332 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.463330455 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.463080001 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.463399777 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.464550052 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.464127358 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.463043163 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.461364283 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.463776247 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.464139386 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.465289122 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.462781418 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.463428978 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.463874285 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.464370155 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.46249341 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.463462237 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.464113114 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.463391925 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.463194106 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.464700766 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.464276086 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.464278841 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.463051796 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.462986402 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.465879747 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.463307442 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.462198441 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.461736666 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.462550975 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.460811144 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.463051443 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.462150594 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.461475472 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.462484239 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.460406467 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.460841657 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.459754355 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.460400704 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.461663973 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.459522146 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.459474616 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.462476935 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.461113825 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.461486031 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.461948514 seconds)
  done (took 81.788256091 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.459381527 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.460231674 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.45859488 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.461197636 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.458831187 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.459716741 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.461876231 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.462123117 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.460526924 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.458869019 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.459592975 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.458773139 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.458909623 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.459589251 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.457459315 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.461016141 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.458837284 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.458902054 seconds)
  done (took 27.610734627 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.458007385 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.458236194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.458932852 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.458518094 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.455686348 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.459984908 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.458992983 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.459578412 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.460822298 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.458570458 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.456191955 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.459259511 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.458498638 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.457477096 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.458124258 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.458592596 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.45804518 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.459639958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.457348647 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.456464991 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.460508215 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.459741275 seconds)
  done (took 33.417640074 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.454102104 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.454255902 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.453756439 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.469551656 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.467697116 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.45419962 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.455741436 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.455534342 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.476898153 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.496555251 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.491208808 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.469214658 seconds)
  done (took 18.92966147 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460538948 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460939614 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.458354144 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460749734 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.46195822 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458104093 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460023788 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.461365966 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459120155 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.458507177 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459129529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.461389121 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460826067 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.460635006 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461658074 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.461491317 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460644371 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460534921 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.459039157 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461363974 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459597894 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461917473 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461476587 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457808218 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45978807 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459662667 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461369803 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.46228069 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.459944178 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.462247849 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.461806759 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.461821994 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.463208607 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.462244894 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.46147231 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.462650466 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.461776849 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.462532609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463675122 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461925805 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.463419376 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.462729373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.463138634 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.463134713 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.463380346 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.462671435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461800009 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.462297822 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461222473 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46498394 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.464186595 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.462407268 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.463585198 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.465305231 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.464576041 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.464317881 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.462792172 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.462335318 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.463434833 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.463149042 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.463577436 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.464610851 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.462850505 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.46358187 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.46413894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.462963208 seconds)
  done (took 97.817813479 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.463543059 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.463261842 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4651434 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.463356829 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.463302299 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.462620743 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.46424314 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461755882 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.463879614 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463545141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.466951867 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.463963786 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.464499168 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464206388 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.465432532 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.464166476 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.466654539 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.464954403 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.465329682 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.466474422 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.464828066 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.466357925 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.466406858 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.465191691 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.465687326 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.466206588 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.464218796 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.465334785 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.464460807 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.465071666 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.465180419 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.465884104 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.465697712 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.465228338 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.467131122 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.46688969 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464505089 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464971198 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.46670227 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.46910237 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.466837489 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.468516543 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.467114636 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.466941538 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.466742704 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46692142 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.46754849 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.465788756 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.468715836 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.466506801 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.46824662 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.467234387 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.466731005 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.466613099 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.466753477 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.467339559 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.467353879 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.466768672 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.465895791 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.469180605 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.467000479 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.467389663 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.470554878 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.467840542 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.466573591 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.467867219 seconds)
  done (took 98.091736187 seconds)
done (took 1994.544103081 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.630352462 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.584456823 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.461758671 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.474730123 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.461947964 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.455178883 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.473694532 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.46244161 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.462310764 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.462034826 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.463166117 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.651277538 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.456528219 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.461044614 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.462113148 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.560884139 seconds)
  done (took 29.322767903 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.493907817 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.474189548 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.592717314 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.46666195 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.493377119 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.674558218 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.530391848 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.467341128 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.654733705 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.484997598 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.468101247 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.489429961 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.464071361 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.470489762 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.487595344 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.670831357 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.732397714 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.473846027 seconds)
  done (took 31.928732218 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.956285688 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.482114866 seconds)
  done (took 5.778459258 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.488705993 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.463566686 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.465923805 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.465017917 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.47178566 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.457342921 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.464194183 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.474299258 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.465283299 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.602325504 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.467534087 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.478552424 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.462860811 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.466225568 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.470162302 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.512822625 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.611401286 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.471519558 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.470338712 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.472521833 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.465189065 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.555933239 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.510470087 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.471353802 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.602290704 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.464924081 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.465477 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.471783196 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.607320115 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.47006214 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.465237499 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.466913795 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.465904903 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.458933944 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.965740856 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.476061084 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.491062447 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.473129915 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.469805799 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.616480522 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.46618627 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.47135897 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.463033888 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.967123503 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.609730702 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.590528697 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.462994385 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.467421777 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.469133886 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.533740998 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.468687456 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.468110538 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.549379079 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.311603645 seconds)
  done (took 92.779497032 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.513696639 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.464912067 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.640491283 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.478445549 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.458720097 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.460808493 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.457403436 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.763083743 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.512413015 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.458355236 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.769712704 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.053671501 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.460441804 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.532826932 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.423636904 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.54604717 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.460314406 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.459360699 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.460582231 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.464164306 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.028789836 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.461033704 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.457921158 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.610668511 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.499562878 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.993821609 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.458753244 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.475494591 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.47840688 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.457998091 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.00656004 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.463644229 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.557727005 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.460475691 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.740686265 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.854878327 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.818587432 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.459296512 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.470901443 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.459694298 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.477686088 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9778182 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.837851368 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.461434395 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.461255005 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.985831964 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.461061921 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.46189325 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.461052096 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.717247988 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.459748281 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.462429007 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.461130793 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.478041217 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.46084605 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.496066348 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.562313144 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.99502561 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.461903979 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.461936455 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.488778791 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.462240541 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.465158034 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.463861311 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.461175607 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.839942618 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.656257537 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.463151099 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.838478865 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.000593178 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.466084491 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070928571 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.46148754 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.469161734 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.465481722 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.461739979 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.462206814 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986752677 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.481138773 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.461075733 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.820923296 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.464178264 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.768535275 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.480778968 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.460721668 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.061977533 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.472240675 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.478573245 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.45995467 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.462743077 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.461587251 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.467587064 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.748422913 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.508734612 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.461680475 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.4628858 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.485661881 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.462002168 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.477719681 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.46796589 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07124709 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.463174135 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.463236863 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.466104778 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.463565435 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.463319 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.46290877 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.462594678 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.741339599 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.463481079 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.480270863 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.464533644 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.464055172 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.469774084 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.554447016 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.471039468 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.788425424 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.466105993 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.465486846 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.468464673 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.468365226 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.462376612 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.464359617 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.471861021 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.370634745 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.769879081 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.483136152 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.463038821 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.46646571 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.465955334 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.477115337 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.464014128 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.525055715 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.465733125 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.28278159 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.497812826 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.469282957 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.465207816 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.468926498 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.474398524 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.47205616 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.465770829 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765522727 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.745635373 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.64499439 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.466778201 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.464642402 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.266116902 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.466440235 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.644655492 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.484149102 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.464083488 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.715380811 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.685346114 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.465686611 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.463804506 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.469474465 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.731687937 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.466084603 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804524299 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.030634056 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.463295261 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.475787337 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.279976442 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.188555845 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.465552874 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.465153501 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.758197295 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.481826628 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.463804473 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.463839987 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.464985081 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.465554785 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.466889396 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.469428687 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.464796266 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.464130868 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.519908192 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.65650137 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.481569912 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.472016435 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98021412 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.497097079 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.465757217 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.469781681 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.464016779 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.4652343 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.556804468 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.465349616 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.517230854 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.467105426 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.473039806 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.03809988 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.463858628 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.465264781 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.657848532 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.183527301 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.466110985 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.46497502 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.464055672 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.389627759 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007223705 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.472816754 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.783996908 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.473603243 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.507157691 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.46641958 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.532607542 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007316582 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.467847786 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.467007723 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.145357135 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.464230788 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.994090112 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.465772122 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.467290197 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.071898041 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.466174282 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.465559826 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.472014172 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.464686443 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.790441963 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.466775824 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.518691097 seconds)
  done (took 528.426297016 seconds)
done (took 689.573173645 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.463856656 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.467385052 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.457602575 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.469401115 seconds)
  done (took 11.201676674 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.504045231 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.471428899 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.480147256 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.47020074 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.481358138 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.469788601 seconds)
  done (took 10.220506527 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.46504196 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.464475238 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.472830783 seconds)
  done (took 8.743725643 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.690637149 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.492062958 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.833354358 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.478784188 seconds)
  done (took 9.839002818 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.480395107 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.480610615 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.480396206 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.48179786 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.504044837 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.506466811 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.481608767 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.484338929 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.507168515 seconds)
  done (took 14.748773405 seconds)
done (took 56.095527921 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.600294592 seconds)
    (2/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.575512294 seconds)
    (3/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.288137203 seconds)
    (4/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.653349344 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.533926018 seconds)
    (6/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.438325391 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.635783749 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.495503574 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.632925381 seconds)
    (10/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.727273897 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.330868648 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.494397793 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.698470337 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.700193922 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.467572602 seconds)
    (16/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.650490538 seconds)
    (17/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.639017238 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.465037604 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.17759406 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.543195902 seconds)
    (21/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.454538022 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.267427934 seconds)
    (23/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.463757771 seconds)
    (24/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.68861062 seconds)
    (25/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.494052392 seconds)
    (26/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.554348795 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.588905046 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.575825544 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.581818383 seconds)
    (30/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.451606722 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.577591601 seconds)
    (32/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.618862898 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.480460929 seconds)
    (34/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.68818265 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.552401259 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.318570166 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.589732712 seconds)
    (38/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.54271741 seconds)
    (39/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.540152097 seconds)
    (40/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.502381934 seconds)
    (41/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.578963915 seconds)
    (42/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.45133024 seconds)
    (43/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.631648159 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.57491689 seconds)
    (45/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.450944954 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.557069048 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.625089049 seconds)
    (48/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.531020601 seconds)
    (49/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.550376533 seconds)
    (50/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.594652158 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.469271027 seconds)
    (52/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.453723434 seconds)
    (53/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.465155309 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.564633391 seconds)
    (55/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.623363293 seconds)
    (56/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.530884944 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.775771021 seconds)
    (58/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.50475516 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.645584269 seconds)
    (60/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.359651797 seconds)
    (61/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.494353375 seconds)
    (62/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.451672094 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.797369136 seconds)
    (64/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.454979861 seconds)
    (65/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.684298005 seconds)
    (66/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.45871917 seconds)
    (67/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.136749456 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.578916257 seconds)
    (69/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.507162985 seconds)
    (70/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.453713473 seconds)
    (71/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.691386916 seconds)
    (72/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.45403888 seconds)
    (73/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.503062114 seconds)
    (74/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.453204111 seconds)
    (75/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.436969117 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.553774732 seconds)
    (77/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.722542702 seconds)
    (78/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.511204717 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.456391837 seconds)
    (80/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.482778221 seconds)
    (81/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.454186694 seconds)
    (82/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.459437555 seconds)
    (83/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.52948556 seconds)
    (84/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.171317967 seconds)
    (85/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.495164981 seconds)
    (86/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.221250624 seconds)
    (87/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.214882638 seconds)
    (88/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.456420129 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.574202237 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.557522038 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.581255073 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.555721322 seconds)
    (93/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.588815424 seconds)
    (94/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.131480545 seconds)
    (95/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.628145078 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.463898462 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.614685236 seconds)
    (98/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.500498064 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.590322478 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.498625863 seconds)
    (101/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.471867066 seconds)
    (102/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.552167724 seconds)
    (103/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.43180085 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.551065442 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.529601589 seconds)
    (106/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.504613346 seconds)
    (107/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.455824389 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.68443452 seconds)
    (109/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.452357195 seconds)
    (110/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.47766441 seconds)
    (111/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.602836907 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.594070177 seconds)
    (113/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.547690037 seconds)
    (114/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.454763725 seconds)
    (115/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.624869294 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.494994394 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.606642823 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.460054074 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.617382839 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.505472762 seconds)
    (121/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.454218147 seconds)
    (122/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.283789507 seconds)
    (123/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.454328414 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.740944065 seconds)
    (125/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.294743917 seconds)
    (126/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.287245187 seconds)
    (127/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.238694883 seconds)
    (128/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.455042592 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.453931201 seconds)
    (130/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.584348652 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.631720589 seconds)
    (132/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.53884291 seconds)
    (133/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.492900839 seconds)
    (134/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.512169497 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.599984358 seconds)
    (136/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.474947285 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.556396757 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.598352533 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.56391091 seconds)
    (140/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.455098412 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.569518676 seconds)
    (142/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.455709057 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.477284216 seconds)
    (144/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.553650499 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.531291771 seconds)
    (146/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.576403996 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.470859086 seconds)
    (148/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.330358147 seconds)
    (149/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.465122319 seconds)
    (150/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.466129978 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.568753265 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.508190197 seconds)
    (153/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.611784607 seconds)
    (154/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.283953339 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.600978457 seconds)
    (156/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.507411085 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.626144813 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.531859101 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.504721363 seconds)
    (160/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.636245494 seconds)
    (161/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.611964654 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.779131586 seconds)
    (163/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.18951339 seconds)
    (164/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.45971012 seconds)
    (165/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.551147507 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.472393664 seconds)
    (167/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.764805982 seconds)
    (168/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.654908818 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.494362823 seconds)
    (170/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.231686326 seconds)
    (171/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.584292254 seconds)
    (172/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.557553465 seconds)
    (173/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.58220819 seconds)
    (174/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.190354539 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.610435042 seconds)
    (176/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.328585671 seconds)
    (177/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.462267877 seconds)
    (178/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.511012508 seconds)
    (179/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.70392584 seconds)
    (180/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.601741267 seconds)
    (181/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.620516289 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.668076982 seconds)
    (183/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.535798497 seconds)
    (184/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.694399189 seconds)
    (185/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.602814447 seconds)
    (186/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.560756163 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.51134572 seconds)
    (188/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.458956911 seconds)
    (189/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.659720111 seconds)
    (190/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.814107131 seconds)
    (191/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.47283501 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.463954872 seconds)
  done (took 367.124574362 seconds)
done (took 368.466829729 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.500300581 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.562652518 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.481853554 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.482437423 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.482934259 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.475580528 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.497417771 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.482327117 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.492544334 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.495541712 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.475565833 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.487042868 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.495917631 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.490624601 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.516394722 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.481538716 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.484346991 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.490484698 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.495349064 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.494141225 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.485807267 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.484087797 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.503115008 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.483148121 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.492503687 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.49411954 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.4884321 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.483193087 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.487661692 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.492716896 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.474851216 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.490733816 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.494222805 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.493083767 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.486717343 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.490096232 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.487488195 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.565395468 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.498604462 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.490720671 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.487121195 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.495166271 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.488783812 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.488408846 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.494224066 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.502074571 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.493902953 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.501233488 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.488550974 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.487541809 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.502430934 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.495241468 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.485573927 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.484713118 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.476196393 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.502321555 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.492541501 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.50261008 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.488277187 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.487733656 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.51939666 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.503811382 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.494123925 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.495009109 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.488743528 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.500439347 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.492509127 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.495866126 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.488799051 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.490352787 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.488528753 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.49094301 seconds)
done (took 116.881697302 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.61410243 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.483781899 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.625089682 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.49299442 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.651308648 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.62265266 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.492272925 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.490969086 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.491438945 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.316077203 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.491927995 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.491709339 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.486045876 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.492084435 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.621826143 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.493576096 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.490695103 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.204035952 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.49310319 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.632105556 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.481372487 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.492075569 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.491467997 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.315772895 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.484621922 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.482888249 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.632113134 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.492998841 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.206954826 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.484921701 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.482445875 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.204241182 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.638185713 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.50927345 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.50242118 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.500297539 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.652840101 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.495057047 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.618179524 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.616459693 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.630752981 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.530651696 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.482051161 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.487881737 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.495321784 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.49445743 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.492367825 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.518576341 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.488502984 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.492125346 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.209598979 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.505873906 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.493919441 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.493328778 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.492182068 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.522067762 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.49409404 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.495717004 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.636764233 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.49401798 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.621750024 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.316451342 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.321212027 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.497071992 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.485898113 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.494115665 seconds)
  done (took 119.00401382 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.55649454 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.563541179 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.601272947 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.488884224 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.540419807 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.603754853 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.490044666 seconds)
  done (took 12.1986214 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.495405718 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.496909919 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.537903812 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.539359621 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.494667502 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.648179468 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.496922407 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.500754023 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.493838099 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.54318793 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.497939446 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.49676917 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.504652356 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.489541974 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.538379816 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.503489667 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.606383895 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.490722929 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.495564553 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.645090015 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.495523915 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.504396291 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.542536224 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.501972554 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.498130442 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.49611305 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.264440804 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.496173417 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.494996448 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.499103101 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.495524866 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.546437464 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.497805943 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.492391899 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.495302441 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.607222667 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.497456755 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.495641022 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.499696343 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.495106332 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.50048099 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.497504441 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.501492071 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.496587783 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.501799946 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.515451948 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.502127525 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.497352215 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.498747649 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.501583987 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.54310436 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.502126782 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.498716973 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.497825857 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.548830834 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.509419648 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.500281353 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.497948877 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.502151783 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.501097775 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.646557398 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.541730468 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.501543424 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.542477093 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499576103 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.502246884 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.50262524 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.500072052 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.585776126 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.498447997 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.542107224 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.50241429 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.676198609 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.519637448 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.500497288 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.499924452 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.497922112 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.49859276 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.489608288 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.500413376 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.497797612 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.498086055 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.501080032 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.499792336 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.498291799 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.654894564 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.604428384 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.499117355 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.509682614 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.503565943 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.500746621 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.548368293 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.499941661 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.49965103 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.547808597 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.610599022 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.550832183 seconds)
  done (took 153.480827397 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.509808285 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.508606841 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.500064837 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.52493965 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.495704585 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.496585147 seconds)
  done (took 10.39735589 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.498610701 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.502206304 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.502093209 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.499801714 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.502831627 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.506405838 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.508557957 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.499198145 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.505846295 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.504923718 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.505813172 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.508908916 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.513183734 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.503515562 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.506698872 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.506524626 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.507805883 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.501192819 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.502333579 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.503365145 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.497968823 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.50557005 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.5035491 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.499221502 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.506587639 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.505947308 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.521339955 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.506682259 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.502234996 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.505545325 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.506061785 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.507187014 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.499986044 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.502999368 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.513921978 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.501117001 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.507361063 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.510584617 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.504551239 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.508748857 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.510951808 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.504820662 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.507026197 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.511711144 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.501699664 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.504772406 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.514557481 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.521806553 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.510079808 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.510095718 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.511110869 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.507086037 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.509436655 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.512687853 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.502854089 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.50280358 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.513723832 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.512073319 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.505809563 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.503409813 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.507233966 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.511075111 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.501800707 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.513037474 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.506475454 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.513500305 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.503787489 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.5087844 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.507110449 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.507734071 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.512968837 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.507271661 seconds)
  done (took 110.851596234 seconds)
done (took 407.284083136 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.784405352 seconds)
  done (took 4.150859524 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.566901893 seconds)
  done (took 3.934414854 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.050697353 seconds)
  done (took 25.42529806 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.528495064 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.5839191 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.502269697 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.498574471 seconds)
  done (took 11.481365113 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.78238667 seconds)
  done (took 4.149679852 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.501075481 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.499611353 seconds)
  done (took 6.368379927 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.770276684 seconds)
  done (took 4.137812544 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.853001935 seconds)
  done (took 4.229262488 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.528088847 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.517299212 seconds)
  done (took 6.418513583 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.483833931 seconds)
  done (took 3.850617894 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.963919357 seconds)
  done (took 22.329427706 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.52473507 seconds)
  done (took 3.894630484 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.53721848 seconds)
  done (took 3.904888446 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.030683737 seconds)
  done (took 6.397192599 seconds)
done (took 112.038657782 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.496856069 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.496347884 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.498226986 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.496663778 seconds)
  done (took 11.354926005 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.563514256 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.562533907 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.569244096 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.562396996 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.561338522 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.562112654 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.536214535 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.536438551 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.560755404 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.562946626 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.567837352 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.563319942 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.562757542 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.53558755 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.561499445 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.569201022 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.562238695 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.568953372 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.535619922 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.564087125 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.514325921 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.562863409 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.561770723 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.510480307 seconds)
  done (took 38.686156983 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.072512162 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.576539798 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.658946674 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.555242209 seconds)
  done (took 8.230475661 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.590041711 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.593447304 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.611142492 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.645894538 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.674766593 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.610927349 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.541582816 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.533938282 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.520732459 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.595990612 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.645937701 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.581146416 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.680620167 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.513537354 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.728661353 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.512515067 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.513087824 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.594546772 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.647303859 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.673728937 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.513635056 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.592627804 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.599991445 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.583642896 seconds)
  done (took 39.66898783 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.517090655 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.530254717 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.511640703 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.525594676 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.511848377 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.512828919 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.514391405 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.517750225 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.510823594 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.511776793 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.513004607 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.526157483 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.513094522 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.513962447 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.520788676 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.512488834 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.513401417 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.520536439 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.520946583 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.512472765 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.51165852 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.519078835 seconds)
  done (took 34.732268545 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.50098138 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.501319743 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.851602462 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.756710099 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.501015532 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.500913559 seconds)
  done (took 14.982441768 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.578621012 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.713875796 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.508106733 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.85400879 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.940008434 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.508259228 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.508904699 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.752509239 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.048075274 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.04116902 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.572813058 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.578982661 seconds)
  done (took 21.9768748 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.509774176 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.50501309 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.506845501 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.520859695 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.563122981 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.51101287 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.514436161 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.500194935 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.570269217 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.565898584 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.512420061 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.568456205 seconds)
  done (took 23.721536632 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597786515 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.510122514 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.51358225 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540348217 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507939327 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355976886 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.546627601 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.216525466 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.51275554 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78621823 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510712017 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600012361 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.765420692 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521645472 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.510072359 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.490950849 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.739788572 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017936202 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513430828 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519212648 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543218833 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.516454883 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.5171072 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.727888769 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360050945 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511890933 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.772367886 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.511852977 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800491183 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.783125445 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783558816 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518161083 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788106101 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152094737 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608384248 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722002628 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514152953 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517878868 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.507763676 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.510951605 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535288928 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.515819473 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776363082 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519972103 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.513230884 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514207394 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225078827 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.518647653 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.51306064 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.513234293 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.77919542 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616191432 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.515675631 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514097949 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589999198 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516264306 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.516977644 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63891372 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075999094 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51215128 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520514327 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.513223084 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.51513557 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533388887 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143538579 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.518557756 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.518192089 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517114522 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515114285 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.527470535 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537154956 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515969049 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.532560141 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516095424 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245654946 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.525880677 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51617334 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078983158 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528884077 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.51607293 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744829937 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514275171 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515641709 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.512105019 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.51589859 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219286428 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521496316 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.49363604 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575500715 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.22025919 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.726306378 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544033992 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545560888 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.736055638 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.495475874 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517325631 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.528174849 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519193445 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537866645 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224242825 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51600933 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.520990234 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773479507 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.72682106 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532347311 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.505177126 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001137134 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518550981 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.541148233 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.519975346 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.734697239 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.130956716 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78728182 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522742801 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552277643 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516545566 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278414153 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5318983 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.524240276 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.518166614 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.807640876 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.320193757 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516592322 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585548626 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524106988 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.518877673 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531628906 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519869155 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.520698575 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.72975699 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535399205 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.785231417 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.525926081 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519793823 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.519063781 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52097348 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.522085072 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.740618447 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527114157 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795416514 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518517755 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52085872 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520937388 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.74225187 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.517332331 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.531922813 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781936946 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532061984 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.530706869 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786768832 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554162104 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631321458 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551000982 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.534727583 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.776701548 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.527108599 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.52544968 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534247274 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523393895 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521327712 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.527087875 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516268805 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15673564 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493026076 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.525190218 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.522390453 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.534527148 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590458737 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528865825 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.73553681 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.523875485 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525845409 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.532606979 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.530243155 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751837286 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789594871 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.535995416 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59846515 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.003037751 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13597172 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534017736 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.521282242 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.521998423 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.519628325 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521383881 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520835283 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.523523075 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734629065 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791749599 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.527095804 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146888178 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523251756 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.533053563 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.528836659 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788845799 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.534783471 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523620214 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.523425875 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532143021 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53182532 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.795385031 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666091545 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.537298412 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.52317986 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.084555462 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528691178 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.521596693 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526112153 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555218587 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.535904208 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368270242 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.78470913 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529789755 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795695799 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.54146765 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.54536222 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.522607223 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527822046 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525239118 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.563729735 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537084157 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.737045437 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.524130107 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528082161 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08603597 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281278514 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084808122 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534788102 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.528092194 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.547909793 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24056048 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525624465 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527759828 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758979608 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238824384 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526697781 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010276589 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.526082429 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.28509836 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800705968 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763670235 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.533577159 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.532737158 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797082401 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.743369732 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559706223 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.527678642 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550041825 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.507799549 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0847616 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538515761 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605595307 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239506493 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534568221 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.532297695 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.572756615 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.529060296 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919665454 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.527501038 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529550574 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.532770956 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.549690753 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374236001 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.531172438 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529316814 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160596261 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.530898498 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.017684101 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528587441 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.739849395 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.794368153 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.801679837 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.542676595 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.541137713 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.781009514 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795594695 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53536066 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.529110912 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105762856 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.395101925 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.538009226 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52920056 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289540479 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534916895 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83088252 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.545168563 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.540645086 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532225529 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.532613422 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531196326 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.52943067 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.536083146 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505921663 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03267778 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.529932894 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542179998 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54814836 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53588068 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.784719986 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.545506912 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.148859394 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757755609 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528223621 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.586632584 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.537825932 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542798125 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.5160951 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.532533356 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.532012044 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614765001 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.756341631 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.540129338 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.512572743 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.571725804 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.74404239 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.53398002 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.54794657 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758594793 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.533517692 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.557656118 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289108388 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561802933 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.544240072 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535523305 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.530249666 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578453571 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600060141 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.746582645 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.799395593 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.807161549 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932096195 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546375208 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53423047 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.547854407 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628041196 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533554501 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.544649919 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.311554947 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155728637 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28376293 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.153527387 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801882977 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.539303513 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542840777 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533559044 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670017257 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.533073028 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.808283992 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536568026 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.535748089 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580570394 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548736075 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535968093 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76715165 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809247256 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532849632 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538755018 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540414719 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.534360755 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80531365 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.7493434 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037763233 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098027428 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535294828 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.547585298 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254793477 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.807774948 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536126214 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.536892734 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535468317 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.537518581 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.545131717 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.542626392 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535694389 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672003525 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802292801 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186559695 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.803099692 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.579570876 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.054301661 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536247534 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.789038389 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305016897 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.749005561 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156643552 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267770853 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798562665 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605583609 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748440892 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.534086028 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673787205 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.540258082 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.537561073 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537379847 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535566579 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.537111424 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.805791517 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166780387 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801034969 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.541566523 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.541914869 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566833014 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.750439265 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.759178262 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255675255 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.75936782 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809344216 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.550517049 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.540122496 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162967526 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808647355 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545600855 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.543127941 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764839921 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.538036406 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566363603 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.057996478 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.538631221 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10291447 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.428051336 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561633921 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542721152 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.280310166 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163988993 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.551244567 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043933257 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54107587 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553843108 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820471506 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.54500268 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.541211334 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82412999 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.543947187 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.541649691 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761338718 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.15643536 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.302201123 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.540391868 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547528213 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.541693933 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541282055 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580351152 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54139048 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54895513 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.959758687 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.540010346 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539414845 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553614148 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.547949283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540930081 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.545367656 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542845229 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.54881461 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.544082038 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.520816133 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.544198763 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689485099 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10066351 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54933163 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.217518045 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.86426832 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.794987678 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.540897721 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.528098571 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.54783199 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544281961 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543693334 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545316746 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.541141491 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11266858 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.543870125 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.820386472 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555263912 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.752992809 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754223318 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.542948443 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759537077 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544347966 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569637261 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.52110651 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543336462 seconds)
  done (took 1054.420857577 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.585777181 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.573203089 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.581590557 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.619251875 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.555104306 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.670698301 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.645555257 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.590698775 seconds)
  done (took 22.22189359 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.538319166 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.545459925 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.549162334 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.545932507 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.544550635 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.021437671 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.545301888 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.547009002 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.56211984 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.546760525 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.549610044 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.300313529 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.548082746 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.539634778 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.536852915 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.54780282 seconds)
  done (took 35.379151529 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.618690056 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.726700865 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.494310838 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.596968885 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.576392629 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.551383786 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.784766706 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.557621318 seconds)
  done (took 28.310884992 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.553751198 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.553281471 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.554095346 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.551406876 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.553993172 seconds)
  done (took 9.170662165 seconds)
done (took 1344.223013513 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.550632367 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.549478974 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.550790875 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.55075298 seconds)
  done (took 7.60505906 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.525209501 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.525111214 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.526847384 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.541434729 seconds)
  done (took 10.521412987 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.256715555 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.167738 seconds)
  done (took 5.827031989 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.04874185 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.050102696 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.043646765 seconds)
  done (took 7.544277081 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.882426324 seconds)
  done (took 3.286540481 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.484161149 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.540125627 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.23005417 seconds)
  done (took 8.659623894 seconds)
done (took 44.846308374 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.546765934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.789473107 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.696866326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.549163173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.704066128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.699083234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.347570658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.552875631 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.543661982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.567406481 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.553023565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.702220176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.263235377 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.78880379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.265377309 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.788025957 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.703585388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.542727391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.542470051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.553853888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.345545374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.541689091 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.546054265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.542054957 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.705852645 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.687154483 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.541348083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.788588853 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.547477183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.544756335 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.687559329 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.541464191 seconds)
  done (took 88.125451936 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.54822067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.546310366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.549135983 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.552686933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.544600412 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.550364296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.544205061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.543176673 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.543497142 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.543347643 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.556311333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.544513213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.547050921 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.543103146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.546019621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.544092196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.561775454 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.573907455 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.545323561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.542247509 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.545989176 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.545972341 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.560766585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.544399278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.556418976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.545701017 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.563838659 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.546768734 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.546588721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.556043544 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.546674882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.573918384 seconds)
  done (took 83.010655416 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.549530503 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.54557108 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.562241903 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.54773704 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.557586589 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.547745942 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.545313247 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.556195272 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.547008105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.544868614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.5453521 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.556848823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.5486195 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.547598935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.550914681 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.547675506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.551224243 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.5586149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.551028987 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.547227029 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.549656497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.546508283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.568186158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.546795402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.567551688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.546685413 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.547104525 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.548738768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.548725782 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.566593988 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.549590819 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.547866935 seconds)
  done (took 83.052799665 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.787405096 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.562192902 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.567848115 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.557747852 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.565378898 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.561428413 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.557945029 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.792167523 seconds)
  done (took 16.363204001 seconds)
done (took 271.955079169 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.552012147 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.067985166 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.57875598 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.552421663 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.580078285 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.578034683 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.776483185 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.579988378 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.778649273 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.572538394 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.587915286 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.55389085 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.364868833 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.705893795 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.419247765 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.54984225 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.452422682 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.549940935 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.14427411 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.84141353 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.579731448 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.55207219 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.414234807 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.463707722 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.534935525 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.661198373 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.655750762 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.781819397 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.717310203 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.636865182 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.082925694 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.555705047 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.563124599 seconds)
  done (took 70.398968371 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.556909949 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.562808373 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.565413057 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.564038072 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.562005811 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.567354861 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.55718854 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.565235592 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.566070671 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.564810269 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.565139635 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.565257281 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.563424233 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.56342397 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.562364628 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.547389322 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.557481667 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.563014355 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.55776273 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.547769413 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.562550917 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.566657864 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.565443946 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.56186965 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.56614112 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.565821089 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.5635481 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.565257499 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.562926296 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.5630266 seconds)
  done (took 48.280425161 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.566836088 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.134421579 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.29538196 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.566072278 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.558709701 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.561216015 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.848922913 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.567798397 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.563385506 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.564634978 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.062445299 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.570205526 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.593585566 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.306031045 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.565792142 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.568169895 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.569005598 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.563367431 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.141505358 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.571126569 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.846443486 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.570349367 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.849912226 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.570874748 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.564785464 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.56387818 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.566206918 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.374966476 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.580257531 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.061533318 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.356687176 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.849052224 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.316709849 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.353083954 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.358329123 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.575606254 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.570639309 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.06656848 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.563831295 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.561501875 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.847108862 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.563250001 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.310695148 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.235092719 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.57947454 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.570153867 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.416953663 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.06825079 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.806970183 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.569330574 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.347230881 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.566136796 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.571857101 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.563963169 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.806266349 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.567538261 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.563677855 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.421143932 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.569303574 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.850595458 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.572940113 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.565410352 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.14281729 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.565787641 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.14284099 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.566133811 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.572583917 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.56614168 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.31232126 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.568823182 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.264679907 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.581592357 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.572178828 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.065698044 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.13600099 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.454743629 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.566873027 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.141405989 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.345954535 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.866205833 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.568801487 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.352920933 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.86692092 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.568509077 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.575968034 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.574529419 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.572426674 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.637207501 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.846823623 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.184348957 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.256624454 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.432578442 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.85318857 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.57533717 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.567358008 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.431435874 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.5743647 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.574824564 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.30388643 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.269263065 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.583773094 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.572982509 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.245084556 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.586759709 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.852500108 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.572996711 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.352527743 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.567583338 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.668103633 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.576235371 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.574637781 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.570442521 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.852917124 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.571949562 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.576219344 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.240788394 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.098764226 seconds)
  done (took 215.298298653 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.562008175 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.561520794 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.563470077 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.562013412 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.561781459 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.571543065 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.56290566 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.563237473 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.567179335 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.561782288 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.562747424 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.572715004 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.569470966 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.562160675 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.564107718 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.564324486 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.562425631 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.5818715 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.563614235 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.563324591 seconds)
  done (took 48.727513975 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.57635961 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.127900668 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.102767911 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.577026695 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.573673207 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.568920355 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.625250195 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.574966367 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.57379135 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.866365934 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.744517146 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.583202455 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.575004518 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.575669493 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.100118836 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.558619178 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.866494619 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.125839096 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.579224095 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.125022007 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.558136986 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.577156914 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.568030342 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.12548446 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.876043052 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.857006209 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.63095934 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.127679048 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.578069146 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.576804613 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.124872342 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.580659664 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.570146358 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.120228273 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.581112731 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.593392229 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.575276908 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.631770762 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.632111063 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.871066133 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.133748105 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.866805017 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.589983552 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.749682741 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.583363411 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.560059447 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.136203717 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.581969082 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.560290285 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.579943371 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.583992686 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.113799728 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.576726153 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.111879276 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.578361667 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.582032804 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.12887903 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.112300688 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.106569316 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.746853419 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.574029088 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.859228711 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.579723587 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.138137927 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.581876397 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.58243985 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.579787179 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.748239179 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.132249397 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.861773432 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.875061287 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.873708335 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.583887565 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.638032191 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.580851525 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.874518591 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.638973688 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.990459732 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.879500989 seconds)
  done (took 140.738506716 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.847752865 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.689918884 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.947478995 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.160296385 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.077359174 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.713433292 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.686821216 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.822245702 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.579441628 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.663642646 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.212781654 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.680136375 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.341796868 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.652948868 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.682170698 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.708403036 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.967268105 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.581459874 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.240501089 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.18803844 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.574802872 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.705519848 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.102481922 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.762133701 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.570827838 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.145472952 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.509034142 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.089437564 seconds)
  done (took 58.331176584 seconds)
done (took 583.184466147 seconds)
SAVING RESULT...
DONE!
